

repeat wait(.1) until game:IsLoaded()
--_G.SaveConfig = true
if _G.Kaitan then
    _G.clickto = true
end


--GUI.TitleFrame.ErrorTitle.Text == "Disconnected" and
--game.CoreGui.RobloxPromptGui.promptOverlay:FindFirstChild("ErrorPrompt").MessageArea.ErrorFrame.ErrorMessage.Text
join = game.Players.localPlayer.Neutral == false
if _G.ChooseTeam == nil then
    _G.ChooseTeam = "Pirates"
end
function clickcheck(a)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X/2,a.AbsolutePosition.Y+50,0,true,a,1)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X/2,a.AbsolutePosition.Y+50,0,false,a,1)
end
if (_G.ChooseTeam == "Pirates" or _G.ChooseTeam == "Marines") and not join then
    repeat wait()
        pcall(function()
            join = game.Players.localPlayer.Neutral == false
            if _G.ChooseTeam == "Pirates" then
				clickcheck(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton)
            elseif _G.ChooseTeam == "Marines" then
				clickcheck(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.ViewportFrame.TextButton)
			else
				clickcheck(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton)
            end
        end)
    until join == true
end

wait(3)
pcall(function()
	--[[
	local ggez = game:GetService("UserInputService")
	if game:GetService("CoreGui"):FindFirstChild("DevConsoleMaster") then
		game:GetService("CoreGui"):FindFirstChild("DevConsoleMaster"):Destroy()
	end
	ggez.InputBegan:Connect(function(io, p)
		if io.KeyCode == Enum.KeyCode.F9 then
			wait()
			if game:GetService("CoreGui"):FindFirstChild("DevConsoleMaster") then
				spawn(function()
					wait()
					game:GetService("CoreGui"):FindFirstChild("DevConsoleMaster"):Destroy()
				end)
			
			end
		end
	end)

	game:GetService("Players").LocalPlayer.PlayerGui.Main.Compass.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.Energy.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.HP.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.AlliesButton.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.Code.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.CrewButton.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.HomeButton.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.Mute.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.Settings.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.MenuButton.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.Beli.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.Fragments.Visible = true
	game:GetService("Players").LocalPlayer.PlayerGui.Main.Level.Visible = true
	--game:GetService("Players").LocalPlayer.PlayerGui.Main.Loading.Visible = false
	game:GetService("Players").LocalPlayer.PlayerGui.LoadingScreen.Enabled = false
	]]
end)
local godes
godes = function() repeat game:Shutdown() until nil end
if _G.eghgrthrtyhj then
    game.Players.LocalPlayer:Kick("\nอย่ารันซ้ำหลายครั้ง")
    wait(1)
    godes()
end

if isnetworkowner == nil then
local game = game
local wait = wait
local typeof = typeof
local IsA = game.IsA
local rawget = rawget
local rawset = rawset
local coroutine_wrap = coroutine.wrap
local coroutine_yield = coroutine.yield
local getfenv = getfenv
local WaitForChild = game.WaitForChild
local IsDescendantOf = game.IsDescendantOf
local newcclosure = newcclosure or function(p1)
	return coroutine_wrap(function(...)
	while true do
	coroutine_yield(p1(...))
	end
	end)
	end
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Wait, Connect, Disconnect = (function()
    local A = game.Changed
    local B = A.Connect
    return A.Wait, B, B(A, function()end).Disconnect
end)()
local env = (getgenv and getgenv or getrenv and getrenv or getfenv)()
local env_add = function(p1, p2, p3, p4)
    if rawget(env, p1) then return end
    if p4 and not rawget(env, p4) then return end
    rawset((p4 and env[p4] or env), p1, (p3 and newcclosure or function(p1) 
    return p1
    end)(p2))
end

env_add("isnetworkowner", function(p1)
    local A = LocalPlayer.SimulationRadius
    local B = LocalPlayer.Character or Wait(LocalPlayer.CharacterAdded)
    local C = WaitForChild(B, "HumanoidRootPart", 250)
    if C then
        if p1.Anchored then
            return false
        end
        if IsDescendantOf(p1, B) or (C.Position - p1.Position).Magnitude <= A then
            return true
        end
    end
    return false
end, true)
end
local godroot = Instance.new("ScreenGui")
local fruit = Instance.new("Folder")
local Leopard = Instance.new("ImageLabel")
local venom = Instance.new("ImageLabel")
local strings = Instance.new("ImageLabel")
local spring = Instance.new("ImageLabel")
local spin = Instance.new("ImageLabel")
local barrier = Instance.new("ImageLabel")
local spike = Instance.new("ImageLabel")
local soul = Instance.new("ImageLabel")
local smoke = Instance.new("ImageLabel")
local shadow = Instance.new("ImageLabel")
local sand = Instance.new("ImageLabel")
local rumble = Instance.new("ImageLabel")
local gum = Instance.new("ImageLabel")
local revive = Instance.new("ImageLabel")
local quake = Instance.new("ImageLabel")
local pheonix = Instance.new("ImageLabel")
local paw = Instance.new("ImageLabel")
local magma = Instance.new("ImageLabel")
local love = Instance.new("ImageLabel")
local light = Instance.new("ImageLabel")
local kilo = Instance.new("ImageLabel")
local ice = Instance.new("ImageLabel")
local gravity = Instance.new("ImageLabel")
local flame = Instance.new("ImageLabel")
local dragon = Instance.new("ImageLabel")
local dough = Instance.new("ImageLabel")
local door = Instance.new("ImageLabel")
local diamond = Instance.new("ImageLabel")
local dark = Instance.new("ImageLabel")
local control = Instance.new("ImageLabel")
local falcon = Instance.new("ImageLabel")
local bomb = Instance.new("ImageLabel")
local budda = Instance.new("ImageLabel")
local chop = Instance.new("ImageLabel")
local msg = Instance.new("Folder")
local msg1 = Instance.new("TextLabel")
local msg10 = Instance.new("TextLabel")
local msg2 = Instance.new("TextLabel")
local msg3 = Instance.new("TextLabel")
local msg4 = Instance.new("TextLabel")
local msg5 = Instance.new("TextLabel")
local msg6 = Instance.new("TextLabel")
local msg7 = Instance.new("TextLabel")
local msg8 = Instance.new("TextLabel")
local msg9 = Instance.new("TextLabel")
local combat = Instance.new("Folder")
local superhuman = Instance.new("ImageLabel")
local godhuman = Instance.new("ImageLabel")
local sharkman = Instance.new("ImageLabel")
local karate = Instance.new("ImageLabel")
local electro = Instance.new("ImageLabel")
local elecclaw = Instance.new("ImageLabel")
local talon = Instance.new("ImageLabel")
local dragonclaw = Instance.new("ImageLabel")
local deathstep = Instance.new("ImageLabel")
local blackleg = Instance.new("ImageLabel")
local boot = Instance.new("Folder")
local darkblade = Instance.new("ImageLabel")
local money = Instance.new("ImageLabel")
local drop = Instance.new("ImageLabel")
local boat = Instance.new("ImageLabel")
local mastery = Instance.new("ImageLabel")
local fruit_2 = Instance.new("ImageLabel")


--Properties:

godroot.Name = "godroot"
godroot.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
godroot.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

fruit.Name = "fruit"
fruit.Parent = godroot


Leopard.Name = "Leopard"
Leopard.Parent = fruit
Leopard.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
Leopard.BorderSizePixel = 0
Leopard.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
Leopard.Size = UDim2.new(0, 100, 0, 100)
Leopard.Visible = false

Leopard.Selectable = true
Leopard.Active = true
Leopard.Draggable = true
Leopard.Image = "rbxassetid://10338473108"


venom.Name = "venom"
venom.Parent = fruit
venom.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
venom.BorderSizePixel = 0
venom.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
venom.Size = UDim2.new(0, 100, 0, 100)
venom.Visible = false

venom.Selectable = true
venom.Active = true
venom.Draggable = true
venom.Image = "rbxassetid://10711060124"


strings.Name = "string"
strings.Parent = fruit
strings.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
strings.BorderSizePixel = 0
strings.Position = UDim2.new(0.439532608, 0, 0.48780489, 0)
strings.Size = UDim2.new(0, 100, 0, 100)
strings.Visible = false

strings.Selectable = true
strings.Active = true
strings.Draggable = true
strings.Image = "rbxassetid://10711059080"

spring.Name = "spring"
spring.Parent = fruit
spring.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
spring.BorderSizePixel = 0
spring.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
spring.Size = UDim2.new(0, 100, 0, 100)
spring.Visible = false

spring.Selectable = true
spring.Active = true
spring.Draggable = true
spring.Image = "rbxassetid://10711058273"

spin.Name = "spin"
spin.Parent = fruit
spin.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
spin.BorderSizePixel = 0
spin.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
spin.Size = UDim2.new(0, 100, 0, 100)
spin.Visible = false

spin.Selectable = true
spin.Active = true
spin.Draggable = true
spin.Image = "rbxassetid://10711057151"

barrier.Name = "barrier"
barrier.Parent = fruit
barrier.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
barrier.BorderSizePixel = 0
barrier.Position = UDim2.new(0.439532638, 0, 0.48780489, 0)
barrier.Size = UDim2.new(0, 100, 0, 100)
barrier.Visible = false

barrier.Selectable = true
barrier.Active = true
barrier.Draggable = true
barrier.Image = "rbxassetid://10710502760"

spike.Name = "spike"
spike.Parent = fruit
spike.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
spike.BorderSizePixel = 0
spike.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
spike.Size = UDim2.new(0, 100, 0, 100)
spike.Visible = false

spike.Selectable = true
spike.Active = true
spike.Draggable = true
spike.Image = "rbxassetid://10711056170"

soul.Name = "soul"
soul.Parent = fruit
soul.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
soul.BorderSizePixel = 0
soul.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
soul.Size = UDim2.new(0, 100, 0, 100)
soul.Visible = false

soul.Selectable = true
soul.Active = true
soul.Draggable = true
soul.Image = "rbxassetid://10711055004"

smoke.Name = "smoke"
smoke.Parent = fruit
smoke.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
smoke.BorderSizePixel = 0
smoke.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
smoke.Size = UDim2.new(0, 100, 0, 100)
smoke.Visible = false

smoke.Selectable = true
smoke.Active = true
smoke.Draggable = true
smoke.Image = "rbxassetid://10711054196"

shadow.Name = "shadow"
shadow.Parent = fruit
shadow.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
shadow.BorderSizePixel = 0
shadow.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
shadow.Size = UDim2.new(0, 100, 0, 100)
shadow.Visible = false

shadow.Selectable = true
shadow.Active = true
shadow.Draggable = true
shadow.Image = "rbxassetid://10711052774"

sand.Name = "sand"
sand.Parent = fruit
sand.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
sand.BorderSizePixel = 0
sand.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
sand.Size = UDim2.new(0, 100, 0, 100)
sand.Visible = false

sand.Selectable = true
sand.Active = true
sand.Draggable = true
sand.Image = "rbxassetid://10711051146"

rumble.Name = "rumble"
rumble.Parent = fruit
rumble.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
rumble.BorderSizePixel = 0
rumble.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
rumble.Size = UDim2.new(0, 100, 0, 100)
rumble.Visible = false

rumble.Selectable = true
rumble.Active = true
rumble.Draggable = true
rumble.Image = "rbxassetid://10711050091"

gum.Name = "gum"
gum.Parent = fruit
gum.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
gum.BorderSizePixel = 0
gum.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
gum.Size = UDim2.new(0, 100, 0, 100)
gum.Visible = false

gum.Selectable = true
gum.Active = true
gum.Draggable = true
gum.Image = "rbxassetid://10711048562"

revive.Name = "revive"
revive.Parent = fruit
revive.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
revive.BorderSizePixel = 0
revive.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
revive.Size = UDim2.new(0, 100, 0, 100)
revive.Visible = false

revive.Selectable = true
revive.Active = true
revive.Draggable = true
revive.Image = "rbxassetid://10711047580"

quake.Name = "quake"
quake.Parent = fruit
quake.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
quake.BorderSizePixel = 0
quake.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
quake.Size = UDim2.new(0, 100, 0, 100)
quake.Visible = false

quake.Selectable = true
quake.Active = true
quake.Draggable = true
quake.Image = "rbxassetid://10711046486"

pheonix.Name = "pheonix"
pheonix.Parent = fruit
pheonix.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
pheonix.BorderSizePixel = 0
pheonix.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
pheonix.Size = UDim2.new(0, 100, 0, 100)
pheonix.Visible = false

pheonix.Selectable = true
pheonix.Active = true
pheonix.Draggable = true
pheonix.Image = "rbxassetid://10711045686"

paw.Name = "paw"
paw.Parent = fruit
paw.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
paw.BorderSizePixel = 0
paw.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
paw.Size = UDim2.new(0, 100, 0, 100)
paw.Visible = false

paw.Selectable = true
paw.Active = true
paw.Draggable = true
paw.Image = "rbxassetid://10711044455"

magma.Name = "magma"
magma.Parent = fruit
magma.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
magma.BorderSizePixel = 0
magma.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
magma.Size = UDim2.new(0, 100, 0, 100)
magma.Visible = false

magma.Selectable = true
magma.Active = true
magma.Draggable = true
magma.Image = "rbxassetid://10711043609"

love.Name = "love"
love.Parent = fruit
love.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
love.BorderSizePixel = 0
love.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
love.Size = UDim2.new(0, 100, 0, 100)
love.Visible = false

love.Selectable = true
love.Active = true
love.Draggable = true
love.Image = "rbxassetid://10711042819"

light.Name = "light"
light.Parent = fruit
light.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
light.BorderSizePixel = 0
light.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
light.Size = UDim2.new(0, 100, 0, 100)
light.Visible = false

light.Selectable = true
light.Active = true
light.Draggable = true
light.Image = "rbxassetid://10711041615"

kilo.Name = "kilo"
kilo.Parent = fruit
kilo.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
kilo.BorderSizePixel = 0
kilo.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
kilo.Size = UDim2.new(0, 100, 0, 100)
kilo.Visible = false

kilo.Selectable = true
kilo.Active = true
kilo.Draggable = true
kilo.Image = "rbxassetid://10711039436"

ice.Name = "ice"
ice.Parent = fruit
ice.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
ice.BorderSizePixel = 0
ice.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
ice.Size = UDim2.new(0, 100, 0, 100)
ice.Visible = false

ice.Selectable = true
ice.Active = true
ice.Draggable = true
ice.Image = "rbxassetid://10711038366"

gravity.Name = "gravity"
gravity.Parent = fruit
gravity.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
gravity.BorderSizePixel = 0
gravity.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
gravity.Size = UDim2.new(0, 100, 0, 100)
gravity.Visible = false

gravity.Selectable = true
gravity.Active = true
gravity.Draggable = true
gravity.Image = "rbxassetid://10711035178"

flame.Name = "flame"
flame.Parent = fruit
flame.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
flame.BorderSizePixel = 0
flame.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
flame.Size = UDim2.new(0, 100, 0, 100)
flame.Visible = false

flame.Selectable = true
flame.Active = true
flame.Draggable = true
flame.Image = "rbxassetid://10711033697"

dragon.Name = "dragon"
dragon.Parent = fruit
dragon.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
dragon.BorderSizePixel = 0
dragon.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
dragon.Size = UDim2.new(0, 100, 0, 100)
dragon.Visible = false

dragon.Selectable = true
dragon.Active = true
dragon.Draggable = true
dragon.Image = "rbxassetid://10711032325"

dough.Name = "dough"
dough.Parent = fruit
dough.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
dough.BorderSizePixel = 0
dough.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
dough.Size = UDim2.new(0, 100, 0, 100)
dough.Visible = false

dough.Selectable = true
dough.Active = true
dough.Draggable = true
dough.Image = "rbxassetid://10711028141"

door.Name = "door"
door.Parent = fruit
door.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
door.BorderSizePixel = 0
door.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
door.Size = UDim2.new(0, 100, 0, 100)
door.Visible = false

door.Selectable = true
door.Active = true
door.Draggable = true
door.Image = "rbxassetid://10711027213"

diamond.Name = "diamond"
diamond.Parent = fruit
diamond.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
diamond.BorderSizePixel = 0
diamond.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
diamond.Size = UDim2.new(0, 100, 0, 100)
diamond.Visible = false

diamond.Selectable = true
diamond.Active = true
diamond.Draggable = true
diamond.Image = "rbxassetid://10711026387"

dark.Name = "dark"
dark.Parent = fruit
dark.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
dark.BorderSizePixel = 0
dark.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
dark.Size = UDim2.new(0, 100, 0, 100)
dark.Visible = false

dark.Selectable = true
dark.Active = true
dark.Draggable = true
dark.Image = "rbxassetid://10711025668"

control.Name = "control"
control.Parent = fruit
control.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
control.BorderSizePixel = 0
control.Position = UDim2.new(0.439532638, 0, 0.48780486, 0)
control.Size = UDim2.new(0, 100, 0, 100)
control.Visible = false

control.Selectable = true
control.Active = true
control.Draggable = true
control.Image = "rbxassetid://10711024837"

falcon.Name = "falcon"
falcon.Parent = fruit
falcon.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
falcon.BorderSizePixel = 0
falcon.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
falcon.Size = UDim2.new(0, 100, 0, 100)
falcon.Visible = false

falcon.Selectable = true
falcon.Active = true
falcon.Draggable = true
falcon.Image = "rbxassetid://10711020134"

bomb.Name = "bomb"
bomb.Parent = fruit
bomb.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
bomb.BorderSizePixel = 0
bomb.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
bomb.Size = UDim2.new(0, 100, 0, 100)
bomb.Visible = false

bomb.Selectable = true
bomb.Active = true
bomb.Draggable = true
bomb.Image = "rbxassetid://10711019356"

budda.Name = "budda"
budda.Parent = fruit
budda.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
budda.BorderSizePixel = 0
budda.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
budda.Size = UDim2.new(0, 100, 0, 100)
budda.Visible = false

budda.Selectable = true
budda.Active = true
budda.Draggable = true
budda.Image = "rbxassetid://10711020911"

chop.Name = "chop"
chop.Parent = fruit
chop.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
chop.BorderSizePixel = 0
chop.Position = UDim2.new(0.439999998, 0, 0.488000005, 0)
chop.Size = UDim2.new(0, 100, 0, 100)
chop.Visible = false

chop.Selectable = true
chop.Active = true
chop.Draggable = true
chop.Image = "rbxassetid://10711023631"

msg.Name = "msg"
msg.Parent = godroot

msg1.Name = "msg1"
msg1.Parent = msg
msg1.Active = true
msg1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
msg1.BackgroundTransparency = 1.000
msg1.Position = UDim2.new(0.0132450331, 0, 0.286178857, 0)
msg1.Selectable = true
msg1.Size = UDim2.new(0, 906, 0, 159)
msg1.Visible = false
msg1.Font = Enum.Font.Oswald
msg1.Text = ""
msg1.TextColor3 = Color3.fromRGB(0, 0, 0)
msg1.TextSize = 70.000

msg10.Name = "msg10"
msg10.Parent = msg
msg10.Active = true
msg10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
msg10.BackgroundTransparency = 1.000
msg10.Position = UDim2.new(0.0132450331, 0, 0.286178857, 0)
msg10.Selectable = true
msg10.Size = UDim2.new(0, 906, 0, 159)
msg10.Visible = false
msg10.Font = Enum.Font.Oswald
msg10.Text = ""
msg10.TextColor3 = Color3.fromRGB(0, 0, 0)
msg10.TextSize = 70.000

msg2.Name = "msg2"
msg2.Parent = msg
msg2.Active = true
msg2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
msg2.BackgroundTransparency = 1.000
msg2.Position = UDim2.new(0.0132450331, 0, 0.286178857, 0)
msg2.Selectable = true
msg2.Size = UDim2.new(0, 906, 0, 159)
msg2.Visible = false
msg2.Font = Enum.Font.Oswald
msg2.Text = ""
msg2.TextColor3 = Color3.fromRGB(0, 0, 0)
msg2.TextSize = 70.000

msg3.Name = "msg3"
msg3.Parent = msg
msg3.Active = true
msg3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
msg3.BackgroundTransparency = 1.000
msg3.Position = UDim2.new(0.0132450331, 0, 0.286178857, 0)
msg3.Selectable = true
msg3.Size = UDim2.new(0, 906, 0, 159)
msg3.Visible = false
msg3.Font = Enum.Font.Oswald
msg3.Text = ""
msg3.TextColor3 = Color3.fromRGB(0, 0, 0)
msg3.TextSize = 70.000

msg4.Name = "msg4"
msg4.Parent = msg
msg4.Active = true
msg4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
msg4.BackgroundTransparency = 1.000
msg4.Position = UDim2.new(0.0132450331, 0, 0.286178857, 0)
msg4.Selectable = true
msg4.Size = UDim2.new(0, 906, 0, 159)
msg4.Visible = false
msg4.Font = Enum.Font.Oswald
msg4.Text = ""
msg4.TextColor3 = Color3.fromRGB(0, 0, 0)
msg4.TextSize = 70.000

msg5.Name = "msg5"
msg5.Parent = msg
msg5.Active = true
msg5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
msg5.BackgroundTransparency = 1.000
msg5.Position = UDim2.new(0.0132450331, 0, 0.286178857, 0)
msg5.Selectable = true
msg5.Size = UDim2.new(0, 906, 0, 159)
msg5.Visible = false
msg5.Font = Enum.Font.Oswald
msg5.Text = ""
msg5.TextColor3 = Color3.fromRGB(0, 0, 0)
msg5.TextSize = 70.000

msg6.Name = "msg6"
msg6.Parent = msg
msg6.Active = true
msg6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
msg6.BackgroundTransparency = 1.000
msg6.Position = UDim2.new(0.0132450331, 0, 0.286178857, 0)
msg6.Selectable = true
msg6.Size = UDim2.new(0, 906, 0, 159)
msg6.Visible = false
msg6.Font = Enum.Font.Oswald
msg6.Text = ""
msg6.TextColor3 = Color3.fromRGB(0, 0, 0)
msg6.TextSize = 70.000

msg7.Name = "msg7"
msg7.Parent = msg
msg7.Active = true
msg7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
msg7.BackgroundTransparency = 1.000
msg7.Position = UDim2.new(0.0132450331, 0, 0.286178857, 0)
msg7.Selectable = true
msg7.Size = UDim2.new(0, 906, 0, 159)
msg7.Visible = false
msg7.Font = Enum.Font.Oswald
msg7.Text = ""
msg7.TextColor3 = Color3.fromRGB(0, 0, 0)
msg7.TextSize = 70.000

msg8.Name = "msg8"
msg8.Parent = msg
msg8.Active = true
msg8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
msg8.BackgroundTransparency = 1.000
msg8.Position = UDim2.new(0.0132450331, 0, 0.286178857, 0)
msg8.Selectable = true
msg8.Size = UDim2.new(0, 906, 0, 159)
msg8.Visible = false
msg8.Font = Enum.Font.Oswald
msg8.Text = ""
msg8.TextColor3 = Color3.fromRGB(0, 0, 0)
msg8.TextSize = 70.000

msg9.Name = "msg9"
msg9.Parent = msg
msg9.Active = true
msg9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
msg9.BackgroundTransparency = 1.000
msg9.Position = UDim2.new(0.0132450331, 0, 0.286178857, 0)
msg9.Selectable = true
msg9.Size = UDim2.new(0, 906, 0, 159)
msg9.Visible = false
msg9.Font = Enum.Font.Oswald
msg9.Text = ""
msg9.TextColor3 = Color3.fromRGB(0, 0, 0)
msg9.TextSize = 70.000

combat.Name = "combat"
combat.Parent = godroot

godhuman.Name = "godhuman"
godhuman.Parent = combat
godhuman.Active = true
godhuman.Draggable = true
godhuman.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
godhuman.BorderSizePixel = 0
godhuman.Position = UDim2.new(0.443947643, 0, 0.67479676, 0)
godhuman.Selectable = true
godhuman.Size = UDim2.new(0, 100, 0, 100)
godhuman.Visible = false
godhuman.Image = "rbxassetid://10338473987"

superhuman.Name = "superhuman"
superhuman.Parent = combat
superhuman.Active = true
superhuman.Draggable = true
superhuman.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
superhuman.BorderSizePixel = 0
superhuman.Position = UDim2.new(0.443947643, 0, 0.67479676, 0)
superhuman.Selectable = true
superhuman.Size = UDim2.new(0, 100, 0, 100)
superhuman.Visible = false
superhuman.Image = "rbxassetid://10719889289"

sharkman.Name = "sharkman"
sharkman.Parent = combat
sharkman.Active = true
sharkman.Draggable = true
sharkman.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
sharkman.BorderSizePixel = 0
sharkman.Position = UDim2.new(0.443947643, 0, 0.67479676, 0)
sharkman.Selectable = true
sharkman.Size = UDim2.new(0, 100, 0, 100)
sharkman.Visible = false
sharkman.Image = "rbxassetid://10712523671"

karate.Name = "karate"
karate.Parent = combat
karate.Active = true
karate.Draggable = true
karate.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
karate.BorderSizePixel = 0
karate.Position = UDim2.new(0.443947643, 0, 0.67479676, 0)
karate.Selectable = true
karate.Size = UDim2.new(0, 100, 0, 100)
karate.Visible = false
karate.Image = "rbxassetid://10712522920"

electro.Name = "electro"
electro.Parent = combat
electro.Active = true
electro.Draggable = true
electro.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
electro.BorderSizePixel = 0
electro.Position = UDim2.new(0.443947643, 0, 0.67479676, 0)
electro.Selectable = true
electro.Size = UDim2.new(0, 100, 0, 100)
electro.Visible = false
electro.Image = "rbxassetid://10712521528"

elecclaw.Name = "elecclaw"
elecclaw.Parent = combat
elecclaw.Active = true
elecclaw.Draggable = true
elecclaw.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
elecclaw.BorderSizePixel = 0
elecclaw.Position = UDim2.new(0.443947673, 0, 0.67479676, 0)
elecclaw.Selectable = true
elecclaw.Size = UDim2.new(0, 100, 0, 100)
elecclaw.Visible = false
elecclaw.Image = "rbxassetid://10712520684"

talon.Name = "talon"
talon.Parent = combat
talon.Active = true
talon.Draggable = true
talon.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
talon.BorderSizePixel = 0
talon.Position = UDim2.new(0.443947673, 0, 0.67479676, 0)
talon.Selectable = true
talon.Size = UDim2.new(0, 100, 0, 100)
talon.Visible = false
talon.Image = "rbxassetid://10712519577"

dragonclaw.Name = "dragonclaw"
dragonclaw.Parent = combat
dragonclaw.Active = true
dragonclaw.Draggable = true
dragonclaw.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
dragonclaw.BorderSizePixel = 0
dragonclaw.Position = UDim2.new(0.443947673, 0, 0.67479676, 0)
dragonclaw.Selectable = true
dragonclaw.Size = UDim2.new(0, 100, 0, 100)
dragonclaw.Visible = false
dragonclaw.Image = "rbxassetid://10712518611"

deathstep.Name = "deathstep"
deathstep.Parent = combat
deathstep.Active = true
deathstep.Draggable = true
deathstep.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
deathstep.BorderSizePixel = 0
deathstep.Position = UDim2.new(0.443947673, 0, 0.67479676, 0)
deathstep.Selectable = true
deathstep.Size = UDim2.new(0, 100, 0, 100)
deathstep.Visible = false
deathstep.Image = "rbxassetid://10712517778"

blackleg.Name = "blackleg"
blackleg.Parent = combat
blackleg.Active = true
blackleg.Draggable = true
blackleg.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
blackleg.BorderSizePixel = 0
blackleg.Position = UDim2.new(0.443947673, 0, 0.67479676, 0)
blackleg.Selectable = true
blackleg.Size = UDim2.new(0, 100, 0, 100)
blackleg.Visible = false
blackleg.Image = "rbxassetid://10712517041"



msg1.Draggable = true
msg2.Draggable = true
msg3.Draggable = true
msg4.Draggable = true
msg5.Draggable = true
msg6.Draggable = true
msg7.Draggable = true
msg8.Draggable = true
msg9.Draggable = true
msg10.Draggable = true


boot.Name = "boot"
boot.Parent = godroot

darkblade.Name = "darkblade"
darkblade.Parent = boot
darkblade.Active = true
darkblade.Draggable = true
darkblade.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
darkblade.BackgroundTransparency = 1.000
darkblade.BorderSizePixel = 0
darkblade.Position = UDim2.new(0.523, 0, 0.489, 0)
darkblade.Selectable = true
darkblade.Size = UDim2.new(0, 100, 0, 100)
darkblade.Visible = false
darkblade.Image = "rbxassetid://10719911584"

money.Name = "money"
money.Parent = boot
money.Active = true
money.Draggable = true
money.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
money.BackgroundTransparency = 1.000
money.BorderSizePixel = 0
money.Position = UDim2.new(0.523, 0, 0.489, 0)
money.Selectable = true
money.Size = UDim2.new(0, 100, 0, 100)
money.Visible = false
money.Image = "rbxassetid://10719911841"

drop.Name = "drop"
drop.Parent = boot
drop.Active = true
drop.Draggable = true
drop.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
drop.BackgroundTransparency = 1.000
drop.BorderSizePixel = 0
drop.Position = UDim2.new(0.523, 0, 0.489, 0)
drop.Selectable = true
drop.Size = UDim2.new(0, 100, 0, 100)
drop.Visible = false
drop.Image = "rbxassetid://10719912345"

boat.Name = "boat"
boat.Parent = boot
boat.Active = true
boat.Draggable = true
boat.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
boat.BackgroundTransparency = 1.000
boat.BorderSizePixel = 0
boat.Position = UDim2.new(0.523, 0, 0.489, 0)
boat.Selectable = true
boat.Size = UDim2.new(0, 100, 0, 100)
boat.Visible = false
boat.Image = "rbxassetid://10719911287"

mastery.Name = "mastery"
mastery.Parent = boot
mastery.Active = true
mastery.Draggable = true
mastery.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
mastery.BackgroundTransparency = 1.000
mastery.BorderSizePixel = 0
mastery.Position = UDim2.new(0.523, 0, 0.489, 0)
mastery.Selectable = true
mastery.Size = UDim2.new(0, 100, 0, 100)
mastery.Visible = false
mastery.Image = "rbxassetid://10719912070"

fruit_2.Name = "fruit"
fruit_2.Parent = boot
fruit_2.Active = true
fruit_2.Draggable = true
fruit_2.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
fruit_2.BackgroundTransparency = 1.000
fruit_2.BorderSizePixel = 0
fruit_2.Position = UDim2.new(0.523, 0, 0.489, 0)
fruit_2.Selectable = true
fruit_2.Size = UDim2.new(0, 100, 0, 100)
fruit_2.Visible = false
fruit_2.Image = "rbxassetid://10719910981"


local library = {
	Version = "0.34",
	WorkspaceName = "Root",
	flags = {},
	signals = {},
	objects = {},
	elements = {},
	globals = {},
	subs = {},
	colored = {},
	configuration = {
		hideKeybind = Enum.KeyCode.RightControl,
		smoothDragging = false,
		easingStyle = Enum.EasingStyle.Quart,
		easingDirection = Enum.EasingDirection.Out
	},
	colors = {
		main = Color3.fromRGB(255, 39, 39),
		background = Color3.fromRGB(40, 40, 40),
		outerBorder = Color3.fromRGB(15, 15, 15),
		innerBorder = Color3.fromRGB(73, 63, 73),
		topGradient = Color3.fromRGB(35, 35, 35),
		bottomGradient = Color3.fromRGB(29, 29, 29),
		sectionBackground = Color3.fromRGB(35, 34, 34),
		section = Color3.fromRGB(176, 175, 176),
		otherElementText = Color3.fromRGB(129, 127, 129),
		elementText = Color3.fromRGB(147, 145, 147),
		elementBorder = Color3.fromRGB(20, 20, 20),
		selectedOption = Color3.fromRGB(55, 55, 55),
		unselectedOption = Color3.fromRGB(40, 40, 40),
		hoveredOptionTop = Color3.fromRGB(65, 65, 65),
		unhoveredOptionTop = Color3.fromRGB(50, 50, 50),
		hoveredOptionBottom = Color3.fromRGB(45, 45, 45),
		unhoveredOptionBottom = Color3.fromRGB(35, 35, 35),
		tabText = Color3.fromRGB(185, 185, 185)
	},
	gui_parent = (function()
		local x, c = pcall(function()
			return game:GetService("CoreGui")
		end)
		if x and c then
			return c
		end
		x, c = pcall(function()
			return (game:IsLoaded() or (game.Loaded:Wait() or 1)) and game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
		end)
		if x and c then
			return c
		end
		x, c = pcall(function()
			return game:GetService("StarterGui")
		end)
		if x and c then
			return c
		end
		return error("Seriously bad exploit. Can't find a place to store the GUI. Robust code can't help here.")
	end)(),
	colorpicker = false,
	colorpickerconflicts = {},
	rainbowflags = {},
	rainbows = 0,
	rainbowsg = 0
}
library.Subs = library.subs
local library_flags = library.flags
local destroyrainbows, destroyrainbowsg = nil
function darkenColor(clr, intensity)
	if not intensity or intensity == 1 then
		return clr
	end
	if clr and (typeof(clr) == "Color3" or type(clr) == "table") then
		return Color3.new(clr.R / intensity, clr.G / intensity, clr.B / intensity)
	end
end
library.subs.darkenColor = darkenColor
local __runscript = true
local function wait_check(...)
	if __runscript then
		return wait(...)
	else
		wait()
		return false
	end
end
library.subs.Wait, library.subs.wait = wait_check, wait_check
function library.subs.IsGuiValid()
	return __runscript
end
local lasthidebing = 0
local temp = game:FindService("MarketplaceService") or game:GetService("MarketplaceService")
local Marketplace = (temp and (cloneref and cloneref(temp))) or temp
local resolvevararg, temp = nil
do
	local lwr = string.lower
	function library.defaultSort(a, b)
		return lwr(tostring(b)) > lwr(tostring(a))
	end
end
do
	local varargresolve = {
		Window = {"Name", "Theme"},
		Tab = {"Name", "Image"},
		Section = {"Name", "Side"},
		Label = {"Text", "Flag", "UnloadValue", "UnloadFunc"},
		Toggle = {"Name", "Value", "Callback", "Flag", "Location", "LocationFlag", "UnloadValue", "UnloadFunc", "Locked", "Keybind", "Condition", "AllowDuplicateCalls"},
		Textbox = {"Name", "Value", "Callback", "Flag", "Location", "LocationFlag", "UnloadValue", "UnloadFunc", "Placeholder", "Type", "Min", "Max", "Decimals", "Hex", "Binary", "Base", "RichTextBox", "MultiLine", "TextScaled", "TextFont", "PreFormat", "PostFormat", "CustomProperties", "AllowDuplicateCalls"},
		Slider = {"Name", "Value", "Callback", "Flag", "Location", "LocationFlag", "UnloadValue", "UnloadFunc", "Min", "Max", "Decimals", "Format", "IllegalInput", "Textbox", "AllowDuplicateCalls"},
		Button = {"Name", "Callback", "Locked", "Condition"},
		Keybind = {"Name", "Value", "Callback", "Flag", "Location", "LocationFlag", "UnloadValue", "UnloadFunc", "Pressed", "KeyNames", "AllowDuplicateCalls"},
		Dropdown = {"Name", "Value", "Callback", "Flag", "Location", "LocationFlag", "UnloadValue", "UnloadFunc", "List", "Filter", "Method", "Nothing", "Sort", "MultiSelect", "ItemAdded", "ItemRemoved", "ItemChanged", "ItemsCleared", "ScrollUpButton", "ScrollDownButton", "ScrollButtonRate", "DisablePrecisionScrolling", "AllowDuplicateCalls"},
		SearchBox = {"Name", "Value", "Callback", "Flag", "Location", "LocationFlag", "UnloadValue", "UnloadFunc", "List", "Filter", "Method", "Nothing", "Sort", "MultiSelect", "ItemAdded", "ItemRemoved", "ItemChanged", "ItemsCleared", "ScrollUpButton", "ScrollDownButton", "ScrollButtonRate", "DisablePrecisionScrolling", "RegEx", "AllowDuplicateCalls"},
		Colorpicker = {"Name", "Value", "Callback", "Flag", "Location", "LocationFlag", "UnloadValue", "UnloadFunc", "Rainbow", "Random", "AllowDuplicateCalls"},
		Persistence = {"Name", "Value", "Callback", "Flag", "Location", "LocationFlag", "UnloadValue", "UnloadFunc", "Workspace", "Persistive", "Suffix", "LoadCallback", "SaveCallback", "PostLoadCallback", "PostSaveCallback", "ScrollUpButton", "ScrollDownButton", "ScrollButtonRate", "DisablePrecisionScrolling", "AllowDuplicateCalls"},
		Designer = {"Backdrop", "Image", "Info", "Credit"}
	}
	function resolvevararg(objtype, ...)
		local data = varargresolve[objtype]
		local t = {}
		if data then
			for index, value in next, {...} do
				t[data[index]] = value
			end
		end
		return t
	end
end
local resolvercache = {}
library.resolvercache = resolvercache
local function resolveid(image, flag)
	if image then
		if type(image) == "string" then
			if (#image > 14 and string.sub(image, 1, 13) == "rbxassetid://") or (#image > 12 and string.sub(image, 1, 11) == "rbxasset://") or (#image > 12 and string.sub(image, 1, 11) ~= "rbxthumb://") then
				if flag then
					local thing = library.elements[flag] or library.designerelements[flag]
					if thing and thing.Set then
						task.spawn(thing.Set, thing, image)
					end
				end
				return image
			end
		end
		local orig = image
		if resolvercache[orig] then
			if flag then
				local thing = library.elements[flag] or library.designerelements[flag]
				if thing and thing.Set then
					task.spawn(thing.Set, thing, resolvercache[orig])
				end
			end
			return resolvercache[orig]
		end
		image = tonumber(image) or image
		local succezz = pcall(function()
			local typ = type(image)
			if typ == "string" then
				if getsynasset then
					if #image > 11 and string.sub(image, 1, 11) == "synasset://" then
						return getsynasset(string.sub(image, 12))
					elseif #image > 14 and string.sub(image, 1, 14) == "synasseturl://" then
						local x, e = pcall(function()
							local codename, fixes = string.gsub(image, ".", function(c)
								if c:lower() == c:upper() and not tonumber(c) then
									return ""
								end
							end)
							codename = string.sub(codename, 1, 24) .. tostring(fixes)
							local fold = isfolder("./Root")
							if not fold then
								makefolder("./Root")
							end
							fold = isfolder("./Root/Themes")
							if not fold then
								makefolder("./Root/Themes")
							end
							fold = isfolder("./Root/Themes/SynapseAssetsCache")
							if not fold then
								makefolder("./Root Themes/SynapseAssetsCache")
							end
							if not fold or not isfile("./Root/Themes/SynapseAssetsCache/" .. codename .. ".dat") then
								local res = game:HttpGet(string.sub(image, 15))
								if res ~= nil then
									writefile("./Root/Themes/SynapseAssetsCache/" .. codename .. ".dat", res)
								end
							end
							return getsynasset(readfile("./Root/Themes/SynapseAssetsCache/" .. codename .. ".dat"))
						end)
						if x and e ~= nil then
							return e
						end
					end
				end
				if #image < 11 or (string.sub(image, 1, 13) ~= "rbxassetid://" and string.sub(image, 1, 11) ~= "rbxasset://" and string.sub(image, 1, 11) ~= "rbxthumb://") then
					image = tonumber(image:gsub("%D", ""), 10) or image
					typ = type(image)
				end
			end
			if typ == "number" and image > 0 then
				pcall(function()
					local nfo = Marketplace and Marketplace:GetProductInfo(image)
					image = tostring(image)
					if nfo and nfo.AssetTypeId == 1 then
						image = "rbxassetid://" .. image
					elseif nfo.AssetTypeId == 13 then
						local decal = game:GetObjects("rbxassetid://" .. image)[1]
						image = "rbxassetid://" .. decal.Texture:match("%d+$")
						decal = (decal and decal:Destroy() and nil) or nil
					end
				end)
			else
				image = nil
			end
		end)
		if succezz and image then
			if orig then
				resolvercache[orig] = image
			end
			resolvercache[image] = image
			if flag then
				local thing = library.elements[flag] or library.designerelements[flag]
				if thing and thing.Set then
					task.spawn(thing.Set, thing, image)
				end
			end
		end
	end
	return image
end
library.subs.ResolveID = resolveid
library.resolvercache = resolvercache
local colored, colors = library.colored, library.colors
local tweenService = game:GetService("TweenService")
local updatecolors, MainScreenGui = nil
do
	local MayGC = 0
	spawn(function()
		local IsDescendantOf = game.IsDescendantOf
		local RemoveTable = table.remove
		while wait_check() do
			wait(10)
			local Breathe = 30
			for DataIndex = #colored, 1, -1 do
				if MayGC > 0 then
					break
				end
				Breathe -= 1
				if Breathe <= 0 then
					Breathe = 30
					if wait_check() then
						if MayGC > 0 then
							break
						end
					else
						return
					end
				end
				if MayGC > 0 then
					break
				end
				local data = colored[DataIndex]
				data = data and data[1]
				if data and (typeof(data) == "Instance") and IsDescendantOf(data, MainScreenGui) then
				elseif MayGC <= 0 then
					RemoveTable(colored, DataIndex)
				else
					break
				end
			end
			local sigs = library.signals
			local len = sigs and #sigs
			if len then
				local Dyn = math.round(len / 10)
				Dyn = ((Dyn < 1) and 1) or Dyn
				for DataIndex = len, 1, -1 do
					Breathe -= 1
					if Breathe <= 0 then
						Breathe = Dyn
						if wait_check() then
						else
							return
						end
					end
					local data = colored[DataIndex]
					if data and (typeof(data) == "RBXScriptConnection") and data.Connected then
					else
						RemoveTable(colored, DataIndex)
					end
				end
			end
		end
	end)
	local function colortwee(data, tweenit)
		local cclr = colors[data[3]]
		local darkness = data[4]
		tweenService:Create(data[1], TweenInfo.new(tweenit, library.configuration.easingStyle, library.configuration.easingDirection), {
			[data[2]] = (darkness and darkness ~= 1 and darkenColor(cclr, darkness)) or cclr
		}):Play()
	end
	local function colordarktwee(data)
		local cclr = colors[data[3]]
		local darkness = data[4]
		data[1][data[2]] = (darkness and darkness ~= 1 and darkenColor(cclr, darkness)) or cclr
	end
	function updatecolors(tweenit)
		MayGC += 1
		if library.objects and (#library.objects > 0 or next(library.objects)) then
			for _, data in next, colored do
				local x, e
				if tweenit then
					x, e = pcall(colortwee, data, tweenit)
				end
				if not x then
					local x, e = pcall(colordarktwee, data)
					if not x and e then
					--	warn(debug.traceback(e))
					end
				end
			end
			pcall(function()
				if library.Backdrop then
					library.Backdrop.Visible = library_flags["__Designer.Background.UseBackgroundImage"] and true
					library.Backdrop.Image = resolveid(library_flags["__Designer.Background.ImageAssetID"], "__Designer.Background.ImageAssetID") or ""
					library.Backdrop.ImageColor3 = library_flags["__Designer.Background.ImageColor"] or Color3.new(1, 1, 1)
					library.Backdrop.ImageTransparency = (library_flags["__Designer.Background.ImageTransparency"] or 95) / 100
				end
			end)
		end
		MayGC -= 1
	end
end
local function updatecolorsnotween()
	updatecolors()
end
library.subs.updatecolors = updatecolors
library.colors = setmetatable({}, {
	__index = colors,
	__newindex = function(_, k, v)
		if colors[k] ~= v then
			colors[k] = v
			spawn(updatecolorsnotween)
		end
	end
})
local elements = library.elements
shared.libraries = shared.libraries or {}
local colorpickerconflicts = library.colorpickerconflicts
local keyHandler = {
	notAllowedKeys = {
		[Enum.KeyCode.Return] = true,
		[Enum.KeyCode.Space] = true,
		[Enum.KeyCode.Tab] = true,
		[Enum.KeyCode.Unknown] = true,
		[Enum.KeyCode.Backspace] = true
	},
	notAllowedMouseInputs = {
		[Enum.UserInputType.MouseMovement] = true,
		[Enum.UserInputType.MouseWheel] = true,
		[Enum.UserInputType.MouseButton1] = true,
		[Enum.UserInputType.MouseButton2] = true,
		[Enum.UserInputType.MouseButton3] = true
	},
	allowedKeys = {
		[Enum.KeyCode.LeftShift] = "LShift",
		[Enum.KeyCode.RightShift] = "RShift",
		[Enum.KeyCode.LeftControl] = "LCtrl",
		[Enum.KeyCode.RightControl] = "RCtrl",
		[Enum.KeyCode.LeftAlt] = "LAlt",
		[Enum.KeyCode.RightAlt] = "RAlt",
		[Enum.KeyCode.CapsLock] = "CAPS",
		[Enum.KeyCode.One] = "1",
		[Enum.KeyCode.Two] = "2",
		[Enum.KeyCode.Three] = "3",
		[Enum.KeyCode.Four] = "4",
		[Enum.KeyCode.Five] = "5",
		[Enum.KeyCode.Six] = "6",
		[Enum.KeyCode.Seven] = "7",
		[Enum.KeyCode.Eight] = "8",
		[Enum.KeyCode.Nine] = "9",
		[Enum.KeyCode.Zero] = "0",
		[Enum.KeyCode.KeypadOne] = "Num-1",
		[Enum.KeyCode.KeypadTwo] = "Num-2",
		[Enum.KeyCode.KeypadThree] = "Num-3",
		[Enum.KeyCode.KeypadFour] = "Num-4",
		[Enum.KeyCode.KeypadFive] = "Num-5",
		[Enum.KeyCode.KeypadSix] = "Num-6",
		[Enum.KeyCode.KeypadSeven] = "Num-7",
		[Enum.KeyCode.KeypadEight] = "Num-8",
		[Enum.KeyCode.KeypadNine] = "Num-9",
		[Enum.KeyCode.KeypadZero] = "Num-0",
		[Enum.KeyCode.Minus] = "-",
		[Enum.KeyCode.Equals] = "=",
		[Enum.KeyCode.Tilde] = "~",
		[Enum.KeyCode.LeftBracket] = "[",
		[Enum.KeyCode.RightBracket] = "]",
		[Enum.KeyCode.RightParenthesis] = ")",
		[Enum.KeyCode.LeftParenthesis] = "(",
		[Enum.KeyCode.Semicolon] = ";",
		[Enum.KeyCode.Quote] = "'",
		[Enum.KeyCode.BackSlash] = "\\",
		[Enum.KeyCode.Comma] = ",",
		[Enum.KeyCode.Period] = ".",
		[Enum.KeyCode.Slash] = "/",
		[Enum.KeyCode.Asterisk] = "*",
		[Enum.KeyCode.Plus] = "+",
		[Enum.KeyCode.Period] = ".",
		[Enum.KeyCode.Backquote] = "`"
	}
}
local SeverAllConnections = nil
function SeverAllConnections(t, cache)
	cache = cache or {}
	for k, v in next, t do
		t[k] = nil
		if v ~= nil then
			if cache[v] then
				continue
			end
			local te = v and typeof(v)
			if te then
				if te == "RBXScriptConnection" then
					v:Disconnect()
				elseif te == "Instance" then
					v:Destroy()
				elseif te == "table" then
					cache[v] = true
					SeverAllConnections(v, cache)
				end
			end
		end
	end
end
local function hardunload(library)
	if library.UnloadCallback and type(library.UnloadCallback) == "function" then
		local x, e = pcall(library.UnloadCallback)
		if not x and e then
			task.spawn(error, e, 2)
		end
	end
	for cflag, data in next, elements do
		if data.Type ~= "Persistence" then
			if data.Set and data.Options.UnloadValue ~= nil then
				data.Set(data.Options.UnloadValue)
			end
			if data.Options.UnloadFunc then
				local y, u = pcall(data.Options.UnloadFunc)
				if not y and u then
				--	warn(debug.traceback("Error unloading '" .. tostring(cflag) .. "'\n" .. u))
				end
			end
		end
	end
	local hardcache = {}
	SeverAllConnections(library.signals, hardcache)
	SeverAllConnections(library.objects, hardcache)
	hardcache = (table.clear(hardcache) and nil) or nil
	library.signals = nil
	library.objects = nil
end
library.Subs.UnloadArg = hardunload
local function unloadall()
	if shared.libraries then
		local b = 50
		while #shared.libraries > 0 do
			b = b - 1
			if b < 0 then
				b = 50
				--wait(warn("Looped 50 times while unloading....?"))
			end
			local v = shared.libraries[1]
			if v and v.unload and type(v.unload) == "function" then
				if not pcall(v.unload) then
					pcall(hardunload, v)
					for k in next, v do
						v[k] = nil
					end
				end
				if shared.libraries then
					pcall(function()
						table.remove(shared.libraries, 1)
					end)
				else
					return pcall(hardunload, library)
				end
			end
		end
	end
	shared.libraries = nil
end
shared.unloadall = unloadall
library.unloadall = unloadall
shared.libraries[1 + #shared.libraries] = library
function library.unload()
	__runscript = nil
	hardunload(library)
	if shared.libraries then
		for k, v in next, shared.libraries or {} do
			if v == library then
				for k in next, table.remove(shared.libraries, k) do
					v[k] = nil
				end
				break
			end
		end
		if #shared.libraries == 0 then
			shared.libraries = nil
		end
	end
	--warn("Unloaded")
end
library.Unload = library.unload
local Instance_new = (syn and syn.protect_gui and function(...)
	local x = {Instance.new(...)}
	if x[1] then
		library.objects[1 + #library.objects] = x[1]
		pcall(syn.protect_gui, x[1])
	end
	return unpack(x)
end) or function(...)
	local x = {Instance.new(...)}
	if x[1] then
		library.objects[1 + #library.objects] = x[1]
	end
	return unpack(x)
end
library.subs.Instance_new = Instance_new
local playersservice = game:GetService("Players")
local function getresolver(listt, filter, method, _)
	local huo, args = type(filter), {}
	local hou = typeof(listt)
	return (hou == "function" and function(...)
		return listt(...)
	end) or (hou == "table" and function()
		return listt
	end) or function()
		local hardtype = nil
		local g = listt
		for _ = 1, 5 do
			hardtype = typeof(g)
			if hardtype == "function" then
				local x, e = pcall(listt)
				if x and e then
					g = e
				end
				hardtype = typeof(g)
			end
			if hardtype == "Instance" then
				local lastg = g
				if method == nil and listt == playersservice then
					g = listt:GetPlayers()
				end
				if method then
					local metype = type(method)
					if metype == "table" then
						method = method.Method or method[1]
						args = method.Args or method.Arguments or unpack(method, (method.Method ~= nil and 1) or 2)
						metype = type(method)
					end
					local y, u = nil, nil
					if metype == "function" then
						y, u = pcall(method, listt, unpack(args))
					elseif metype == "string" then
						local y, u = pcall(function()
							return listt[method](listt, unpack(args))
						end)
					else
						--warn("Idk how to handle method type of", metype, debug.traceback(""))
					end
					if u then
						if y then
							g = u
						else
						--	warn("Error trying method", method, "on", listt, debug.traceback(u))
						end
					end
				end
				if g == lastg then
					g = listt:GetChildren()
				end
			end
			if hardtype == "Enum" then
				g = listt:GetEnumItems()
			end
			hardtype = typeof(g)
			if hardtype == "table" then
				break
			end
		end
		hardtype = typeof(g)
		if hardtype ~= "table" then
			--warn("Could not resolve " .. hou .. " type to a list.")
			return {}
		end
		if filter then
			if huo == "function" then
				local accept = {}
				for _, v in next, g do
					local x, e = pcall(filter, v)
					if x and e then
						accept[1 + #accept] = (e == true and v) or e
					end
				end
				g = accept
			elseif huo == "string" then
				local accept = {}
				for _, v in next, g do
					if tostring(v):lower():find(huo) then
						accept[1 + #accept] = v
					end
				end
				g = accept
			elseif huo == "table" then
				local accept = {}
				if type(filter[1]) == "string" then
					for _, v in next, g do
						if tostring(v):lower():find(huo) then
							accept[1 + #accept] = v
						elseif filter[0] then
							accept[1 + #accept] = v
						end
					end
				else
					for _, v in next, g do
						if not table.find(filter, v) and not table.find(filter, tostring(v)) then
							accept[1 + #accept] = v
						elseif not filter[0] then
							accept[1 + #accept] = v
						end
					end
				end
				g = accept
			end
		end
		return g
	end
end
library.subs.GetResolver = getresolver
local function resetall()
	destroyrainbowsg = true
	pcall(function()
		for k, v in next, elements do
			if v and k and v.Set and v.Default ~= nil and library_flags[k] ~= v.Default and string.sub(k, 1, 11) ~= "__Designer." then
				v:Set(v.Default)
			end
		end
	end)
end
library.ResetAll = resetall
local textService = game:GetService("TextService")
local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local LP = playersservice.LocalPlayer
library.LP = LP
library.Players = playersservice
library.UserInputService = userInputService
library.RunService = runService
local mouse = LP and LP:GetMouse()
if not mouse and PluginManager and runService:IsStudio() then
	shared.library_plugin = shared.library_plugin or print("Creating Studio Test-Plugin...") or PluginManager():CreatePlugin()
	mouse = shared.library_plugin:GetMouse()
	library.plugin = shared.library_plugin
end
library.Mouse = mouse
local textToSize = nil
do
	local textService = game:GetService("TextService")
	local bigv2 = Vector2.one * math.huge
	function textToSize(object)
		return textService:GetTextSize(object.Text, object.TextSize, object.Font, bigv2)
	end
end
library.subs.textToSize = textToSize
local function removeSpaces(str)
	if str then
		local newStr = str:gsub(" ", "")
		return newStr
	end
end
library.subs.removeSpaces = removeSpaces
local function Color3FromHex(hex)
	hex = hex:gsub("#", ""):upper():gsub("0X", "")
	return Color3.fromRGB(tonumber(hex:sub(1, 2), 16), tonumber(hex:sub(3, 4), 16), tonumber(hex:sub(5, 6), 16))
end
library.subs.Color3FromHex = Color3FromHex
local floor = math.floor
local function Color3ToHex(color)
	local r, g, b = string.format("%X", floor(color.R * 255)), string.format("%X", floor(color.G * 255)), string.format("%X", floor(color.B * 255))
	if #r < 2 then
		r = "0" .. r
	end
	if #g < 2 then
		g = "0" .. g
	end
	if #b < 2 then
		b = "0" .. b
	end
	return string.format("%s%s%s", r, g, b)
end
if Color3.ToHex and not shared.overridecolortohex then
	local x, e = pcall(Color3.ToHex, Color3.new())
	if x and type(e) == "string" and #e == 6 then
		Color3ToHex = Color3.ToHex
	end
end
library.subs.Color3ToHex = Color3ToHex
local isDraggingSomething = false
local function makeDraggable(topBarObject, object)
	local dragging = nil
	local dragInput = nil
	local dragStart = nil
	local startPosition = nil
	library.signals[1 + #library.signals] = topBarObject.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPosition = object.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	library.signals[1 + #library.signals] = topBarObject.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	library.signals[1 + #library.signals] = userInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			if not isDraggingSomething and library.configuration.smoothDragging then
				tweenService:Create(object, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
					Position = UDim2.new(startPosition.X.Scale, startPosition.X.Offset + delta.X, startPosition.Y.Scale, startPosition.Y.Offset + delta.Y)
				}):Play()
			elseif not isDraggingSomething and not library.configuration.smoothDragging then
				object.Position = UDim2.new(startPosition.X.Scale, startPosition.X.Offset + delta.X, startPosition.Y.Scale, startPosition.Y.Offset + delta.Y)
			end
		end
	end)
end
library.subs.makeDraggable = makeDraggable
local JSONEncode, JSONDecode = nil, nil
do
	local temp_http = game:FindService("HttpService") or game:GetService("HttpService")
	local httpservice = temp_http
	if cloneref and type(cloneref) == "function" then
		httpservice, temp_http = cloneref(httpservice), nil
	end
	library.Http = httpservice
	local JSONEncodeFunc = httpservice.JSONEncode
	function JSONEncode(...)
		return pcall(JSONEncodeFunc, httpservice, ...)
	end
	library.JSONEncode = JSONEncode
	local JSONDecodeFunc = httpservice.JSONDecode
	function JSONDecode(...)
		return pcall(JSONDecodeFunc, httpservice, ...)
	end
	library.JSONDecode = JSONDecode
end
local convertfilename
do
	local string_gsub = string.gsub
	function convertfilename(str, default, replace)
		replace = replace or "_"
		local corrections = 0
		local predname = string_gsub(str, "%W", function(c)
			local byt = c:byte()
			if ((byt == 0) or (byt == 32) or (byt == 33) or (byt == 59) or (byt == 61) or ((byt >= 35) and (byt <= 41)) or ((byt >= 43) and (byt <= 57)) or ((byt >= 64) and (byt <= 123)) or ((byt >= 125) and (byt <= 127))) then
			else
				corrections = 1 + corrections
				return replace
			end
		end)
		return (default and corrections == #predname and tostring(default)) or predname
	end
	library.subs.ConvertFilename = convertfilename
end
do
	do
		local function NewOption(TextStr, Order, Parent)
			local Option = Instance_new("Frame")
			local BBorder = Instance_new("Frame")
			local Inner_2 = Instance_new("Frame")
			local Border_2 = Instance_new("Frame")
			local Text = Instance_new("TextLabel")
			local Button = Instance_new("TextButton")
			Option.AnchorPoint = Vector2.new(0, 0.5)
			Option.BackgroundColor3 = library.colors.background
			colored[1 + #colored] = {Option, "BackgroundColor3", "background"}
			Option.BorderColor3 = Color3.fromRGB(27, 27, 27)
			Option.LayoutOrder = Order or #Parent:GetChildren()
			Option.Name = "Option"
			Option.Position = UDim2.new(0, 5, 0.5, 0)
			Option.Size = UDim2.new(0, 35, 0, 25)
			BBorder.AnchorPoint = Vector2.new(0.5, 0.5)
			BBorder.BackgroundColor3 = library.colors.background
			colored[1 + #colored] = {BBorder, "BackgroundColor3", "background"}
			BBorder.BorderColor3 = Color3.fromRGB(50, 43, 50)
			BBorder.BorderMode = Enum.BorderMode.Inset
			BBorder.Name = "BBorder"
			BBorder.Parent = Option
			BBorder.Position = UDim2.new(0.5, 0, 0.5, 0)
			BBorder.Size = UDim2.new(1, 0, 1, 0)
			Inner_2.AnchorPoint = Vector2.new(0.5, 0.5)
			Inner_2.BackgroundColor3 = library.colors.background
			colored[1 + #colored] = {Inner_2, "BackgroundColor3", "background"}
			Inner_2.BorderColor3 = Color3.fromRGB(27, 27, 27)
			Inner_2.Name = "Inner"
			Inner_2.Parent = Option
			Inner_2.Position = UDim2.new(0.5, 0, 0.5, 0)
			Inner_2.Size = UDim2.new(1, -6, 1, -6)
			Border_2.AnchorPoint = Vector2.new(0.5, 0.5)
			Border_2.BackgroundColor3 = library.colors.background
			colored[1 + #colored] = {Border_2, "BackgroundColor3", "background"}
			Border_2.BorderColor3 = Color3.fromRGB(50, 43, 50)
			Border_2.BorderMode = Enum.BorderMode.Inset
			Border_2.Name = "Border"
			Border_2.Parent = Inner_2
			Border_2.Position = UDim2.new(0.5, 0, 0.5, 0)
			Border_2.Size = UDim2.new(1, 0, 1, 0)
			Text.AnchorPoint = Vector2.new(0.5, 0.5)
			Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Text.BackgroundTransparency = 1
			Text.Font = Enum.Font.Code
			Text.FontSize = Enum.FontSize.Size14
			Text.Name = "Text"
			Text.Parent = Border_2
			Text.Position = UDim2.new(0.5, 0, 0.5, 0)
			Text.Size = UDim2.new(1, 0, 1, 0)
			Text.TextColor3 = library.colors.elementText
			colored[1 + #colored] = {Text, "TextColor3", "elementText"}
			Text.TextSize = 14
			Text.TextStrokeTransparency = 0.75
			Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Button.BackgroundTransparency = 1
			Button.BorderSizePixel = 0
			Button.Font = Enum.Font.SourceSans
			Button.FontSize = Enum.FontSize.Size14
			Button.Name = "Button"
			Button.Parent = Option
			Button.Size = UDim2.new(1, 0, 1, 0)
			Button.Text = ""
			Button.TextColor3 = Color3.fromRGB(0, 0, 0)
			Button.TextSize = 14
			Button.TextTransparency = 1
			Text.Text = TextStr
			local siz = textToSize(Text)
			Option.Size = UDim2.new(0, math.max(siz.X, 28) + 12, 0, 25)
			Option.Parent = Parent
			return Option, Button, Text
		end
		local function AddOption(OptionData, Key, OptionCount, Parent, Close, PromptEvent, KeepOpen)
			local Enabled = OptionData.Enabled
			if OptionData.Disabled then
				Enabled = false
			else
				Enabled = Enabled or (Enabled == nil)
			end
			local OptionText = OptionData.Text or OptionData.String or OptionData.Message or OptionData.Value or OptionData.Name or Key
			local Callback = OptionData.Callback or OptionData.OnPressed or OptionData.Function or nil
			local Order = tonumber(OptionData.Slot or OptionData.Order or OptionData.LayoutOrder or OptionData.Index or OptionCount)
			local OptionIns, OptionButton, OptionTxt = NewOption(tostring(OptionText), Order, Parent)
			local OptionObj = {
				Text = OptionText,
				Callback = Callback,
				ButtonObject = OptionIns,
				Pressed = OptionButton.MouseButton1Click,
				PressedRight = OptionButton.MouseButton2Click,
				Activated = OptionButton.Activated,
				TextButton = OptionButton,
				Order = Order,
				Enabled = Enabled
			}
			function OptionObj.Remove()
				do
					local Btn = OptionObj.ButtonObject
					if Btn then
						Btn:Destroy()
					end
				end
				for k in next, OptionObj do
					rawset(OptionObj, k, nil)
				end
				return true
			end
			local Proxy = nil
			local function Clicked(f)
				return function(...)
					if f then
						task.spawn(f, ...)
					end
					PromptEvent:Fire(Key, OptionButton.Text, ...)
					if KeepOpen then
					else
						Close()
					end
				end
			end
			function OptionObj.Press(...)
				OptionObj.Update()
				Proxy = Proxy or Clicked(Callback)
				Proxy(...)
			end
			function OptionObj.Lock()
				OptionObj.Enabled = false
				OptionObj.Update()
			end
			function OptionObj.Unlock()
				OptionObj.Enabled = true
				OptionObj.Update()
			end
			function OptionObj.SetLocked(self, state)
				if type(self) == "boolean" then
					state = self
				end
				OptionObj.Enabled = state
				OptionObj.Update()
			end
			function OptionObj.SetCondition(self, Condition)
				if type(self) ~= "table" then
					Condition = self
				end
				OptionObj.Condition = Condition
				OptionObj.Update()
			end
			function OptionObj.Update()
				do
					local OptionText = OptionObj.Text or OptionData.Text or OptionData.String or OptionData.Message or OptionData.Value or OptionData.Name or OptionButton.Text or Key
					OptionButton.Text = tostring(OptionText)
				end
				OptionIns.LayoutOrder = tonumber(OptionObj.Order or OptionData.Slot or OptionData.Order or OptionData.LayoutOrder or OptionData.Index or OptionIns.LayoutOrder or OptionCount)
				do
					local Enabled = OptionData.Enabled
					local Cond = OptionObj.Condition
					if Cond then
						local x, e = pcall(Cond, OptionObj)
						if x then
							Enabled = e and true
						else
							--warn(debug.traceback(string.format("Error in prompt-option %s's Condition function: %s", OptionButton.Text, e), 2))
						end
					else
						if OptionData.Disabled then
							Enabled = false
						else
							Enabled = (Enabled and true) or (Enabled == nil)
						end
					end
					local Proxy = nil
					do
						local nCallback = (Enabled and (OptionData.Callback or OptionData.OnPressed or OptionData.Function)) or nil
						if not Proxy or Callback ~= nCallback then
							Callback = nCallback
							Proxy = Clicked(Callback)
							OptionObj.PressedConnection = (OptionObj.PressedConnection and OptionObj.PressedConnection:Disconnect() and nil) or (Callback and OptionObj.Pressed:Connect(Proxy)) or nil
						end
						local PC = OptionObj.PressedConnection
						if Enabled then
							if PC then
								if Callback then
								else
									OptionObj.PressedConnection = (PC:Disconnect() and nil) or nil
								end
							elseif Callback then
								Proxy = Proxy or Clicked(Callback)
								OptionObj.PressedConnection = OptionObj.Pressed:Connect(Proxy)
							end
						elseif PC then
							OptionObj.PressedConnection = (PC:Disconnect() and nil) or nil
						end
					end
					OptionObj.Enabled = Enabled
					OptionTxt.TextTransparency = (Enabled and 0) or 0.5
				end
				return OptionObj
			end
			OptionObj.Update()
			return OptionObj
		end
		local function SortByLayoutOrder(a, b)
			return a.Order < b.Order
		end
		local DefaultSelections = {
			Ok = true
		}
		function library.Prompt(self, PromptData, ...)
			if rawequal(self, library) then
			else
				PromptData, self = self, library
			end
			local PromptEvent = Instance_new("BindableEvent")
			local PromptObj = {
				OnSelect = PromptEvent.Event,
				Active = true,
				SelectedEvent = PromptEvent
			}
			local ChoicePopup = Instance_new("Frame")
			local Buttons = Instance_new("ScrollingFrame")
			local Title = Instance_new("TextLabel")
			local Description = Instance_new("TextLabel")
			local DoClose = PromptData.CloseButton
			DoClose = (DoClose == nil) or (DoClose == true) or DoClose or nil
			local Close = DoClose and Instance_new("ImageButton")
			do
				local Border = Instance_new("Frame")
				local Inner = Instance_new("Frame")
				local InnerBorder = Instance_new("Frame")
				local Bar = Instance_new("Frame")
				local Splitter = Instance_new("Frame")
				local ButtonBar = Instance_new("Frame")
				local UIListLayout = Instance_new("UIListLayout")
				ChoicePopup.AnchorPoint = Vector2.new(0.5, 0.5)
				ChoicePopup.BackgroundColor3 = library.colors.background
				colored[1 + #colored] = {ChoicePopup, "BackgroundColor3", "background"}
				ChoicePopup.BorderColor3 = library.colors.outerBorder
				colored[1 + #colored] = {ChoicePopup, "BorderColor3", "outerBorder"}
				ChoicePopup.Name = "ChoicePopup"
				ChoicePopup.Position = UDim2.new(0.5, 0, 0.5, 0)
				ChoicePopup.Size = UDim2.new(0, 325, 0, 100)
				Border.AnchorPoint = Vector2.new(0.5, 0.5)
				Border.BackgroundColor3 = library.colors.background
				colored[1 + #colored] = {Border, "BackgroundColor3", "background"}
				Border.BorderColor3 = library.colors.innerBorder
				colored[1 + #colored] = {Border, "BorderColor3", "innerBorder"}
				Border.BorderMode = Enum.BorderMode.Inset
				Border.Name = "Border"
				Border.Parent = ChoicePopup
				Border.Position = UDim2.new(0.5, 0, 0.5, 0)
				Border.Size = UDim2.new(1, 0, 1, 0)
				Inner.AnchorPoint = Vector2.new(0.5, 0.5)
				Inner.BackgroundColor3 = library.colors.background
				colored[1 + #colored] = {Inner, "BackgroundColor3", "background"}
				Inner.BorderColor3 = library.colors.outerBorder
				colored[1 + #colored] = {Inner, "BorderColor3", "outerBorder"}
				Inner.Name = "Inner"
				Inner.Parent = ChoicePopup
				Inner.Position = UDim2.new(0.5, 0, 0.5, 0)
				Inner.Size = UDim2.new(1, -8, 1, -8)
				InnerBorder.AnchorPoint = Vector2.new(0.5, 0.5)
				InnerBorder.BackgroundColor3 = library.colors.background
				colored[1 + #colored] = {InnerBorder, "BackgroundColor3", "background"}
				InnerBorder.BorderColor3 = library.colors.innerBorder
				colored[1 + #colored] = {InnerBorder, "BorderColor3", "innerBorder"}
				InnerBorder.BorderMode = Enum.BorderMode.Inset
				InnerBorder.Name = "InnerBorder"
				InnerBorder.Parent = Inner
				InnerBorder.Position = UDim2.new(0.5, 0, 0.5, 0)
				InnerBorder.Size = UDim2.new(1, 0, 1, 0)
				Bar.BackgroundColor3 = library.colors.main
				colored[1 + #colored] = {Bar, "BackgroundColor3", "main"}
				Bar.BorderSizePixel = 0
				Bar.Name = "Bar"
				Bar.Parent = InnerBorder
				Bar.Size = UDim2.new(1, 0, 0, 3)
				Splitter.AnchorPoint = Vector2.new(0, 1)
				Splitter.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
				Splitter.BorderSizePixel = 0
				Splitter.Name = "Splitter"
				Splitter.Parent = InnerBorder
				Splitter.Position = UDim2.new(0, 0, 1, -35)
				Splitter.Size = UDim2.new(1, 0, 0, 1)
				Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Title.BackgroundTransparency = 1
				Title.Font = Enum.Font.Code
				Title.FontSize = Enum.FontSize.Size18
				Title.Parent = InnerBorder
				Title.Position = UDim2.new(0, 6, 0, 4)
				Title.Size = UDim2.new(0, 300, 0, 25)
				Title.TextColor3 = library.colors.elementText
				colored[1 + #colored] = {Title, "TextColor3", "elementText"}
				Title.TextSize = 15
				Title.TextStrokeTransparency = 0.95
				Title.TextXAlignment = Enum.TextXAlignment.Left
				Description.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Description.BackgroundTransparency = 1
				Description.Font = Enum.Font.Code
				Description.FontSize = Enum.FontSize.Size14
				Description.Name = "Description"
				Description.Parent = InnerBorder
				Description.Position = UDim2.new(0, 6, 0, 25)
				Description.Size = UDim2.new(0, 300, 0, 25)
				Description.TextColor3 = library.colors.elementText
				colored[1 + #colored] = {Description, "TextColor3", "elementText"}
				Description.TextSize = 14
				Description.TextStrokeTransparency = 0.95
				Description.TextTruncate = Enum.TextTruncate.AtEnd
				Description.TextWrap = true
				Description.TextWrapped = true
				Description.TextXAlignment = Enum.TextXAlignment.Left
				if Close then
					Close.AnchorPoint = Vector2.new(1)
					Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Close.BackgroundTransparency = 1
					Close.Image = "http://www.roblox.com/asset/?id=9064270627"
					Close.ImageColor3 = library.colors.section
					colored[1 + #colored] = {Close, "ImageColor3", "section"}
					Close.Name = "Close"
					Close.Parent = InnerBorder
					Close.Position = UDim2.new(1, -9, 0, 11)
					Close.ScaleType = Enum.ScaleType.Fit
					Close.Size = UDim2.new(0, 10, 0, 10)
				end
				ButtonBar.AnchorPoint = Vector2.new(0, 1)
				ButtonBar.BackgroundColor3 = library.colors.sectionBackground
				colored[1 + #colored] = {ButtonBar, "BackgroundColor3", "sectionBackground"}
				ButtonBar.BorderSizePixel = 0
				ButtonBar.Name = "ButtonBar"
				ButtonBar.Parent = InnerBorder
				ButtonBar.Position = UDim2.new(0, 0, 1, 0)
				ButtonBar.Size = UDim2.new(1, 0, 0, 35)
				Buttons.AutomaticCanvasSize = Enum.AutomaticSize.X
				Buttons.BackgroundColor3 = library.colors.sectionBackground
				colored[1 + #colored] = {Buttons, "BackgroundColor3", "sectionBackground"}
				Buttons.BorderColor3 = library.colors.background
				colored[1 + #colored] = {Buttons, "BorderColor3", "background"}
				Buttons.BorderSizePixel = 0
				Buttons.BottomImage = ""
				Buttons.CanvasSize = UDim2.new(0, 0, 0, 0)
				Buttons.MidImage = ""
				Buttons.Name = "Buttons"
				Buttons.Parent = ButtonBar
				Buttons.Position = UDim2.new(0, 6, 0, 0)
				Buttons.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
				Buttons.ScrollBarImageTransparency = 1
				Buttons.ScrollBarThickness = 0
				Buttons.ScrollingDirection = Enum.ScrollingDirection.X
				Buttons.Selectable = false
				Buttons.Size = UDim2.new(1, -12, 1, 0)
				Buttons.TopImage = ""
				UIListLayout.FillDirection = Enum.FillDirection.Horizontal
				UIListLayout.Padding = UDim.new(0, 10)
				UIListLayout.Parent = Buttons
				UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
				UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
			end
			PromptObj.FrameInstance = ChoicePopup
			PromptObj.Closed = ChoicePopup.Destroying
			local function ClosePrompt(method)
				PromptObj.Active = (ChoicePopup and ChoicePopup:Destroy() and nil) or (PromptEvent:Fire("Close", method and (method == "timeout_")) and nil) or nil
			end
			PromptObj.Close = ClosePrompt
			if Close then
				Close.MouseButton1Click:Connect(((DoClose ~= true) and DoClose) or ClosePrompt)
			end
			do
				local NameTxt = PromptData.Name
				Title.Text = ((NameTxt ~= nil) and tostring(NameTxt)) or "Untitled Prompt"
			end
			do
				local DescriptionTxt = PromptData.Description
				if DescriptionTxt == nil then
					DescriptionTxt = PromptData.Text
					if DescriptionTxt == nil then
						DescriptionTxt = PromptData.String
						if DescriptionTxt == nil then
							DescriptionTxt = PromptData.Message
							if DescriptionTxt == nil then
								DescriptionTxt = PromptData.Value
							end
						end
					end
				end
				Description.Text = ((DescriptionTxt ~= nil) and tostring(DescriptionTxt)) or ""
			end
			do
				local Selections = PromptData.Options or PromptData.Buttons or PromptData.Choices
				if Selections then
					if type(Selections) ~= "table" then
						Selections = {
							OK = Selections
						}
					end
				else
					Selections = DefaultSelections
				end
				local OptionCount = 0
				local ButtonsProxy = {}
				PromptObj.Buttons = ButtonsProxy
				function PromptObj.ReOrder(self, SortFunc)
					if self ~= ButtonsProxy then
						SortFunc, self = self, nil
					end
					if SortFunc and (type(SortFunc) ~= "function") then
						SortFunc = SortByLayoutOrder
					end
					local BtnOrder = {}
					for _, Data in next, ButtonsProxy do
						BtnOrder[1 + #BtnOrder] = Data
					end
					table.sort(BtnOrder, SortFunc or SortByLayoutOrder)
					for Order, Data in next, BtnOrder do
						Data.Order = Order or Data.Order
						local UpdateFunc = Data.Update
						if UpdateFunc then
							spawn(UpdateFunc)
						else
							local Frame = Data.ButtonObject
							if Frame then
								Frame.LayoutOrder = Order
							end
						end
					end
					return ButtonsProxy
				end
				function PromptObj.PressAll(self, ...)
					local isSelf = nil
					if self and rawequal(self, PromptObj) then
						isSelf = true
					end
					for _, Data in next, ButtonsProxy do
						local f = Data.Callback
						if f then
							if isSelf then
								f(...)
							else
								f(self, ...)
							end
						end
					end
				end
				local KeepOpen = PromptData.KeepOpen
				for Key, OptionData in next, Selections do
					OptionCount += 1
					do
						local typ = OptionData and type(OptionData)
						if typ ~= "table" then
							OptionData = {
								Name = ((typ == "string") and (type(Key) == "number") and OptionData) or Key,
								Callback = ((typ == "function") and OptionData) or ClosePrompt
							}
						end
					end
					ButtonsProxy[Key] = AddOption(OptionData, Key, OptionCount, Buttons, ClosePrompt, PromptEvent, KeepOpen)
				end
			end
			do
				local to = PromptData.Timeout
				to = to and tonumber(to)
				if to then
					task.delay(to, ClosePrompt, "timeout_")
				end
			end
			ChoicePopup.Parent = MainScreenGui
			makeDraggable(ChoicePopup, ChoicePopup)
			return PromptObj, ChoicePopup
		end
	end
	do
		local Popups = Instance.new("Frame")
		local UIListLayout = Instance.new("UIListLayout")
		library.NotifyLayout = UIListLayout
		Popups.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Popups.BackgroundTransparency = 1
		Popups.Name = "Popups"
		Popups.Position = UDim2.new(0, 10, 0, 10)
		Popups.Size = UDim2.new(1, -20, 1, -20)
		UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
		UIListLayout.Padding = UDim.new(0, 5)
		UIListLayout.Parent = Popups
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
		Popups.Parent = MainScreenGui
		library.NotificationsFrame = Popups
		local Inverse = true
		local os_clock = os.clock
		local Notifications = {}
		library.Notifications = Notifications
		spawn(function()
			local v1, vtop, htop = Enum.FillDirection.Vertical, Enum.VerticalAlignment.Top, Enum.HorizontalAlignment.Center
			while wait_check() do
				local Len = #Notifications
				while wait_check() and (Len <= 0) do
					Len = #Notifications
					if wait_check(0.25) then
					else
						return
					end
				end
				Inverse = ((UIListLayout.FillDirection == v1) and (UIListLayout.VerticalAlignment ~= vtop)) or (UIListLayout.HorizontalAlignment ~= htop)
				local BreathingRoom, now = 10, os_clock()
				local Order = 0
				for Index = Len, 1, -1 do
					BreathingRoom -= 1
					if BreathingRoom <= 0 then
						if wait_check() then
							BreathingRoom, now = 10, os_clock()
						else
							return
						end
					end
					local Noti = Notifications[Index]
					local Obj = Noti and Noti.Object
					if Obj and Noti.Active and (Noti.Paused or ((now - Noti.Expires) < Noti.Duration)) then
						if Noti.TextLabel.Text ~= Noti.Text then
							Noti:SetText(Noti.Text)
						end
						if Obj.Visible then
							Order += 1
							Obj.LayoutOrder = Order * ((Inverse and -1) or 1)
						end
						continue
					end
					Noti.Object = ((Noti.Object and Noti.Object:Destroy()) and nil) or (Noti.Destroy() and nil) or (table.remove(Notifications, Index) and nil) or nil
				end
			end
		end)
		function library.Notify(self, NotificationData, ...)
			if rawequal(self, library) then
			else
				NotificationData, self = self, library
			end
			local now = os_clock()
			local dur = NotificationData.Time or 6
			local TextStr = NotificationData.Text or NotificationData.String or NotificationData.Value or NotificationData.Message or NotificationData.Msg
			TextStr = ((TextStr == nil) and "No text given") or tostring(TextStr)
			local NotificationObj = {
				InitTime = now,
				Active = true,
				Forced = false,
				Duration = dur,
				Expires = now + dur,
				Paused = (NotificationData.Paused and true) or false,
				Text = TextStr,
				Arguments = NotificationData
			}
			NotificationObj.Forced = NotificationObj.Paused
			local Notification = Instance.new("Frame")
			NotificationObj.Object = Notification
			local Border = Instance.new("Frame")
			local Inner = Instance.new("Frame")
			local Border_2 = Instance.new("Frame")
			local Text = Instance.new("TextLabel")
			NotificationObj.TextLabel = Text
			local Bar = Instance.new("Frame")
			local Close = Instance.new("ImageButton")
			Notification.AnchorPoint = Vector2.one
			Notification.BackgroundColor3 = library.colors.background
			colored[1 + #colored] = {Notification, "BackgroundColor3", "background"}
			Notification.BorderColor3 = library.colors.outerBorder
			colored[1 + #colored] = {Notification, "BorderColor3", "outerBorder"}
			Notification.Name = "Notification"
			Notification.Position = UDim2.new(1, -10, 1, -10)
			Notification.Size = UDim2.new(0, 5e4, 0, 32)
			Border.AnchorPoint = Vector2.new(0.5, 0.5)
			Border.BackgroundColor3 = library.colors.background
			colored[1 + #colored] = {Border, "BackgroundColor3", "background"}
			Border.BorderColor3 = library.colors.innerBorder
			colored[1 + #colored] = {Border, "BorderColor3", "innerBorder"}
			Border.BorderMode = Enum.BorderMode.Inset
			Border.Name = "Border"
			Border.Parent = Notification
			Border.Position = UDim2.new(0.5, 0, 0.5, 0)
			Border.Size = UDim2.new(1, 0, 1, 0)
			Inner.AnchorPoint = Vector2.one / 2
			Inner.BackgroundColor3 = library.colors.background
			colored[1 + #colored] = {Inner, "BackgroundColor3", "background"}
			Inner.BorderColor3 = library.colors.outerBorder
			colored[1 + #colored] = {Inner, "BorderColor3", "outerBorder"}
			Inner.Name = "Inner"
			Inner.Parent = Notification
			Inner.Position = UDim2.new(0.5, 0, 0.5, 0)
			Inner.Size = UDim2.new(1, -8, 1, -8)
			Border_2.AnchorPoint = Vector2.one / 2
			Border_2.BackgroundColor3 = library.colors.background
			colored[1 + #colored] = {Border_2, "BackgroundColor3", "background"}
			Border_2.BorderColor3 = library.colors.innerBorder
			colored[1 + #colored] = {Border_2, "BorderColor3", "innerBorder"}
			Border_2.BorderMode = Enum.BorderMode.Inset
			Border_2.Name = "Border"
			Border_2.Parent = Inner
			Border_2.Position = UDim2.new(0.5, 0, 0.5, 0)
			Border_2.Size = UDim2.new(1, 0, 1, 0)
			Text.AnchorPoint = Vector2.new(0, 0.5)
			Text.BackgroundTransparency = 1
			Text.Font = Enum.Font.Code
			Text.FontSize = Enum.FontSize.Size14
			Text.Name = "Text"
			Text.Parent = Border_2
			Text.Position = UDim2.new(0, 8, 0.5, 0)
			Text.Size = UDim2.new(1, -8, 1, -7)
			Text.Text = TextStr
			Text.TextColor3 = library.colors.elementText
			colored[1 + #colored] = {Text, "TextColor3", "elementText"}
			Text.TextScaled = true
			Text.TextSize = 14
			Text.TextStrokeTransparency = 0.75
			Text.TextWrap = true
			Text.TextWrapped = true
			Text.TextXAlignment = Enum.TextXAlignment.Left
			Bar.BackgroundColor3 = library.colors.main
			colored[1 + #colored] = {Bar, "BackgroundColor3", "main"}
			Bar.BorderSizePixel = 0
			Bar.Name = "Bar"
			Bar.Parent = Border_2
			Bar.Size = UDim2.new(0, 3, 1, 0)
			Close.AnchorPoint = Vector2.new(1, 0.5)
			Close.BackgroundTransparency = 1
			Close.Image = "rbxassetid://5492252477"
			Close.ImageColor3 = library.colors.elementText
			colored[1 + #colored] = {Close, "ImageColor3", "elementText"}
			Close.Name = "Close"
			Close.Parent = Border_2
			Close.Position = UDim2.new(1, -6, 0.5, 0)
			Close.ScaleType = Enum.ScaleType.Fit
			Close.Size = UDim2.new(0, 10, 0, 10)
			Notification.Size = UDim2.new(0, 64 + textToSize(Text).X, 0, 32)
			Notification.Parent = Popups
			Notification.LayoutOrder = #Notification.Parent:GetChildren() * ((Inverse and 1) or -1)
			if Popups.Parent then
			else
				Popups.Parent = MainScreenGui
			end
			NotificationObj.OnClose = Close.Activated
			NotificationObj.InputBegan = Notification.InputBegan
			NotificationObj.Destroying = Notification.Destroying
			NotificationObj.MouseEnter = Notification.MouseEnter
			NotificationObj.MouseLeave = Notification.MouseLeave
			function NotificationObj.SetText(self, Str)
				if rawequal(self, NotificationObj) then
				else
					Str = self
				end
				Str = ((Str == nil) and "No text given") or tostring(Str)
				Text.Text, NotificationObj.Text = Str, Str
				Notification.Size = UDim2.new(0, 44 + Text.TextBounds.X, 0, 32)
				return Str, Text
			end
			local function Pause(self, Set, NoForce)
				if rawequal(self, NotificationObj) then
				else
					Set, NoForce = self, Set
				end
				local IsPaused = NotificationObj.Paused
				if Set == nil then
					Set = not IsPaused
				else
					Set = Set or false
				end
				if Set or (IsPaused == Set) then
				else
					NotificationObj.Expires = math.max(NotificationObj.Expires, os_clock() + math.clamp(NotificationObj.Duration / 2.5, 1, 3))
				end
				NotificationObj.Paused = Set
				if NoForce then
				else
					NotificationObj.Forced = Set
				end
				return Set
			end
			NotificationObj.SetPaused = Pause
			function NotificationObj.AddTime(self, Extension)
				if rawequal(self, NotificationObj) then
				else
					Extension = self
				end
				NotificationObj.Expires += Extension
			end
			function NotificationObj.Hide(self, SetPause)
				if Notification and NotificationObj.Active then
					if rawequal(self, NotificationObj) then
					else
						SetPause = self
					end
					if SetPause then
						Pause(true)
					end
					Notification.Visible = false
				end
			end
			function NotificationObj.Show(self, SetPause)
				if Notification and NotificationObj.Active then
					if rawequal(self, NotificationObj) then
					else
						SetPause = self
					end
					if SetPause then
						Pause(false)
					end
					Notification.Visible = true
				end
			end
			function NotificationObj.SetVisible(self, Visible, SetPause)
				if Notification and NotificationObj.Active then
					if rawequal(self, NotificationObj) then
					else
						Visible, SetPause = self, Visible
					end
					if Visible == nil then
						Notification.Visible = not Notification.Visible
					else
						Notification.Visible = (Visible and true) or false
					end
					if SetPause then
						Pause(Notification.Visible)
					end
				end
			end
			Notification.MouseEnter:Connect(function()
				if NotificationObj.Forced then
					return
				end
				Pause(true, true)
			end)
			Notification.MouseLeave:Connect(function()
				if NotificationObj.Forced then
					return
				end
				Pause(false, true)
			end)
			local function Destroy()
				if Notification then
					Notification:Destroy()
				end
				NotificationObj.Active = false
				NotificationObj.Object = nil
			end
			NotificationObj.Destroy = Destroy
			Close.Activated:Connect(Destroy)
			Notifications[1 + #Notifications] = NotificationObj
			return NotificationObj, Notification, Text
		end
	end
end
function library:CreateWindow(options, ...)
	options = (options and type(options) == "string" and resolvevararg("Window", options, ...)) or options
	local homepage = nil
	local windowoptions = options
	local windowName = options.Name or "Unnamed Window"
	options.Name = windowName
	if windowName and #windowName > 0 and library.WorkspaceName == "Root" then
		library.WorkspaceName = convertfilename(windowName, "Root")
	end
	local pepsiLibrary = Instance_new("ScreenGui")
	MainScreenGui = pepsiLibrary
	local main = Instance_new("Frame")
	local mainBorder = Instance_new("Frame")
	local tabSlider = Instance_new("Frame")
	local innerMain = Instance_new("Frame")
	local innerMainBorder = Instance_new("Frame")
	local innerBackdrop = Instance_new("ImageLabel")
	local innerMainHolder = Instance_new("Frame")
	local tabsHolder = Instance_new("ImageLabel")
	local tabHolderList = Instance_new("UIListLayout")
	local tabHolderPadding = Instance_new("UIPadding")
	local headline = Instance_new("TextLabel")
	local splitter = Instance_new("TextLabel")
	local submenuOpen = nil
	library.globals["__Window" .. options.Name] = {
		submenuOpen = submenuOpen
	}
	pepsiLibrary.Name = "Root"
	pepsiLibrary.Parent = library.gui_parent
	pepsiLibrary.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	pepsiLibrary.DisplayOrder = 10
	pepsiLibrary.ResetOnSpawn = false
	main.Name = "main"
	main.Parent = pepsiLibrary
	main.AnchorPoint = Vector2.new(0.5, 0.5)
	main.BackgroundColor3 = library.colors.background
	colored[1 + #colored] = {main, "BackgroundColor3", "background"}
	main.BorderColor3 = library.colors.outerBorder
	colored[1 + #colored] = {main, "BorderColor3", "outerBorder"}
	main.Position = UDim2.fromScale(0.5, 0.5)
	main.Size = UDim2.fromOffset(550, 700)
	main.Visible = false
	makeDraggable(main, main)
	mainBorder.Name = "mainBorder"
	mainBorder.Parent = main
	mainBorder.AnchorPoint = Vector2.new(0.5, 0.5)
	mainBorder.BackgroundColor3 = library.colors.background
	colored[1 + #colored] = {mainBorder, "BackgroundColor3", "background"}
	mainBorder.BorderColor3 = library.colors.innerBorder
	colored[1 + #colored] = {mainBorder, "BorderColor3", "innerBorder"}
	mainBorder.BorderMode = Enum.BorderMode.Inset
	mainBorder.Position = UDim2.fromScale(0.5, 0.5)
	mainBorder.Size = UDim2.fromScale(1, 1)
	innerMain.Name = "innerMain"
	innerMain.Parent = main
	innerMain.AnchorPoint = Vector2.new(0.5, 0.5)
	innerMain.BackgroundColor3 = library.colors.background
	colored[1 + #colored] = {innerMain, "BackgroundColor3", "background"}
	innerMain.BorderColor3 = library.colors.outerBorder
	colored[1 + #colored] = {innerMain, "BorderColor3", "outerBorder"}
	innerMain.Position = UDim2.fromScale(0.5, 0.5)
	innerMain.Size = UDim2.new(1, -14, 1, -14)
	innerMainBorder.Name = "innerMainBorder"
	innerMainBorder.Parent = innerMain
	innerMainBorder.AnchorPoint = Vector2.new(0.5, 0.5)
	innerMainBorder.BackgroundColor3 = library.colors.background
	colored[1 + #colored] = {innerMainBorder, "BackgroundColor3", "background"}
	innerMainBorder.BorderColor3 = library.colors.innerBorder
	colored[1 + #colored] = {innerMainBorder, "BorderColor3", "innerBorder"}
	innerMainBorder.BorderMode = Enum.BorderMode.Inset
	innerMainBorder.Position = UDim2.fromScale(0.5, 0.5)
	innerMainBorder.Size = UDim2.fromScale(1, 1)
	innerMainHolder.Name = "innerMainHolder"
	innerMainHolder.Parent = innerMain
	innerMainHolder.BackgroundColor3 = Color3.new(1, 1, 1)
	innerMainHolder.BackgroundTransparency = 1
	innerMainHolder.Position = UDim2:fromOffset(25)
	innerMainHolder.Size = UDim2.new(1, 0, 1, -25)
	innerBackdrop.Name = "innerBackdrop"
	innerBackdrop.Parent = innerMainHolder
	innerBackdrop.BackgroundColor3 = Color3.new(1, 1, 1)
	innerBackdrop.BackgroundTransparency = 1
	innerBackdrop.Size = UDim2.fromScale(1, 1)
	innerBackdrop.ZIndex = -1
	innerBackdrop.Visible = library_flags["__Designer.Background.UseBackgroundImage"] and true
	innerBackdrop.ImageColor3 = library_flags["__Designer.Background.ImageColor"] or Color3.new(1, 1, 1)
	innerBackdrop.ImageTransparency = (library_flags["__Designer.Background.ImageTransparency"] or 95) / 100
	innerBackdrop.Image = resolveid(library_flags["__Designer.Background.ImageAssetID"], "__Designer.Background.ImageAssetID") or ""
	library.Backdrop = innerBackdrop
	tabsHolder.Name = "tabsHolder"
	tabsHolder.Parent = innerMain
	tabsHolder.BackgroundColor3 = library.colors.topGradient
	colored[1 + #colored] = {tabsHolder, "BackgroundColor3", "topGradient"}
	tabsHolder.BorderSizePixel = 0
	tabsHolder.Position = UDim2.fromOffset(1, 1)
	tabsHolder.Size = UDim2.new(1, -2, 0, 23)
	tabsHolder.Image = "rbxassetid://2454009026"
	tabsHolder.ImageColor3 = library.colors.bottomGradient
	colored[1 + #colored] = {tabsHolder, "ImageColor3", "bottomGradient"}
	tabHolderList.Name = "tabHolderList"
	tabHolderList.Parent = tabsHolder
	tabHolderList.FillDirection = Enum.FillDirection.Horizontal
	tabHolderList.SortOrder = Enum.SortOrder.LayoutOrder
	tabHolderList.VerticalAlignment = Enum.VerticalAlignment.Center
	tabHolderList.Padding = UDim:new(3)
	tabHolderPadding.Name = "tabHolderPadding"
	tabHolderPadding.Parent = tabsHolder
	tabHolderPadding.PaddingLeft = UDim:new(7)
	headline.Name = "headline"
	headline.Parent = tabsHolder
	headline.BackgroundColor3 = Color3.new(1, 1, 1)
	headline.BackgroundTransparency = 1
	headline.LayoutOrder = 1
	headline.Font = Enum.Font.Code
	headline.Text = (windowName and tostring(windowName)) or "???"
	headline.TextColor3 = library.colors.main
	colored[1 + #colored] = {headline, "TextColor3", "main"}
	headline.TextSize = 14
	headline.TextStrokeColor3 = library.colors.outerBorder
	colored[1 + #colored] = {headline, "TextStrokeColor3", "outerBorder"}
	headline.TextStrokeTransparency = 0.75
	headline.Size = UDim2:new(textToSize(headline).X + 4, 1)
	splitter.Name = "splitter"
	splitter.Parent = tabsHolder
	splitter.BackgroundColor3 = Color3.new(1, 1, 1)
	splitter.BackgroundTransparency = 1
	splitter.LayoutOrder = 2
	splitter.Size = UDim2:new(6, 1)
	splitter.Font = Enum.Font.Code
	splitter.Text = "|"
	splitter.TextColor3 = library.colors.tabText
	colored[1 + #colored] = {splitter, "TextColor3", "tabText"}
	splitter.TextSize = 14
	splitter.TextStrokeColor3 = library.colors.tabText
	colored[1 + #colored] = {splitter, "TextStrokeColor3", "tabText"}
	splitter.TextStrokeTransparency = 0.75
	tabSlider.Name = "tabSlider"
	tabSlider.Parent = main
	tabSlider.BackgroundColor3 = library.colors.main
	colored[1 + #colored] = {tabSlider, "BackgroundColor3", "main"}
	tabSlider.BorderSizePixel = 0
	tabSlider.Position = UDim2.fromOffset(100, 30)
	tabSlider.Size = UDim2:fromOffset(1)
	tabSlider.Visible = false
	do
		local os_clock = os.clock
		library.signals[1 + #library.signals] = userInputService.InputBegan:Connect(function(keyCode, gameProcessedEvent)
			gameProcessedEvent = gameProcessedEvent or userInputService:GetFocusedTextBox()
			if not gameProcessedEvent and keyCode.KeyCode == library.configuration.hideKeybind then
				if not lasthidebing or os_clock() - lasthidebing > 12 then
					main.Visible = not main.Visible
				end
				lasthidebing = nil
			end
		end)
	end
	local windowFunctions = {
		tabCount = 0,
		selected = {},
		Flags = elements
	}
	library.globals["__Window" .. windowName].windowFunctions = windowFunctions
	function windowFunctions:Show(x)
		main.Visible = x == nil or x == true or x == 1
	end
	function windowFunctions:Hide(x)
		main.Visible = x == false or x == 0
	end
	function windowFunctions:Visibility(x)
		if x == nil then
			main.Visible = not main.Visible
		else
			main.Visible = x and true
		end
	end
	function windowFunctions:MoveTabSlider(tabObject)
		spawn(function()
			tabSlider.Visible = true
			tweenService:Create(tabSlider, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
				Size = UDim2.fromOffset(tabObject.AbsoluteSize.X, 1),
				Position = UDim2.fromOffset(tabObject.AbsolutePosition.X, tabObject.AbsolutePosition.Y + tabObject.AbsoluteSize.Y) - UDim2.fromOffset(main.AbsolutePosition.X, main.AbsolutePosition.Y)
			}):Play()
		end)
	end
	windowFunctions.LastTab = nil
	function windowFunctions:CreateTab(options, ...)
		options = (options and type(options) == "string" and resolvevararg("Tab", options, ...)) or options or {
			Name = "Pepsi Style: Elite Hax"
		}
		local image = options.Image
		if image then
			image = resolveid(image)
		end
		local tabName = options.Name or "Unnamed Tab"
		options.Name = tabName
		windowFunctions.tabCount = windowFunctions.tabCount + 1
		local newTab = Instance_new((image and "ImageButton") or "TextButton")
		local newTabHolder = Instance_new("Frame")
		library.globals["__Window" .. windowName].newTabHolder = newTabHolder
		local left = Instance_new("ScrollingFrame")
		local leftList = Instance_new("UIListLayout")
		local leftPadding = Instance_new("UIPadding")
		local right = Instance_new("ScrollingFrame")
		local rightList = Instance_new("UIListLayout")
		local rightPadding = Instance_new("UIPadding")
		newTab.Name = removeSpaces((tabName and tostring(tabName):lower() or "???") .. "Tab")
		newTab.Parent = tabsHolder
		newTab.BackgroundTransparency = 1
		newTab.LayoutOrder = (options.LastTab and 99999) or tonumber(options.TabOrder or options.LayoutOrder) or (2 + windowFunctions.tabCount)
		local colored_newTab_TextColor3 = nil
		if image then
			newTab.Image = image
			newTab.ImageColor3 = options.ImageColor or options.Color or Color3.new(1, 1, 1)
			newTab.Size = UDim2:new(tabsHolder.AbsoluteSize.Y, 1)
		else
			colored_newTab_TextColor3 = {newTab, "TextColor3", "tabText"}
			colored[1 + #colored] = colored_newTab_TextColor3
			newTab.Font = Enum.Font.Code
			newTab.Text = (tabName and tostring(tabName)) or "???"
			if windowFunctions.tabCount ~= 1 then
				colored_newTab_TextColor3[4] = 1.35
				newTab.TextColor3 = darkenColor(library.colors.tabText, 1.35)
			else
				newTab.TextColor3 = library.colors.tabText
			end
			newTab.TextSize = 14
			newTab.TextStrokeColor3 = Color3.fromRGB(42, 42, 42)
			newTab.TextStrokeTransparency = 0.75
			newTab.Size = UDim2:new(textToSize(newTab).X + 4, 1)
		end
		local function goto()
			if not library.colorpicker and not submenuOpen and windowFunctions.selected.button ~= newTab then
				pcall(function()
					for _, e in next, library.elements do
						if e and type(e) == "table" and e.Update then
							pcall(e.Update)
						end
					end
				end)
				if windowFunctions.LastTab then
					windowFunctions.LastTab[4] = 1.35
				end
				windowFunctions:MoveTabSlider(newTab)
				if windowFunctions.selected.button.ClassName == "TextButton" then
					tweenService:Create(windowFunctions.selected.button, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						TextColor3 = darkenColor(library.colors.tabText, 1.35)
					}):Play()
				end
				if colored_newTab_TextColor3 then
					colored_newTab_TextColor3[4] = nil
				end
				windowFunctions.selected.holder.Visible = false
				windowFunctions.selected.button = newTab
				windowFunctions.selected.holder = newTabHolder
				if windowFunctions.selected.button.ClassName == "TextButton" then
					tweenService:Create(windowFunctions.selected.button, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						TextColor3 = library.colors.tabText
					}):Play()
				end
				windowFunctions.selected.holder.Visible = true
				windowFunctions.LastTab = colored_newTab_TextColor3
			end
		end
		if not homepage and newTab.LayoutOrder <= 4 then
			homepage = goto
		end
		library.signals[1 + #library.signals] = newTab.MouseButton1Click:Connect(goto)
		if windowFunctions.tabCount == 1 then
			tabSlider.Size = UDim2.fromOffset(newTab.AbsoluteSize.X, 1)
			tabSlider.Position = UDim2.fromOffset(newTab.AbsolutePosition.X, newTab.AbsolutePosition.Y + newTab.AbsoluteSize.Y) - UDim2.fromOffset(main.AbsolutePosition.X, main.AbsolutePosition.Y)
			tabSlider.Visible = true
			windowFunctions.selected.holder = newTabHolder
			windowFunctions.selected.button = newTab
		end
		newTabHolder.Name = removeSpaces((tabName and tabName:lower()) or "???") .. "TabHolder"
		newTabHolder.Parent = innerMainHolder
		newTabHolder.BackgroundColor3 = Color3.new(1, 1, 1)
		newTabHolder.BackgroundTransparency = 1
		newTabHolder.Size = UDim2.fromScale(1, 1)
		newTabHolder.Visible = windowFunctions.tabCount == 1
		left.Name = "left"
		left.Parent = newTabHolder
		left.BackgroundColor3 = Color3.new(1, 1, 1)
		left.BackgroundTransparency = 1
		left.Size = UDim2.fromScale(0.5, 1)
		left.CanvasSize = UDim2.new()
		left.ScrollBarThickness = 0
		leftList.Name = "leftList"
		leftList.Parent = left
		leftList.HorizontalAlignment = Enum.HorizontalAlignment.Center
		leftList.SortOrder = Enum.SortOrder.LayoutOrder
		leftList.Padding = UDim:new(14)
		leftPadding.Name = "leftPadding"
		leftPadding.Parent = left
		leftPadding.PaddingTop = UDim:new(12)
		right.Name = "right"
		right.Parent = newTabHolder
		right.BackgroundColor3 = Color3.new(1, 1, 1)
		right.BackgroundTransparency = 1
		right.Size = UDim2.fromScale(0.5, 1)
		right.CanvasSize = UDim2.new()
		right.ScrollBarThickness = 0
		right.Position = UDim2.new(0.5)
		rightList.Name = "rightList"
		rightList.Parent = right
		rightList.HorizontalAlignment = Enum.HorizontalAlignment.Center
		rightList.SortOrder = Enum.SortOrder.LayoutOrder
		rightList.Padding = UDim:new(14)
		rightPadding.Name = "rightPadding"
		rightPadding.Parent = right
		rightPadding.PaddingTop = UDim:new(12)
		local tabFunctions = {
			Flags = {}
		}
		function tabFunctions:CreateSection(options, ...)
			options = (options and type(options) == "string" and resolvevararg("Tab", options, ...)) or options
			local sectionName, holderSide = options.Name or "Unnamed Section", options.Side
			options.Name = sectionName
			local newSection = Instance_new("Frame")
			local newSectionBorder = Instance_new("Frame")
			local insideBorderHider = Instance_new("Frame")
			local outsideBorderHider = Instance_new("Frame")
			local sectionHolder = Instance_new("Frame")
			local sectionList = Instance_new("UIListLayout")
			local sectionPadding = Instance_new("UIPadding")
			local sectionHeadline = Instance_new("TextLabel")
			colorpickerconflicts[1 + #colorpickerconflicts] = insideBorderHider
			colorpickerconflicts[1 + #colorpickerconflicts] = outsideBorderHider
			colorpickerconflicts[1 + #colorpickerconflicts] = sectionHeadline
			newSection.Name = removeSpaces((sectionName and sectionName:lower() or "???") .. "Section")
			newSection.Parent = (holderSide and ((holderSide:lower() == "left" and left) or right)) or left
			newSection.BackgroundColor3 = library.colors.sectionBackground
			colored[1 + #colored] = {newSection, "BackgroundColor3", "sectionBackground"}
			newSection.BorderColor3 = library.colors.outerBorder
			colored[1 + #colored] = {newSection, "BorderColor3", "outerBorder"}
			newSection.Size = UDim2.new(1, -20)
			newSection.Visible = false
			newSectionBorder.Name = "newSectionBorder"
			newSectionBorder.Parent = newSection
			newSectionBorder.BackgroundColor3 = library.colors.sectionBackground
			colored[1 + #colored] = {newSectionBorder, "BackgroundColor3", "sectionBackground"}
			newSectionBorder.BorderColor3 = library.colors.innerBorder
			colored[1 + #colored] = {newSectionBorder, "BorderColor3", "innerBorder"}
			newSectionBorder.BorderMode = Enum.BorderMode.Inset
			newSectionBorder.Size = UDim2.fromScale(1, 1)
			sectionHolder.Name = "sectionHolder"
			sectionHolder.Parent = newSection
			sectionHolder.BackgroundColor3 = Color3.new(1, 1, 1)
			sectionHolder.BackgroundTransparency = 1
			sectionHolder.Size = UDim2.fromScale(1, 1)
			sectionList.Name = "sectionList"
			sectionList.Parent = sectionHolder
			sectionList.HorizontalAlignment = Enum.HorizontalAlignment.Center
			sectionList.SortOrder = Enum.SortOrder.LayoutOrder
			sectionList.Padding = UDim:new(1)
			sectionPadding.Name = "sectionPadding"
			sectionPadding.Parent = sectionHolder
			sectionPadding.PaddingTop = UDim:new(9)
			sectionHeadline.Name = "sectionHeadline"
			sectionHeadline.Parent = newSection
			sectionHeadline.BackgroundColor3 = Color3.new(1, 1, 1)
			sectionHeadline.BackgroundTransparency = 1
			sectionHeadline.Position = UDim2.fromOffset(18, -8)
			sectionHeadline.ZIndex = 2
			sectionHeadline.Font = Enum.Font.Code
			sectionHeadline.LineHeight = 1.15
			sectionHeadline.Text = (sectionName and sectionName or "???")
			sectionHeadline.TextColor3 = library.colors.section
			colored[1 + #colored] = {sectionHeadline, "TextColor3", "section"}
			sectionHeadline.TextSize = 14
			sectionHeadline.Size = UDim2.fromOffset(textToSize(sectionHeadline).X + 4, 12)
			insideBorderHider.Name = "insideBorderHider"
			insideBorderHider.Parent = newSection
			insideBorderHider.BackgroundColor3 = library.colors.sectionBackground
			colored[1 + #colored] = {insideBorderHider, "BackgroundColor3", "sectionBackground"}
			insideBorderHider.BorderSizePixel = 0
			insideBorderHider.Position = UDim2.fromOffset(15)
			insideBorderHider.Size = UDim2.fromOffset(sectionHeadline.AbsoluteSize.X + 3, 1)
			outsideBorderHider.Name = "outsideBorderHider"
			outsideBorderHider.Parent = newSection
			outsideBorderHider.BackgroundColor3 = library.colors.background
			colored[1 + #colored] = {outsideBorderHider, "BackgroundColor3", "background"}
			outsideBorderHider.BorderSizePixel = 0
			outsideBorderHider.Position = UDim2.fromOffset(15, -1)
			outsideBorderHider.Size = UDim2.fromOffset(sectionHeadline.AbsoluteSize.X + 3, 1)
			local sectionFunctions = {
				Flags = {}
			}
			function sectionFunctions:Update(extra)
				local currentHolder = newSection.Parent
				if not newSection.Visible then
					newSection.Visible = true
				end
				newSection.Size = UDim2.new(1, -20, 0, (sectionList.AbsoluteContentSize.Y + 15))
				currentHolder.CanvasSize = UDim2:fromOffset(currentHolder:FindFirstChildOfClass("UIListLayout").AbsoluteContentSize.Y + 22 + (extra and extra or 0))
			end
			function sectionFunctions:AddToggle(options, ...)
				options = (options and type(options) == "string" and resolvevararg("Tab", options, ...)) or options
				local toggleName, alreadyEnabled, callback, flagName = assert(options.Name, "Missing Name for new toggle."), options.Value or options.Enabled, options.Callback, options.Flag or (function()
					library.unnamedtoggles = 1 + (library.unnamedtoggles or 0)
					return "Toggle" .. tostring(library.unnamedtoggles)
				end)()
				if elements[flagName] ~= nil then
					--warn(debug.traceback("Warning! Re-used flag '" .. flagName .. "'", 3))
				end
				local newToggle = Instance_new("Frame")
				local toggle = Instance_new("ImageLabel")
				local toggleInner = Instance_new("ImageLabel")
				local toggleButton = Instance_new("TextButton")
				local toggleHeadline = Instance_new("TextLabel")
				local keybindPositioner = Instance_new("Frame")
				local keybindList = Instance_new("UIListLayout")
				local keybindButton = Instance_new("TextButton")
				local lockedup = options.Locked
				newToggle.Name = removeSpaces((toggleName and toggleName:lower() or "???") .. "Toggle")
				newToggle.Parent = sectionHolder
				newToggle.BackgroundColor3 = Color3.new(1, 1, 1)
				newToggle.BackgroundTransparency = 1
				newToggle.Size = UDim2.new(1, 0, 0, 19)
				toggle.Name = "toggle"
				toggle.Parent = newToggle
				toggle.Active = true
				toggle.BackgroundColor3 = library.colors.topGradient
				local colored_toggle_BackgroundColor3 = {toggle, "BackgroundColor3", "topGradient"}
				colored[1 + #colored] = colored_toggle_BackgroundColor3
				toggle.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {toggle, "BorderColor3", "elementBorder"}
				toggle.Position = UDim2.fromScale(0.0308237672, 0.165842205)
				toggle.Selectable = true
				toggle.Size = UDim2.fromOffset(12, 12)
				toggle.Image = "rbxassetid://2454009026"
				toggle.ImageColor3 = library.colors.bottomGradient
				local colored_toggle_ImageColor3 = {toggle, "ImageColor3", "bottomGradient"}
				colored[1 + #colored] = colored_toggle_ImageColor3
				toggleInner.Name = "toggleInner"
				toggleInner.Parent = toggle
				toggleInner.Active = true
				toggleInner.AnchorPoint = Vector2.new(0.5, 0.5)
				toggleInner.BackgroundColor3 = library.colors.topGradient
				local colored_toggleInner_BackgroundColor3 = {toggleInner, "BackgroundColor3", "topGradient"}
				colored[1 + #colored] = colored_toggleInner_BackgroundColor3
				toggleInner.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {toggleInner, "BorderColor3", "elementBorder"}
				toggleInner.Position = UDim2.fromScale(0.5, 0.5)
				toggleInner.Selectable = true
				toggleInner.Size = UDim2.new(1, -4, 1, -4)
				toggleInner.Image = "rbxassetid://2454009026"
				toggleInner.ImageColor3 = library.colors.bottomGradient
				local colored_toggleInner_ImageColor3 = {toggleInner, "ImageColor3", "bottomGradient"}
				colored[1 + #colored] = colored_toggleInner_ImageColor3
				toggleButton.Name = "toggleButton"
				toggleButton.Parent = newToggle
				toggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
				toggleButton.BackgroundTransparency = 1
				toggleButton.Size = UDim2.fromScale(1, 1)
				toggleButton.ZIndex = 5
				toggleButton.Font = Enum.Font.SourceSans
				toggleButton.Text = ""
				toggleButton.TextColor3 = Color3.new()
				toggleButton.TextSize = 14
				toggleButton.TextTransparency = 1
				toggleHeadline.Name = "toggleHeadline"
				toggleHeadline.Parent = newToggle
				toggleHeadline.BackgroundColor3 = Color3.new(1, 1, 1)
				toggleHeadline.BackgroundTransparency = 1
				toggleHeadline.Position = UDim2.fromScale(0.123, 0.165842161)
				toggleHeadline.Size = UDim2.fromOffset(170, 11)
				toggleHeadline.Font = Enum.Font.Code
				toggleHeadline.Text = toggleName or "???"
				toggleHeadline.TextColor3 = library.colors.elementText
				local colored_toggleHeadline_TextColor3 = {toggleHeadline, "TextColor3", "elementText", (lockedup and 0.5) or nil}
				colored[1 + #colored] = colored_toggleHeadline_TextColor3
				toggleHeadline.TextSize = 14
				toggleHeadline.TextXAlignment = Enum.TextXAlignment.Left
				local last_v = nil
				local function Set(t, newStatus)
					if nil == newStatus and t ~= nil then
						newStatus = t
					end
					last_v = library_flags[flagName]
					if options.Condition ~= nil then
						if type(options.Condition) == "function" then
							local v, e = pcall(options.Condition, newStatus, last_v)
							if e then
								if not v then
								--	warn(debug.traceback(string.format("Error in toggle %s's Condition function: %s", flagName, e), 2))
								end
							else
								return last_v
							end
						end
					end
					if newStatus ~= nil and type(newStatus) == "boolean" then
						library_flags[flagName] = newStatus
						if options.Location then
							options.Location[options.LocationFlag or flagName] = newStatus
						end
						if callback and (last_v ~= newStatus or options.AllowDuplicateCalls) then
							colored_toggleInner_BackgroundColor3[3] = (newStatus and "main") or "topGradient"
							colored_toggleInner_BackgroundColor3[4] = (newStatus and 1.5) or nil
							colored_toggleInner_ImageColor3[3] = (newStatus and "main") or "bottomGradient"
							colored_toggleInner_ImageColor3[4] = (newStatus and 2.5) or nil
							tweenService:Create(toggleInner, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
								BackgroundColor3 = (newStatus and darkenColor(library.colors.main, 1.5)) or library.colors.topGradient,
								ImageColor3 = (newStatus and darkenColor(library.colors.main, 2.5)) or library.colors.bottomGradient
							}):Play()
							task.spawn(callback, newStatus, last_v)
						end
					end
					return newStatus
				end
				options.Keybind = options.Keybind or options.Key or options.KeyBind
				local haskbflag, kbUpdate, kbData = nil, nil, nil
				if options.Keybind then
					local options = options.Keybind
					local htyp = typeof(options)
					if htyp == "EnumItem" then
						options = {
							Value = options
						}
					elseif htyp ~= "table" then
						options = {}
					end
					local presetKeybind, callback, kbpresscallback, kbflag = options.Value or options.Key, options.Callback, options.Pressed, options.Flag or (function()
						if flagName then
							return flagName .. "_ToggleKeybind"
						end
						library.unnamedkeybinds = 1 + (library.unnamedkeybinds or 0)
						return "Keybind" .. tostring(library.unnamedkeybinds)
					end)()
					if elements[kbflag] ~= nil or kbflag == flagName then
					--	warn(debug.traceback("Warning! Re-used flag '" .. kbflag .. "'", 3))
					end
					haskbflag = kbflag
					library.keyHandler = keyHandler
					local keyHandler = options.KeyNames or keyHandler
					local bindedKey = presetKeybind
					local justBinded = false
					local keyName = keyHandler.allowedKeys[bindedKey] or (bindedKey and (bindedKey.Name or tostring(bindedKey):gsub("Enum.KeyCode.", ""))) or "NONE"
					local newKeybind = newToggle
					keybindPositioner.Name = "keybindPositioner"
					keybindPositioner.Parent = newKeybind
					keybindPositioner.BackgroundColor3 = Color3.new(1, 1, 1)
					keybindPositioner.BackgroundTransparency = 1
					keybindPositioner.Position = UDim2.new(0.00448430516)
					keybindPositioner.Size = UDim2.fromOffset(214, 19)
					keybindPositioner.ZIndex = 1 + toggleButton.ZIndex
					keybindList.Name = "keybindList"
					keybindList.Parent = keybindPositioner
					keybindList.FillDirection = Enum.FillDirection.Horizontal
					keybindList.HorizontalAlignment = Enum.HorizontalAlignment.Right
					keybindList.SortOrder = Enum.SortOrder.LayoutOrder
					keybindList.VerticalAlignment = Enum.VerticalAlignment.Center
					keybindButton.Name = "keybindButton"
					keybindButton.Parent = keybindPositioner
					keybindButton.Active = false
					keybindButton.BackgroundColor3 = Color3.new(1, 1, 1)
					keybindButton.BackgroundTransparency = 1
					keybindButton.Position = UDim2.fromScale(0.598130822, 0.184210524)
					keybindButton.Selectable = false
					keybindButton.Size = UDim2.fromOffset(46, 12)
					keybindButton.Font = Enum.Font.Code
					keybindButton.Text = keyName or (presetKeybind and tostring(presetKeybind):gsub("Enum.KeyCode.", "")) or "[NONE]"
					keybindButton.TextColor3 = library.colors.otherElementText
					local colored_keybindButton_TextColor3 = {keybindButton, "TextColor3", "otherElementText"}
					colored[1 + #colored] = colored_keybindButton_TextColor3
					keybindButton.TextSize = 14
					keybindButton.TextXAlignment = Enum.TextXAlignment.Right
					keybindButton.Size = UDim2.fromOffset(textToSize(keybindButton).X + 4, 12)
					local klast_v = bindedKey or presetKeybind
					local function newkey()
						if lockedup then
							return
						end
						local old_texts = keybindButton.Text
						colored_keybindButton_TextColor3[3] = "main"
						colored_keybindButton_TextColor3[4] = nil
						tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							TextColor3 = library.colors.main
						}):Play()
						if klast_v then
							keybindButton.Text = "(Was " .. (klast_v and tostring(klast_v):gsub("Enum.KeyCode.", "") or "[NONE]") .. ") [...]"
						else
							keybindButton.Text = "[...]"
						end
						local receivingKey = nil
						receivingKey = userInputService.InputBegan:Connect(function(key)
							if lockedup then
								return receivingKey:Disconnect()
							end
							klast_v = library_flags[kbflag]
							if not keyHandler.notAllowedKeys[key.KeyCode] then
								if key.KeyCode ~= Enum.KeyCode.Unknown then
									bindedKey = (key.KeyCode ~= Enum.KeyCode.Escape and key.KeyCode) or library_flags[kbflag]
									library_flags[kbflag] = bindedKey
									if options.Location then
										options.Location[options.LocationFlag or kbflag] = bindedKey
									end
									if bindedKey then
										keyName = keyHandler.allowedKeys[bindedKey] or (bindedKey and (bindedKey.Name or tostring(bindedKey):gsub("Enum.KeyCode.", ""))) or "NONE"
										keybindButton.Text = "[" .. (keyName or (bindedKey and bindedKey.Name) or "NONE") .. "]"
										keybindButton.Size = UDim2.fromOffset(textToSize(keybindButton).X + 4, 12)
										justBinded = true
										colored_keybindButton_TextColor3[3] = "otherElementText"
										colored_keybindButton_TextColor3[4] = nil
										tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
											TextColor3 = library.colors.otherElementText
										}):Play()
										receivingKey:Disconnect()
									end
									if callback and klast_v ~= bindedKey then
										task.spawn(callback, bindedKey, klast_v)
									end
									return
								elseif key.KeyCode == Enum.KeyCode.Unknown and not keyHandler.notAllowedMouseInputs[key.UserInputType] then
									bindedKey = key.UserInputType
									library_flags[kbflag] = bindedKey
									if options.Location then
										options.Location[options.LocationFlag or kbflag] = bindedKey
									end
									keyName = keyHandler.allowedKeys[bindedKey]
									keybindButton.Text = "[" .. (keyName or (bindedKey and bindedKey.Name) or tostring(bindedKey.KeyCode):gsub("Enum.KeyCode.", "")) .. "]"
									keybindButton.Size = UDim2.fromOffset(textToSize(keybindButton).X + 4, 12)
									justBinded = true
									colored_keybindButton_TextColor3[3] = "otherElementText"
									colored_keybindButton_TextColor3[4] = nil
									tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
										TextColor3 = library.colors.otherElementText
									}):Play()
									receivingKey:Disconnect()
									if callback and klast_v ~= bindedKey then
										task.spawn(callback, bindedKey, klast_v)
									end
									return
								end
							end
							if key.KeyCode == Enum.KeyCode.Backspace or Enum.KeyCode.Escape == key.KeyCode then
								old_texts, bindedKey = "[NONE]", nil
							end
							keybindButton.Text = old_texts
							colored_keybindButton_TextColor3[3] = "otherElementText"
							colored_keybindButton_TextColor3[4] = nil
							tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
								TextColor3 = library.colors.otherElementText
							}):Play()
							receivingKey:Disconnect()
							if callback and klast_v ~= bindedKey then
								task.spawn(callback, bindedKey, klast_v)
							end
						end)
						library.signals[1 + #library.signals] = receivingKey
					end
					library.signals[1 + #library.signals] = keybindButton.MouseButton1Click:Connect(newkey)
					if kbpresscallback and not justBinded then
						library.signals[1 + #library.signals] = userInputService.InputBegan:Connect(function(key, chatting)
							chatting = chatting or (userInputService:GetFocusedTextBox() and true)
							if not chatting and not justBinded then
								if not keyHandler.notAllowedKeys[key.KeyCode] and not keyHandler.notAllowedMouseInputs[key.UserInputType] then
									if bindedKey == key.UserInputType or not justBinded and bindedKey == key.KeyCode then
										if kbpresscallback then
											task.spawn(kbpresscallback, key, chatting)
										end
									end
									justBinded = false
								end
							end
						end)
					end
					options.Mode = (options.Mode and string.lower(tostring(options.Mode))) or "dynamic"
					local modes = {
						dynamic = 1,
						hold = 1,
						toggle = 1
					}
					library.signals[1 + #library.signals] = userInputService.InputBegan:Connect(function(input, chatting)
						if justBinded then
							wait(0.1)
							justBinded = false
							return
						elseif lockedup then
							return
						end
						chatting = chatting or userInputService:GetFocusedTextBox()
						if not chatting then
							local key = library_flags[kbflag]
							local mode = options.Mode
							if not modes[mode] then
								mode = "dynamic"
								options.Mode = mode
							end
							if key == input.KeyCode or key == input.UserInputType then
								if mode == "dynamic" or mode == "both" or mode == "hold" then
									if mode == "dynamic" and library_flags[flagName] then
										return Set(false)
									end
									Set(true)
									local now = os.clock()
									local waittil = nil
									if mode == "dynamic" then
										waittil = Instance.new("BindableEvent")
									end
									local xconnection = nil
									xconnection = userInputService.InputEnded:Connect(function(input, chatting)
										chatting = chatting or userInputService:GetFocusedTextBox()
										if not chatting and (key == input.KeyCode or key == input.UserInputType) then
											xconnection = (xconnection and xconnection:Disconnect() and nil) or nil
											if mode == "hold" or os.clock() - now > math.clamp(tonumber(options.DynamicTime) or 0.65, 0.05, 20) then
												Set(false)
											end
										end
									end)
									library.signals[1 + #library.signals] = xconnection
								else
									Set(not library_flags[flagName])
								end
							end
						end
					end)
					local function kbset(t, key)
						if nil == key and t ~= nil then
							key = t
						end
						if key == "nil" or key == "NONE" or key == "none" then
							key = nil
						end
						last_v = library_flags[kbflag]
						bindedKey = key
						library_flags[kbflag] = key
						if options.Location then
							options.Location[options.LocationFlag or kbflag] = key
						end
						keyName = (key == nil and "NONE") or keyHandler.allowedKeys[key]
						keybindButton.Text = "[" .. (keyName or key.Name or tostring(key):gsub("Enum.KeyCode.", "")) .. "]"
						keybindButton.Size = UDim2.fromOffset(textToSize(keybindButton).X + 4, 12)
						justBinded = true
						colored_keybindButton_TextColor3[3] = "otherElementText"
						colored_keybindButton_TextColor3[4] = nil
						tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							TextColor3 = library.colors.otherElementText
						}):Play()
						if callback and (last_v ~= key or options.AllowDuplicateCalls) then
							task.spawn(callback, key, last_v)
						end
						return key
					end
					if presetKeybind ~= nil then
						kbset(presetKeybind)
					else
						library_flags[kbflag] = bindedKey
						if options.Location then
							options.Location[options.LocationFlag or kbflag] = bindedKey
						end
					end
					local default = library_flags[kbflag]
					local function UpdateKb()
						callback, kbpresscallback = options.Callback, options.Pressed
						local key = library_flags[kbflag]
						bindedKey = key
						keyName = keyHandler.allowedKeys[bindedKey] or (bindedKey and (bindedKey.Name or tostring(bindedKey):gsub("Enum.KeyCode.", ""))) or "NONE"
						keybindButton.Text = "[" .. (keyName or (key and key.Name) or tostring(key):gsub("Enum.KeyCode.", "")) .. "]"
						keybindButton.Size = UDim2.fromOffset(textToSize(keybindButton).X + 4, 12)
						colored_keybindButton_TextColor3[3] = "otherElementText"
						colored_keybindButton_TextColor3[4] = (lockedup and 2.5) or nil
						tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							TextColor3 = (lockedup and darkenColor(library.colors.otherElementText, colored_keybindButton_TextColor3[4])) or library.colors.otherElementText
						}):Play()
						return key
					end
					kbUpdate = UpdateKb
					local objectdata = {
						Options = options,
						Name = kbflag,
						Flag = kbflag,
						Type = "Keybind",
						Default = default,
						Parent = sectionFunctions,
						Instance = keybindButton,
						Get = function()
							return library_flags[kbflag]
						end,
						Set = kbset,
						RawSet = function(t, key)
							if t ~= nil and key == nil then
								key = t
							end
							library_flags[kbflag] = key
							UpdateKb()
							return key
						end,
						Update = UpdateKb,
						Reset = function()
							return kbset(nil, default)
						end
					}
					kbData = objectdata
					tabFunctions.Flags[kbflag], sectionFunctions.Flags[kbflag], elements[kbflag] = objectdata, objectdata, objectdata
				end
				sectionFunctions:Update()
				library.signals[1 + #library.signals] = toggleButton.MouseButton1Click:Connect(function()
					if not library.colorpicker and not submenuOpen and not lockedup then
						local newval = not library_flags[flagName]
						if options.Condition ~= nil then
							if type(options.Condition) == "function" then
								local v, e = pcall(options.Condition, newval, not newval)
								if e then
									if not v then
									--	warn(debug.traceback(string.format("Error in toggle %s's Condition function: %s", flagName, e), 2))
									end
								else
									return last_v
								end
							end
						end
						library_flags[flagName] = newval
						if options.Location then
							options.Location[options.LocationFlag or flagName] = newval
						end
						colored_toggleInner_BackgroundColor3[3] = (newval and "main") or "topGradient"
						colored_toggleInner_BackgroundColor3[4] = (newval and 1.5) or nil
						colored_toggleInner_ImageColor3[3] = (newval and "main") or "bottomGradient"
						colored_toggleInner_ImageColor3[4] = (newval and 2.5) or nil
						tweenService:Create(toggleInner, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = (newval and darkenColor(library.colors.main, 1.5)) or library.colors.topGradient,
							ImageColor3 = (newval and darkenColor(library.colors.main, 2.5)) or library.colors.bottomGradient
						}):Play()
						if callback then
							task.spawn(callback, newval)
						end
					end
				end)
				library.signals[1 + #library.signals] = newToggle.MouseEnter:Connect(function()
					colored_toggle_BackgroundColor3[3] = "main"
					colored_toggle_BackgroundColor3[4] = 1.5
					colored_toggle_ImageColor3[3] = "main"
					colored_toggle_ImageColor3[4] = 2.5
					tweenService:Create(toggle, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						BackgroundColor3 = darkenColor(library.colors.main, 1.5),
						ImageColor3 = darkenColor(library.colors.main, 2.5)
					}):Play()
				end)
				library.signals[1 + #library.signals] = newToggle.MouseLeave:Connect(function()
					colored_toggle_BackgroundColor3[3] = "topGradient"
					colored_toggle_BackgroundColor3[4] = nil
					colored_toggle_ImageColor3[3] = "bottomGradient"
					colored_toggle_ImageColor3[4] = nil
					tweenService:Create(toggle, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						BackgroundColor3 = library.colors.topGradient,
						ImageColor3 = library.colors.bottomGradient
					}):Play()
				end)
				if library_flags[flagName] then
					colored_toggleInner_BackgroundColor3[3] = "main"
					colored_toggleInner_BackgroundColor3[4] = 1.5
					colored_toggleInner_ImageColor3[3] = "main"
					colored_toggleInner_ImageColor3[4] = 2.5
					tweenService:Create(toggleInner, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						BackgroundColor3 = darkenColor(library.colors.main, 1.5),
						ImageColor3 = darkenColor(library.colors.main, 2.5)
					}):Play()
				end
				local function Update()
					toggleName, callback = options.Name or toggleName, options.Callback
					local boolstatus = library_flags[flagName]
					colored_toggleInner_BackgroundColor3[3] = (boolstatus and "main") or "topGradient"
					colored_toggleInner_BackgroundColor3[4] = (boolstatus and 1.5) or nil
					colored_toggleInner_ImageColor3[3] = (boolstatus and "main") or "bottomGradient"
					colored_toggleInner_ImageColor3[4] = (boolstatus and 2.5) or nil
					if lockedup then
						colored_toggleInner_BackgroundColor3[4] = 1 + (colored_toggleInner_BackgroundColor3[4] or 1)
						colored_toggleInner_ImageColor3[4] = 1 + (colored_toggleInner_ImageColor3[4] or 1)
					end
					tweenService:Create(toggleInner, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						BackgroundColor3 = (boolstatus and darkenColor(library.colors.main, colored_toggleInner_BackgroundColor3[4])) or library.colors.topGradient,
						ImageColor3 = (boolstatus and darkenColor(library.colors.main, colored_toggleInner_ImageColor3[4])) or library.colors.bottomGradient
					}):Play()
					colored_toggleHeadline_TextColor3[4] = (lockedup and 2.5) or nil
					tweenService:Create(toggleHeadline, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						TextColor3 = (lockedup and darkenColor(library.colors.elementText, colored_toggleHeadline_TextColor3[4])) or library.colors.elementText
					}):Play()
					toggleHeadline.Text = toggleName or "???"
					return boolstatus
				end
				if alreadyEnabled ~= nil then
					Set(alreadyEnabled)
				else
					library_flags[flagName] = alreadyEnabled and true
					if options.Location then
						options.Location[options.LocationFlag or flagName] = alreadyEnabled and true
					end
				end
				local default = library_flags[flagName] and true
				Update()
				if kbUpdate then
					kbUpdate()
				end
				local objectdata = {
					Options = options,
					Type = "Toggle",
					Name = flagName,
					Flag = flagName,
					Default = default,
					Parent = sectionFunctions,
					Instance = toggleButton,
					Set = Set,
					RawSet = function(t, newStatus, condition)
						if t ~= nil and type(t) ~= "table" then
							newStatus, condition = t, newStatus
						end
						last_v = library_flags[flagName]
						if condition ~= false and condition ~= 0 then
							local overridecondition = condition and type(condition) == "function" and condition
							if overridecondition or options.Condition ~= nil then
								if type(overridecondition or options.Condition) == "function" then
									local v, e = pcall(overridecondition or options.Condition, newStatus, last_v)
									if e then
										if not v then
										--	warn(debug.traceback(string.format("Error in toggle (RawSet) %s's Condition function: %s", flagName, e), 2))
										end
									else
										return last_v
									end
								end
							end
						end
						library_flags[flagName] = newStatus
						if options.Location then
							options.Location[options.LocationFlag or flagName] = newStatus
						end
						Update()
						return newStatus
					end,
					KeybindData = kbData,
					Get = function()
						return library_flags[flagName]
					end,
					Update = Update,
					Reset = function()
						return Set(nil, default)
					end,
					SetLocked = function(t, state)
						if type(t) ~= "table" then
							state = t
						end
						local last_v = lockedup
						if state == nil then
							lockedup = not lockedup
						else
							lockedup = state
						end
						if lockedup ~= last_v then
							colored_toggleHeadline_TextColor3[4] = (lockedup and 2.5) or nil
							Update()
							if kbUpdate then
								kbUpdate()
							end
						end
						return lockedup
					end,
					Lock = function()
						if not lockedup then
							lockedup = true
							colored_toggleHeadline_TextColor3[4] = 2.5
							Update()
							if kbUpdate then
								kbUpdate()
							end
						end
						return lockedup
					end,
					Unlock = function()
						if lockedup then
							lockedup = false
							colored_toggleHeadline_TextColor3[4] = nil
							Update()
							if kbUpdate then
								kbUpdate()
							end
						end
						return lockedup
					end,
					SetCondition = function(t, condition)
						if type(t) ~= "table" and condition == nil then
							condition = t
						end
						options.Condition = condition
						return condition
					end
				}
				if kbData then
					kbData.ToggleData = objectdata
				end
				tabFunctions.Flags[flagName], sectionFunctions.Flags[flagName], elements[flagName] = objectdata, objectdata, objectdata
				return objectdata
			end
			sectionFunctions.CreateToggle = sectionFunctions.AddToggle
			sectionFunctions.NewToggle = sectionFunctions.AddToggle
			sectionFunctions.Toggle = sectionFunctions.AddToggle
			sectionFunctions.Tog = sectionFunctions.AddToggle
			function sectionFunctions:AddButton(...)
				local args = nil
				if ... and not select(2, ...) and type(...) == "table" and #... > 0 and type((...)[1]) == "table" and (...)[1].Name then
					args = ...
				else
					args = {...}
				end
				local buttons, offset = {}, 0
				local fram = nil
				for _, options in next, args do
					options = (options and options[1] and type(options[1]) == "string" and resolvevararg("Button", unpack(options))) or options
					local buttonName, callback = assert(options.Name, "Missing Name for new button."), options.Callback  or function() --warn("AddButton missing callback. Name:", options.Name or ("No Name", debug.traceback("")) and nil)
					end
					local lockedup = options.Locked
					local realButton = Instance_new("TextButton")
					realButton.Name = "realButton"
					realButton.BackgroundColor3 = Color3.new(1, 1, 1)
					realButton.BackgroundTransparency = 1
					realButton.Size = UDim2.fromScale(1, 1)
					realButton.ZIndex = 5
					realButton.Font = Enum.Font.Code
					realButton.Text = (buttonName and tostring(buttonName)) or "???"
					realButton.TextColor3 = library.colors.elementText
					local colored_realButton_TextColor3 = {realButton, "TextColor3", "elementText"}
					colored[1 + #colored] = colored_realButton_TextColor3
					realButton.TextSize = 14
					local textsize = textToSize(realButton).X + 14
					if newSection.Parent.AbsoluteSize.X < offset + textsize + 8 then
						offset, fram = 0, nil
					end
					local newButton = fram or Instance_new("Frame")
					fram = newButton
					local button = Instance_new("ImageLabel")
					newButton.Name = removeSpaces((buttonName and buttonName:lower() or "???") .. "Holder")
					newButton.Parent = sectionHolder
					newButton.BackgroundColor3 = Color3.new(1, 1, 1)
					newButton.BackgroundTransparency = 1
					newButton.Size = UDim2.new(1, 0, 0, 24)
					button.Name = "button"
					button.Parent = newButton
					button.Active = true
					button.BackgroundColor3 = library.colors.topGradient
					local colored_button_BackgroundColor3 = {button, "BackgroundColor3", "topGradient"}
					colored[1 + #colored] = colored_button_BackgroundColor3
					button.BorderColor3 = library.colors.elementBorder
					colored[1 + #colored] = {button, "BorderColor3", "elementBorder"}
					button.Position = UDim2.new(0.031, offset, 0.166)
					button.Selectable = true
					button.Size = UDim2.fromOffset(28, 18)
					button.Image = "rbxassetid://2454009026"
					button.ImageColor3 = library.colors.bottomGradient
					local colored_button_ImageColor3 = {button, "ImageColor3", "bottomGradient"}
					colored[1 + #colored] = colored_button_ImageColor3
					local buttonInner = Instance_new("ImageLabel")
					buttonInner.Name = "buttonInner"
					buttonInner.Parent = button
					buttonInner.Active = true
					buttonInner.AnchorPoint = Vector2.new(0.5, 0.5)
					buttonInner.BackgroundColor3 = library.colors.topGradient
					local colored_buttonInner_BackgroundColor3 = {buttonInner, "BackgroundColor3", "topGradient"}
					colored[1 + #colored] = colored_buttonInner_BackgroundColor3
					buttonInner.BorderColor3 = library.colors.elementBorder
					colored[1 + #colored] = {buttonInner, "BorderColor3", "elementBorder"}
					buttonInner.Position = UDim2.fromScale(0.5, 0.5)
					buttonInner.Selectable = true
					buttonInner.Size = UDim2.new(1, -4, 1, -4)
					buttonInner.Image = "rbxassetid://2454009026"
					buttonInner.ImageColor3 = library.colors.bottomGradient
					local colored_buttonInner_ImageColor3 = {buttonInner, "ImageColor3", "bottomGradient"}
					colored[1 + #colored] = colored_buttonInner_ImageColor3
					button.Size = UDim2.fromOffset(232, 22)
					realButton.Parent = button
					offset = offset + textsize + 6
					sectionFunctions:Update()
					local presses = 0
					library.signals[1 + #library.signals] = realButton.MouseButton1Click:Connect(function()
						if lockedup then
							return
						end
						if options.Condition ~= nil and type(options.Condition) == "function" then
							local v, e = pcall(options.Condition, presses)
							if e then
								if not v then
									--warn(debug.traceback(string.format("Error in button %s's Condition function: %s", buttonName, e), 2))
								end
							else
								return
							end
						end
						if not library.colorpicker and not submenuOpen then
							presses = 1 + presses
							task.spawn(callback, presses)
						end
					end)
					local imin = nil
					library.signals[1 + #library.signals] = button.MouseEnter:Connect(function()
						imin = 1
						colored_button_BackgroundColor3[3] = "main"
						colored_button_BackgroundColor3[4] = 1.5
						colored_button_ImageColor3[3] = "main"
						colored_button_ImageColor3[4] = 2.5
						tweenService:Create(button, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = darkenColor(library.colors.main, 1.5),
							ImageColor3 = darkenColor(library.colors.main, 2.5)
						}):Play()
					end)
					library.signals[1 + #library.signals] = button.MouseLeave:Connect(function()
						imin = nil
						colored_button_BackgroundColor3[3] = "topGradient"
						colored_button_BackgroundColor3[4] = nil
						colored_button_ImageColor3[3] = "bottomGradient"
						colored_button_ImageColor3[4] = nil
						tweenService:Create(button, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = library.colors.topGradient,
							ImageColor3 = library.colors.bottomGradient
						}):Play()
					end)
					local function Update()
						buttonName, callback = options.Name or buttonName, options.Callback or (nil) or function() -- warn(debug.traceback("AddButton missing callback. Name:" .. (options.Name or  buttonName or "No Name"), 2))
						end
						colored_button_BackgroundColor3[3] = (imin and "main") or "topGradient"
						colored_button_BackgroundColor3[4] = (imin and 1.5) or nil
						colored_button_ImageColor3[3] = (imin and "main") or "bottomGradient"
						colored_button_ImageColor3[4] = (imin and 2.5) or nil
						colored_buttonInner_BackgroundColor3[4] = nil
						colored_buttonInner_ImageColor3[4] = nil
						colored_realButton_TextColor3[4] = nil
						if lockedup then
							colored_button_BackgroundColor3[4] = 1.25
							colored_button_ImageColor3[4] = 1.25
							colored_buttonInner_BackgroundColor3[4] = 1.25
							colored_buttonInner_ImageColor3[4] = 1.25
							colored_realButton_TextColor3[4] = 1.75
						end
						tweenService:Create(button, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = (imin and darkenColor(library.colors.main, colored_button_BackgroundColor3[4])) or darkenColor(library.colors.topGradient, colored_button_BackgroundColor3[4]),
							ImageColor3 = (imin and darkenColor(library.colors.main, colored_button_ImageColor3[4])) or darkenColor(library.colors.bottomGradient, colored_button_ImageColor3[4])
						}):Play()
						tweenService:Create(buttonInner, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = darkenColor(library.colors.topGradient, colored_buttonInner_BackgroundColor3[4]),
							ImageColor3 = darkenColor(library.colors.bottomGradient, colored_buttonInner_ImageColor3[4])
						}):Play()
						tweenService:Create(realButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							TextColor3 = darkenColor(library.colors.elementText, colored_realButton_TextColor3[4])
						}):Play()
						realButton.Text = (buttonName and tostring(buttonName)) or "???"
						return presses
					end
					Update()
					local objectdata = {
						Options = options,
						Name = buttonName,
						Flag = buttonName,
						Type = "Button",
						Parent = sectionFunctions,
						Instance = realButton,
						Press = function(...)
							if lockedup then
								return presses
							end
							if options.Condition ~= nil and type(options.Condition) == "function" then
								local v, e = pcall(options.Condition, presses)
								if e then
									if v then
									else
									--	warn(debug.traceback(string.format("Error in button %s's Condition function: %s", buttonName, e), 2))
									end
								else
									return presses
								end
							end
							local args = {...}
							local a1 = args[1]
							if a1 and type(a1) == "table" then
								table.remove(args, 1)
							end
							presses = 1 + presses
							task.spawn(callback, presses, ...)
							return presses
						end,
						RawPress = function(...)
							local args = {...}
							local a1 = args[1]
							if a1 and type(a1) == "table" then
								table.remove(args, 1)
							end
							task.spawn(callback, presses, ...)
							return presses
						end,
						Get = function()
							return callback, presses
						end,
						SetLocked = function(t, state)
							if type(t) ~= "table" then
								state = t
							end
							local last_v = lockedup
							if state == nil then
								lockedup = not lockedup
							else
								lockedup = state
							end
							if lockedup ~= last_v then
								Update()
							end
							return lockedup
						end,
						Lock = function()
							if not lockedup then
								lockedup = true
								Update()
							end
							return lockedup
						end,
						Unlock = function()
							if lockedup then
								lockedup = false
								Update()
							end
							return lockedup
						end,
						SetCondition = function(t, condition)
							if type(t) ~= "table" and condition == nil then
								condition = t
							end
							options.Condition = condition
							return condition
						end,
						Update = Update,
						SetText = function(t, str)
							if type(t) ~= "table" and str == nil then
								str = t
							end
							buttonName = str
							options.Name = str
							realButton.Text = (buttonName and tostring(buttonName)) or "???"
							return str
						end,
						SetCallback = function(t, call)
							if type(t) ~= "table" and call == nil then
								call = t
							end
							options.Callback = call
							callback = call
							return call
						end
					}
					tabFunctions.Flags[buttonName], sectionFunctions.Flags[buttonName], elements[buttonName] = objectdata, objectdata, objectdata
					buttons[1 + #buttons] = objectdata
				end
				function buttons.PressAll()
					for _, v in next, buttons do
						v.Press()
					end
				end
				function buttons.UpdateAll()
					for _, v in next, buttons do
						v.Update()
					end
				end
				if #buttons == 1 then
					for k, v in next, buttons[1] do
						if buttons[k] == nil then
							buttons[k] = v
						end
					end
				end
				return buttons
			end
			sectionFunctions.CreateButton = sectionFunctions.AddButton
			sectionFunctions.NewButton = sectionFunctions.AddButton
			sectionFunctions.Button = sectionFunctions.AddButton
			function sectionFunctions:AddTextbox(options, ...)
				options = (options and type(options) == "string" and resolvevararg("Textbox", options, ...)) or options
				local textboxName, presetValue, placeholder, callback, flagName = assert(options.Name, "Missing Name for new textbox."), options.Value, options.Placeholder, options.Callback, options.Flag or (function()
					library.unnamedtextboxes = 1 + (library.unnamedtextboxes or 0)
					return "Textbox" .. tostring(library.unnamedtextboxes)
				end)()
				if elements[flagName] ~= nil then
				--	warn(debug.traceback("Warning! Re-used flag '" .. flagName .. "'", 3))
				end
				local requiredtype = options.Type
				local newTextbox = Instance_new("Frame")
				local textbox = Instance_new("ImageLabel")
				local textboxInner = Instance_new("ImageLabel")
				local realTextbox = Instance_new("TextBox")
				local textboxHeadline = Instance_new("TextLabel")
				newTextbox.Name = removeSpaces((textboxName and textboxName:lower()) or "???") .. "Holder"
				newTextbox.Parent = sectionHolder
				newTextbox.BackgroundColor3 = Color3.new(1, 1, 1)
				newTextbox.BackgroundTransparency = 1
				newTextbox.Size = UDim2.new(1, 0, 0, 42)
				textbox.Name = "textbox"
				textbox.Parent = newTextbox
				textbox.Active = true
				textbox.BackgroundColor3 = library.colors.topGradient
				local colored_textbox_BackgroundColor3 = {textbox, "BackgroundColor3", "topGradient"}
				colored[1 + #colored] = colored_textbox_BackgroundColor3
				textbox.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {textbox, "BorderColor3", "elementBorder"}
				textbox.Position = UDim2.fromScale(0.031, 0.48)
				textbox.Selectable = true
				textbox.Size = UDim2.fromOffset(232, 22)
				textbox.Image = "rbxassetid://2454009026"
				textbox.ImageColor3 = library.colors.bottomGradient
				local colored_textbox_ImageColor3 = {textbox, "ImageColor3", "bottomGradient"}
				colored[1 + #colored] = colored_textbox_ImageColor3
				textboxInner.Name = "textboxInner"
				textboxInner.Parent = textbox
				textboxInner.Active = true
				textboxInner.AnchorPoint = Vector2.new(0.5, 0.5)
				textboxInner.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {textboxInner, "BackgroundColor3", "topGradient"}
				textboxInner.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {textboxInner, "BorderColor3", "elementBorder"}
				textboxInner.Position = UDim2.fromScale(0.5, 0.5)
				textboxInner.Selectable = true
				textboxInner.Size = UDim2.new(1, -4, 1, -4)
				textboxInner.Image = "rbxassetid://2454009026"
				textboxInner.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {textboxInner, "ImageColor3", "bottomGradient"}
				realTextbox.Name = "realTextbox"
				if options.Rich or options.RichText or options.RichTextBox then
					realTextbox.RichText = true
				end
				if options.MultiLine or options.Lines then
					realTextbox.MultiLine = true
				end
				if options.Font or options.TextFont then
					realTextbox.Font = options.Font
				end
				if options.TextScaled or options.Scaled then
					realTextbox.TextScaled = true
				end
				realTextbox.BackgroundColor3 = Color3.new(1, 1, 1)
				realTextbox.BackgroundTransparency = 1
				realTextbox.Position = UDim2.new(0.0295485705)
				realTextbox.Size = UDim2.fromScale(0.97, 1)
				realTextbox.ZIndex = 5
				realTextbox.Font = Enum.Font.Code
				realTextbox.LineHeight = 1.15
				realTextbox.Text = tostring(presetValue)
				realTextbox.TextColor3 = library.colors.otherElementText
				colored[1 + #colored] = {realTextbox, "TextColor3", "otherElementText"}
				realTextbox.TextSize = 14
				if options.ClearTextOnFocus or options.ClearText then
					realTextbox.ClearTextOnFocus = true
				else
					realTextbox.ClearTextOnFocus = false
				end
				realTextbox.PlaceholderText = (placeholder ~= nil and tostring(placeholder)) or (presetValue ~= nil and tostring(presetValue)) or ""
				realTextbox.TextXAlignment = Enum.TextXAlignment.Left
				if options.CustomProperties and type(options.CustomProperties) == "table" then
					for k, v in next, options.CustomProperties do
						local oof, e = pcall(function()
							realTextbox[k] = v
						end)
						if not oof and e then
						--	warn("Error setting Textbox", flagName, "|", e, debug.traceback(""))
						end
					end
				end
				realTextbox.Parent = textbox
				textboxHeadline.Name = "textboxHeadline"
				textboxHeadline.Parent = newTextbox
				textboxHeadline.Active = true
				textboxHeadline.BackgroundColor3 = Color3.new(1, 1, 1)
				textboxHeadline.BackgroundTransparency = 1
				textboxHeadline.Position = UDim2.new(0.031)
				textboxHeadline.Selectable = true
				textboxHeadline.Size = UDim2.fromOffset(206, 20)
				textboxHeadline.ZIndex = 5
				textboxHeadline.Font = Enum.Font.Code
				textboxHeadline.LineHeight = 1.15
				textboxHeadline.Text = (textboxName and tostring(textboxName)) or "???"
				textboxHeadline.TextColor3 = library.colors.elementText
				colored[1 + #colored] = {textboxHeadline, "TextColor3", "elementText"}
				textboxHeadline.TextSize = 14
				textboxHeadline.TextXAlignment = Enum.TextXAlignment.Left
				sectionFunctions:Update()
				local last_v = presetValue
				local function resolvevalue(val)
					if options.PreFormat then
						local typ = type(options.PreFormat)
						if typ == "function" then
							local x, e = pcall(options.PreFormat, val)
							if not x and e then
							--	warn("Error in Pre-Format (Textbox " .. flagName .. "):", e)
							else
								val = e
							end
						end
					end
					if requiredtype == "number" then
						if not options.Hex and not options.Binary and not options.Base then
							val = tonumber(val) or tonumber(val:gsub("%D", ""), 10) or 0
						else
							val = tonumber(val, (options.Hex and 16) or (options.Binary and 2) or options.Base or 10) or 0
						end
						if options.Max or options.Min then
							val = math.clamp(val, options.Min or -math.huge, options.Max or math.huge)
						end
						local decimalprecision = tonumber(options.Decimals or options.Precision or options.Precise)
						if decimalprecision then
							val = tonumber(string.format("%0." .. tostring(decimalprecision) .. "f", val))
						end
					end
					if options.PostFormat then
						local typ = type(options.PostFormat)
						if typ == "function" then
							local x, e = pcall(options.PostFormat, val)
							if not x and e then
							--	warn("Error in Post-Format (Textbox " .. flagName .. "):", e)
							else
								val = e
							end
						end
					end
					return (val and tonumber(val)) or val
				end
				library.signals[1 + #library.signals] = realTextbox.FocusLost:Connect(function()
					last_v = library_flags[flagName]
					local val = resolvevalue(realTextbox.Text)
					library_flags[flagName] = val
					if options.Location then
						options.Location[options.LocationFlag or flagName] = val
					end
					if callback and last_v ~= val then
						task.spawn(callback, tostring(val), last_v, realTextbox)
					end
				end)
				library.signals[1 + #library.signals] = newTextbox.MouseEnter:Connect(function()
					colored_textbox_BackgroundColor3[3] = "main"
					colored_textbox_BackgroundColor3[4] = 1.5
					colored_textbox_ImageColor3[3] = "main"
					colored_textbox_ImageColor3[4] = 2.5
					tweenService:Create(textbox, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						BackgroundColor3 = darkenColor(library.colors.main, 1.5),
						ImageColor3 = darkenColor(library.colors.main, 2.5)
					}):Play()
				end)
				library.signals[1 + #library.signals] = newTextbox.MouseLeave:Connect(function()
					colored_textbox_BackgroundColor3[3] = "topGradient"
					colored_textbox_BackgroundColor3[4] = nil
					colored_textbox_ImageColor3[3] = "bottomGradient"
					colored_textbox_ImageColor3[4] = nil
					tweenService:Create(textbox, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						BackgroundColor3 = library.colors.topGradient,
						ImageColor3 = library.colors.bottomGradient
					}):Play()
				end)
				local function set(t, str)
					if nil == str and t ~= nil then
						str = t
					end
					last_v = library_flags[flagName]
					library_flags[flagName] = str
					if options.Location then
						options.Location[options.LocationFlag or flagName] = str
					end
					local sstr = (str ~= nil and tostring(str)) or "Empty Text"
					if realTextbox.Text ~= sstr then
						realTextbox.Text = sstr
					end
					if callback and (last_v ~= str or options.AllowDuplicateCalls) then
						task.spawn(callback, str, last_v, realTextbox)
					end
					return str
				end
				if presetValue ~= nil then
					set(presetValue)
				else
					library_flags[flagName] = presetValue
					if options.Location then
						options.Location[options.LocationFlag or flagName] = presetValue
					end
				end
				local default = library_flags[flagName]
				local function update()
					textboxName, placeholder, callback = options.Name or textboxName, options.Placeholder or placeholder, options.Callback
					local str = library_flags[flagName]
					str = (str ~= nil and tostring(str)) or "Empty Text"
					if realTextbox.Text ~= str then
						realTextbox.Text = str
					end
					textboxHeadline.Text = (textboxName and tostring(textboxName)) or "???"
					return str
				end
				local objectdata = {
					Options = options,
					Name = flagName,
					Flag = flagName,
					Type = "Textbox",
					Default = default,
					Parent = sectionFunctions,
					Instance = realTextbox,
					Get = function()
						return library_flags[flagName]
					end,
					Set = set,
					Update = update,
					RawSet = function(t, str)
						if t ~= nil and str == nil then
							str = t
						end
						last_v = library_flags[flagName]
						library_flags[flagName] = str
						if options.Location then
							options.Location[options.LocationFlag or flagName] = str
						end
						update()
						return str
					end,
					Reset = function()
						return set(nil, default)
					end
				}
				tabFunctions.Flags[flagName], sectionFunctions.Flags[flagName], elements[flagName] = objectdata, objectdata, objectdata
				return objectdata
			end
			sectionFunctions.AddTextBox = sectionFunctions.AddTextbox
			sectionFunctions.NewTextBox = sectionFunctions.AddTextbox
			sectionFunctions.CreateTextBox = sectionFunctions.AddTextbox
			sectionFunctions.TextBox = sectionFunctions.AddTextbox
			sectionFunctions.NewTextbox = sectionFunctions.AddTextbox
			sectionFunctions.CreateTextbox = sectionFunctions.AddTextbox
			sectionFunctions.Textbox = sectionFunctions.AddTextbox
			sectionFunctions.Box = sectionFunctions.AddTextbox
			function sectionFunctions:AddKeybind(options, ...)
				options = (options and type(options) == "string" and resolvevararg("Keybind", options, ...)) or options
				local keybindName, presetKeybind, callback, presscallback, flag = assert(options.Name, "Missing Name for new keybind."), options.Value, options.Callback, options.Pressed, options.Flag or (function()
					library.unnamedkeybinds = 1 + (library.unnamedkeybinds or 0)
					return "Keybind" .. tostring(library.unnamedkeybinds)
				end)()
				if elements[flag] ~= nil then
					--warn(debug.traceback("Warning! Re-used flag '" .. flag .. "'", 3))
				end
				library.keyHandler = keyHandler
				local keyHandler = options.KeyNames or keyHandler
				local newKeybind = Instance_new("Frame")
				local keybindHeadline = Instance_new("TextLabel")
				local keybindPositioner = Instance_new("Frame")
				local keybindList = Instance_new("UIListLayout")
				local keybindButton = Instance_new("TextButton")
				local bindedKey = presetKeybind
				local justBinded = false
				local keyName = (presetKeybind and tostring(presetKeybind):gsub("Enum.KeyCode.", "") or "")
				newKeybind.Name = "newKeybind"
				newKeybind.Parent = sectionHolder
				newKeybind.BackgroundColor3 = Color3.new(1, 1, 1)
				newKeybind.BackgroundTransparency = 1
				newKeybind.Size = UDim2.new(1, 0, 0, 19)
				keybindHeadline.Name = "keybindHeadline"
				keybindHeadline.Parent = newKeybind
				keybindHeadline.BackgroundColor3 = Color3.new(1, 1, 1)
				keybindHeadline.BackgroundTransparency = 1
				keybindHeadline.Position = UDim2.fromScale(0.031, 0.165842161)
				keybindHeadline.Size = UDim2.fromOffset(215, 12)
				keybindHeadline.Font = Enum.Font.Code
				keybindHeadline.Text = (keybindName and tostring(keybindName)) or "???"
				keybindHeadline.TextColor3 = library.colors.elementText
				colored[1 + #colored] = {keybindHeadline, "TextColor3", "elementText"}
				keybindHeadline.TextSize = 14
				keybindHeadline.TextXAlignment = Enum.TextXAlignment.Left
				keybindPositioner.Name = "keybindPositioner"
				keybindPositioner.Parent = newKeybind
				keybindPositioner.BackgroundColor3 = Color3.new(1, 1, 1)
				keybindPositioner.BackgroundTransparency = 1
				keybindPositioner.Position = UDim2.new(0.00448430516)
				keybindPositioner.Size = UDim2.fromOffset(214, 19)
				keybindList.Name = "keybindList"
				keybindList.Parent = keybindPositioner
				keybindList.FillDirection = Enum.FillDirection.Horizontal
				keybindList.HorizontalAlignment = Enum.HorizontalAlignment.Right
				keybindList.SortOrder = Enum.SortOrder.LayoutOrder
				keybindList.VerticalAlignment = Enum.VerticalAlignment.Center
				keybindButton.Name = "keybindButton"
				keybindButton.Parent = keybindPositioner
				keybindButton.Active = false
				keybindButton.BackgroundColor3 = Color3.new(1, 1, 1)
				keybindButton.BackgroundTransparency = 1
				keybindButton.Position = UDim2.fromScale(0.598130822, 0.184210524)
				keybindButton.Selectable = false
				keybindButton.Size = UDim2.fromOffset(46, 12)
				keybindButton.Font = Enum.Font.Code
				keybindButton.Text = (presetKeybind and tostring(presetKeybind):gsub("Enum.KeyCode.", "") or "[NONE]")
				keybindButton.TextColor3 = library.colors.otherElementText
				local colored_keybindButton_TextColor3 = {keybindButton, "TextColor3", "otherElementText"}
				colored[1 + #colored] = colored_keybindButton_TextColor3
				keybindButton.TextSize = 14
				keybindButton.TextXAlignment = Enum.TextXAlignment.Right
				keybindButton.Size = UDim2.fromOffset(textToSize(keybindButton).X + 4, 12)
				sectionFunctions:Update()
				local last_v = bindedKey or presetKeybind
				local function newkey()
					local old_texts = keybindButton.Text
					colored_keybindButton_TextColor3[3] = "main"
					colored_keybindButton_TextColor3[4] = nil
					tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						TextColor3 = library.colors.main
					}):Play()
					if last_v then
						keybindButton.Text = "(Was " .. (last_v and tostring(last_v):gsub("Enum.KeyCode.", "") or "[NONE]") .. ") [...]"
					else
						keybindButton.Text = "[...]"
					end
					local receivingKey = nil
					receivingKey = userInputService.InputBegan:Connect(function(key)
						last_v = library_flags[flag]
						if not keyHandler.notAllowedKeys[key.KeyCode] then
							if key.KeyCode ~= Enum.KeyCode.Unknown then
								bindedKey = (key.KeyCode ~= Enum.KeyCode.Escape and key.KeyCode) or library_flags[flag]
								library_flags[flag] = bindedKey
								if options.Location then
									options.Location[options.LocationFlag or flag] = bindedKey
								end
								if bindedKey then
									keyName = keyHandler.allowedKeys[bindedKey]
									keybindButton.Text = "[" .. (keyName or bindedKey.Name or tostring(key.KeyCode):gsub("Enum.KeyCode.", "")) .. "]"
									keybindButton.Size = UDim2.fromOffset(textToSize(keybindButton).X + 4, 12)
									justBinded = true
									colored_keybindButton_TextColor3[3] = "otherElementText"
									colored_keybindButton_TextColor3[4] = nil
									tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
										TextColor3 = library.colors.otherElementText
									}):Play()
									receivingKey:Disconnect()
								end
								if callback and last_v ~= bindedKey then
									task.spawn(callback, bindedKey, last_v)
								end
								return
							elseif key.KeyCode == Enum.KeyCode.Unknown and not keyHandler.notAllowedMouseInputs[key.UserInputType] then
								bindedKey = key.UserInputType
								library_flags[flag] = bindedKey
								if options.Location then
									options.Location[options.LocationFlag or flag] = bindedKey
								end
								keyName = keyHandler.allowedKeys[bindedKey]
								keybindButton.Text = "[" .. (keyName or bindedKey.Name or tostring(key.KeyCode):gsub("Enum.KeyCode.", "")) .. "]"
								keybindButton.Size = UDim2.fromOffset(textToSize(keybindButton).X + 4, 12)
								justBinded = true
								colored_keybindButton_TextColor3[3] = "otherElementText"
								colored_keybindButton_TextColor3[4] = nil
								tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
									TextColor3 = library.colors.otherElementText
								}):Play()
								receivingKey:Disconnect()
								if callback and last_v ~= bindedKey then
									task.spawn(callback, bindedKey, last_v)
								end
								return
							end
						end
						if key.KeyCode == Enum.KeyCode.Backspace or Enum.KeyCode.Escape == key.KeyCode then
							old_texts, bindedKey = "[NONE]", nil
						end
						keybindButton.Text = old_texts
						colored_keybindButton_TextColor3[3] = "otherElementText"
						colored_keybindButton_TextColor3[4] = nil
						tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							TextColor3 = library.colors.otherElementText
						}):Play()
						receivingKey:Disconnect()
						if callback and last_v ~= bindedKey then
							task.spawn(callback, bindedKey, last_v)
						end
					end)
					library.signals[1 + #library.signals] = receivingKey
				end
				library.signals[1 + #library.signals] = keybindButton.MouseButton1Click:Connect(newkey)
				library.signals[1 + #library.signals] = newKeybind.InputEnded:Connect(function(input)
					if not library.colorpicker and not submenuOpen and input.UserInputType == Enum.UserInputType.MouseButton1 then
						newkey()
					end
				end)
				if presscallback then
					library.signals[1 + #library.signals] = userInputService.InputBegan:Connect(function(key, chatting)
						if not keyHandler.notAllowedKeys[key.KeyCode] and not keyHandler.notAllowedMouseInputs[key.UserInputType] then
							if not justBinded and bindedKey == key.UserInputType or not justBinded and bindedKey == key.KeyCode and not chatting then
								if presscallback then
									task.spawn(presscallback, key, chatting)
								end
							end
							if justBinded then
								justBinded = false
							end
						end
					end)
				end
				local function set(t, key)
					if nil == key and t ~= nil then
						key = t
					end
					if key == "nil" or key == "NONE" or key == "none" then
						key = nil
					end
					last_v = library_flags[flag]
					bindedKey = key
					library_flags[flag] = key
					if options.Location then
						options.Location[options.LocationFlag or flag] = key
					end
					keyName = (key == nil and "NONE") or keyHandler.allowedKeys[key]
					keybindButton.Text = "[" .. (keyName or key.Name or tostring(key):gsub("Enum.KeyCode.", "")) .. "]"
					keybindButton.Size = UDim2.fromOffset(textToSize(keybindButton).X + 4, 12)
					justBinded = true
					colored_keybindButton_TextColor3[3] = "otherElementText"
					colored_keybindButton_TextColor3[4] = nil
					tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						TextColor3 = library.colors.otherElementText
					}):Play()
					if callback and (last_v ~= key or options.AllowDuplicateCalls) then
						task.spawn(callback, key, last_v)
					end
					return key
				end
				if presetKeybind ~= nil then
					set(presetKeybind)
				else
					library_flags[flag] = bindedKey
					if options.Location then
						options.Location[options.LocationFlag or flag] = bindedKey
					end
				end
				local default = library_flags[flag]
				local function update()
					keybindName, callback, presscallback = options.Name or keybindName, options.Callback, options.Pressed
					local key = library_flags[flag]
					keyName = (key == nil and "NONE") or keyHandler.allowedKeys[key]
					keybindButton.Text = "[" .. (keyName or key.Name or tostring(key):gsub("Enum.KeyCode.", "")) .. "]"
					keybindButton.Size = UDim2.fromOffset(textToSize(keybindButton).X + 4, 12)
					colored_keybindButton_TextColor3[3] = "otherElementText"
					colored_keybindButton_TextColor3[4] = nil
					tweenService:Create(keybindButton, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						TextColor3 = library.colors.otherElementText
					}):Play()
					keybindHeadline.Text = (keybindName and tostring(keybindName)) or "???"
					return key
				end
				local objectdata = {
					Options = options,
					Name = flag,
					Flag = flag,
					Type = "Keybind",
					Default = default,
					Parent = sectionFunctions,
					Instance = keybindButton,
					Get = function()
						return library_flags[flag]
					end,
					Set = set,
					RawSet = function(t, key)
						if nil == key and t ~= nil then
							key = t
						end
						if key == "nil" or key == "NONE" or key == "none" then
							key = nil
						end
						last_v = library_flags[flag]
						bindedKey = key
						library_flags[flag] = key
						if options.Location then
							options.Location[options.LocationFlag or flag] = key
						end
						justBinded = true
						return key
					end,
					Update = update,
					Reset = function()
						return set(nil, default)
					end
				}
				tabFunctions.Flags[flag], sectionFunctions.Flags[flag], elements[flag] = objectdata, objectdata, objectdata
				return objectdata
			end
			sectionFunctions.NewKeybind = sectionFunctions.AddKeybind
			sectionFunctions.CreateKeybind = sectionFunctions.AddKeybind
			sectionFunctions.Keybind = sectionFunctions.AddKeybind
			sectionFunctions.Bind = sectionFunctions.AddKeybind
			function sectionFunctions:AddLabel(options, ...)
				options = (options and type(options) == "string" and resolvevararg("Label", options, ...)) or options
				local labelName, flag = options.Text or options.Value or options.Name, options.Flag or (function()
					library.unnamedlabels = 1 + (library.unnamedlabels or 0)
					return "Label" .. tostring(library.unnamedlabels)
				end)()
				if elements[flag] ~= nil then
				--	warn(debug.traceback("Warning! Re-used flag '" .. flag .. "'", 3))
				end
				local newLabel = Instance_new("Frame")
				local labelHeadline = Instance_new("TextLabel")
				local labelPositioner = Instance_new("Frame")
				local labelButton = Instance_new("TextButton")
				newLabel.Name = "newLabel"
				newLabel.Parent = sectionHolder
				newLabel.BackgroundColor3 = Color3.new(1, 1, 1)
				newLabel.BackgroundTransparency = 1
				newLabel.Size = UDim2.new(1, 0, 0, 19)
				labelHeadline.Name = "labelHeadline"
				labelHeadline.Parent = newLabel
				labelHeadline.BackgroundColor3 = Color3.new(1, 1, 1)
				labelHeadline.BackgroundTransparency = 1
				labelHeadline.Position = UDim2.fromScale(0.031, 0.165842161)
				labelHeadline.Size = UDim2.fromOffset(215, 12)
				labelHeadline.Font = Enum.Font.Code
				labelHeadline.Text = (labelName and tostring(labelName)) or "Empty Text"
				labelHeadline.TextColor3 = library.colors.elementText
				colored[1 + #colored] = {labelHeadline, "TextColor3", "elementText"}
				labelHeadline.TextSize = 14
				labelHeadline.TextXAlignment = Enum.TextXAlignment.Left
				labelPositioner.Name = "labelPositioner"
				labelPositioner.Parent = newLabel
				labelPositioner.BackgroundColor3 = Color3.new(1, 1, 1)
				labelPositioner.BackgroundTransparency = 1
				labelPositioner.Position = UDim2.new(0.00448430516)
				labelPositioner.Size = UDim2.fromOffset(214, 19)
				sectionFunctions:Update()
				local function set(t, str)
					if nil == str and t ~= nil then
						str = t
					end
					labelHeadline.Text = (nil ~= str and tostring(str)) or "Empty Text"
					return str
				end
				local default = labelHeadline.Text
				local objectdata = {
					Options = options,
					Name = flag,
					Flag = flag,
					Type = "Label",
					Default = default,
					Parent = sectionFunctions,
					Instance = labelHeadline,
					Get = function()
						return labelHeadline.Text, labelHeadline
					end,
					Set = set,
					SetText = set,
					RawSet = set,
					Update = function()
						return labelHeadline.Text
					end,
					Reset = function()
						return set(nil, default)
					end
				}
				tabFunctions.Flags[flag], sectionFunctions.Flags[flag], elements[flag] = objectdata, objectdata, objectdata
				return objectdata
			end
			sectionFunctions.NewLabel = sectionFunctions.AddLabel
			sectionFunctions.CreateLabel = sectionFunctions.AddLabel
			sectionFunctions.Label = sectionFunctions.AddLabel
			sectionFunctions.Text = sectionFunctions.AddLabel
			function sectionFunctions:AddSlider(options, ...)
				options = (options and type(options) == "string" and resolvevararg("Slider", options, ...)) or options
				local sliderName, maxValue, minValue, presetValue, callback, flagName = assert(options.Name, "Missing Name for new slider."), assert(options.Max, "Missing Max for new slider."), assert(options.Min, "Missing Min for new slider."), options.Value, options.Callback, options.Flag or (function()
					library.unnamedsliders = 1 + (library.unnamedsliders or 0)
					return "Slider" .. tostring(library.unnamedsliders)
				end)()
				if elements[flagName] ~= nil then
				--	warn(debug.traceback("Warning! Re-used flag '" .. flagName .. "'", 3))
				end
				local decimalprecision = tonumber(options.Decimals or options.Precision or options.Precise)
				if not decimalprecision and options.Max - options.Min <= 1 then
					decimalprecision = 1
				end
				if decimalprecision then
					decimalprecision = math.clamp(decimalprecision, 0, 99)
					if decimalprecision <= 0 then
						decimalprecision = nil
					end
					decimalprecision = tostring(decimalprecision)
				end
				local formattyp = options.Format and type(options.Format)
				local function resolvedisplay(val, was)
					local str = nil
					if decimalprecision then
						str = string.format("%0." .. decimalprecision .. "f", val)
					end
					str = str or tostring(val)
					if formattyp == "string" then
						return string.format(options.Format, val)
					elseif formattyp == "function" then
						local oof, g = pcall(options.Format, val, was)
						if not oof or not g then
						--	warn("Your format function for", sliderName, "Slider:", flagName, "has returned nothing. It should return a string to display.", debug.traceback(""))
							return "Format Function Errored"
						end
						return tostring(g)
					end
					return (sliderName or "???") .. ": " .. str
				end
				local usetextbox = options.Textbox or options.InputBox or options.CustomInput
				local newSlider = Instance_new("Frame")
				local slider = Instance_new("ImageLabel")
				local sliderInner = Instance_new("ImageLabel")
				local sliderColored = Instance_new("ImageLabel")
				local sliderHeadline = Instance_new("TextLabel")
				local startingValue = presetValue or minValue
				local sliderDragging = false
				newSlider.Name = "newSlider"
				newSlider.Parent = sectionHolder
				newSlider.BackgroundColor3 = Color3.new(1, 1, 1)
				newSlider.BackgroundTransparency = 1
				newSlider.Size = UDim2.new(1, 0, 0, 42)
				slider.Name = "slider"
				slider.Parent = newSlider
				slider.Active = true
				slider.BackgroundColor3 = library.colors.topGradient
				local colored_slider_BackgroundColor3 = {slider, "BackgroundColor3", "topGradient"}
				colored[1 + #colored] = colored_slider_BackgroundColor3
				slider.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {slider, "BorderColor3", "elementBorder"}
				slider.Position = UDim2.fromScale(0.031, 0.48)
				slider.Selectable = true
				slider.Size = (usetextbox and UDim2.fromOffset(200, 18)) or UDim2.fromOffset(232, 20)
				slider.Image = "rbxassetid://2454009026"
				slider.ImageColor3 = library.colors.bottomGradient
				local colored_slider_ImageColor3 = {slider, "ImageColor3", "bottomGradient"}
				colored[1 + #colored] = colored_slider_ImageColor3
				sliderInner.Name = "sliderInner"
				sliderInner.Parent = slider
				sliderInner.Active = true
				sliderInner.AnchorPoint = Vector2.new(0.5, 0.5)
				sliderInner.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {sliderInner, "BackgroundColor3", "topGradient"}
				sliderInner.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {sliderInner, "BorderColor3", "elementBorder"}
				sliderInner.Position = UDim2.fromScale(0.5, 0.5)
				sliderInner.Selectable = true
				sliderInner.Size = UDim2.new(1, -4, 1, -4)
				sliderInner.Image = "rbxassetid://2454009026"
				sliderInner.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {sliderInner, "ImageColor3", "bottomGradient"}
				sliderColored.Name = "sliderColored"
				sliderColored.Parent = sliderInner
				sliderColored.Active = true
				sliderColored.BackgroundColor3 = darkenColor(library.colors.main, 1.5)
				colored[1 + #colored] = {sliderColored, "BackgroundColor3", "main", 1.5}
				sliderColored.BorderSizePixel = 0
				sliderColored.Selectable = true
				sliderColored.Size = UDim2.fromScale(((startingValue or minValue) - minValue) / (maxValue - minValue), 1)
				sliderColored.Image = "rbxassetid://2454009026"
				sliderColored.ImageColor3 = darkenColor(library.colors.main, 2.5)
				colored[1 + #colored] = {sliderColored, "ImageColor3", "main", 2.5}
				sliderHeadline.Name = "sliderHeadline"
				sliderHeadline.Parent = newSlider
				sliderHeadline.Active = true
				sliderHeadline.BackgroundColor3 = Color3.new(1, 1, 1)
				sliderHeadline.BackgroundTransparency = 1
				sliderHeadline.Position = UDim2.new(0.031)
				sliderHeadline.Selectable = true
				sliderHeadline.Size = UDim2.fromOffset(232, 20)
				sliderHeadline.ZIndex = 5
				sliderHeadline.Font = Enum.Font.Code
				sliderHeadline.LineHeight = 1.15
				sliderHeadline.Text = resolvedisplay(startingValue)
				sliderHeadline.TextColor3 = library.colors.elementText
				colored[1 + #colored] = {sliderHeadline, "TextColor3", "elementText"}
				sliderHeadline.TextSize = 14
				sliderHeadline.TextXAlignment = Enum.TextXAlignment.Left
				local realTextbox = nil
				local function Set(t, newValue)
					if nil == newValue and t ~= nil then
						newValue = t
					end
					minValue, maxValue = options.Min, options.Max
					if newValue and (options.IllegalInput or ((not minValue or newValue >= minValue) and (not maxValue or newValue <= maxValue))) then
						local last_val = library_flags[flagName]
						library_flags[flagName] = newValue
						if options.Location then
							options.Location[options.LocationFlag or flagName] = newValue
						end
						do
							local newValue = (options.IllegalInput and math.clamp(newValue, minValue or -math.huge, maxValue or math.huge)) or newValue
							tweenService:Create(sliderColored, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
								Size = UDim2.fromScale(((newValue or minValue) - minValue) / (maxValue - minValue), 1)
							}):Play()
						end
						sliderHeadline.Text = resolvedisplay(newValue, last_val)
						if usetextbox and realTextbox then
							realTextbox.Text = tostring(newValue)
						end
						if callback and (last_val ~= newValue or options.AllowDuplicateCalls) then
							task.spawn(callback, newValue, last_val)
						end
					end
					return newValue
				end
				if presetValue ~= nil then
					Set(presetValue)
				else
					library_flags[flagName] = startingValue
					if options.Location then
						options.Location[options.LocationFlag or flagName] = startingValue
					end
				end
				if usetextbox then
					if type(usetextbox) ~= "table" then
						usetextbox = options
					end
					local textbox = Instance_new("ImageLabel")
					local textboxInner = Instance_new("ImageLabel")
					realTextbox = Instance_new("TextBox")
					textbox.Name = "textbox"
					textbox.Parent = newSlider
					textbox.Active = true
					textbox.BackgroundColor3 = library.colors.topGradient
					local colored_textbox_BackgroundColor3 = {textbox, "BackgroundColor3", "topGradient"}
					colored[1 + #colored] = colored_textbox_BackgroundColor3
					textbox.BorderColor3 = library.colors.elementBorder
					colored[1 + #colored] = {textbox, "BorderColor3", "elementBorder"}
					textbox.Position = UDim2.new(1, -54, 0.48)
					textbox.Selectable = true
					textbox.Size = UDim2.fromOffset(43, 18)
					textbox.Image = "rbxassetid://2454009026"
					textbox.ImageColor3 = library.colors.bottomGradient
					local colored_textbox_ImageColor3 = {textbox, "ImageColor3", "bottomGradient"}
					colored[1 + #colored] = colored_textbox_ImageColor3
					textboxInner.Name = "textboxInner"
					textboxInner.Parent = textbox
					textboxInner.Active = true
					textboxInner.AnchorPoint = Vector2.new(0.5, 0.5)
					textboxInner.BackgroundColor3 = library.colors.topGradient
					colored[1 + #colored] = {textboxInner, "BackgroundColor3", "topGradient"}
					textboxInner.BorderColor3 = library.colors.elementBorder
					colored[1 + #colored] = {textboxInner, "BorderColor3", "elementBorder"}
					textboxInner.Position = UDim2.fromScale(0.5, 0.5)
					textboxInner.Selectable = true
					textboxInner.Size = UDim2.new(1, -4, 1, -4)
					textboxInner.Image = "rbxassetid://2454009026"
					textboxInner.ImageColor3 = library.colors.bottomGradient
					colored[1 + #colored] = {textboxInner, "ImageColor3", "bottomGradient"}
					realTextbox.Name = "realTextbox"
					realTextbox.Parent = textbox
					realTextbox.BackgroundColor3 = Color3.new(1, 1, 1)
					realTextbox.BackgroundTransparency = 1
					realTextbox.Position = UDim2.new(0.0295485705)
					realTextbox.Size = UDim2.fromScale(0.97, 1)
					realTextbox.ZIndex = 5
					realTextbox.ClearTextOnFocus = false
					realTextbox.Font = Enum.Font.Code
					realTextbox.LineHeight = 1.15
					realTextbox.Text = tostring(presetValue)
					realTextbox.TextColor3 = library.colors.otherElementText
					colored[1 + #colored] = {realTextbox, "TextColor3", "otherElementText"}
					realTextbox.TextSize = 14
					realTextbox.PlaceholderText = (presetValue ~= nil and tostring(presetValue)) or ""
					library.signals[1 + #library.signals] = realTextbox.FocusLost:Connect(function()
						local val = realTextbox.Text
						if usetextbox.PreFormat then
							local typ = type(usetextbox.PreFormat)
							if typ == "function" then
								local x, e = pcall(usetextbox.PreFormat, val)
								if not x and e then
								--	warn("Error in Pre-Format (Textbox " .. flagName .. "):", e)
								else
									val = e
								end
							end
						end
						val = (not usetextbox.Hex and not usetextbox.Binary and not usetextbox.Base and (tonumber(val) or tonumber(val:gsub("%D", ""), 10) or 0)) or tonumber(val, (usetextbox.Hex and 16) or (usetextbox.Binary and 2) or usetextbox.Base or 10) or 0
						if not options.IllegalInput and (options.Max or options.Min) then
							val = math.clamp(val, options.Min or -math.huge, options.Max or math.huge)
						end
						local decimalprecision = tonumber(options.Decimals or options.Precision or options.Precise)
						if decimalprecision then
							val = tonumber(string.format("%0." .. tostring(decimalprecision) .. "f", val))
						end
						if usetextbox.PostFormat then
							local typ = type(usetextbox.PostFormat)
							if typ == "function" then
								local x, e = pcall(usetextbox.PostFormat, val)
								if not x and e then
									--warn("Error in Post-Format (Textbox " .. flagName .. "):", e)
								else
									val = e
								end
							end
						end
						Set((val and tonumber(val)) or presetValue or 0)
					end)
					library.signals[1 + #library.signals] = textbox.MouseEnter:Connect(function()
						colored_textbox_BackgroundColor3[3] = "main"
						colored_textbox_BackgroundColor3[4] = 1.5
						colored_textbox_ImageColor3[3] = "main"
						colored_textbox_ImageColor3[4] = 2.5
						tweenService:Create(textbox, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = darkenColor(library.colors.main, 1.5),
							ImageColor3 = darkenColor(library.colors.main, 2.5)
						}):Play()
					end)
					library.signals[1 + #library.signals] = textbox.MouseLeave:Connect(function()
						colored_textbox_BackgroundColor3[3] = "topGradient"
						colored_textbox_BackgroundColor3[4] = nil
						colored_textbox_ImageColor3[3] = "bottomGradient"
						colored_textbox_ImageColor3[4] = nil
						tweenService:Create(textbox, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = library.colors.topGradient,
							ImageColor3 = library.colors.bottomGradient
						}):Play()
					end)
				end
				sectionFunctions:Update()
				library.signals[1 + #library.signals] = slider.MouseEnter:Connect(function()
					colored_slider_BackgroundColor3[3] = "main"
					colored_slider_BackgroundColor3[4] = 1.5
					colored_slider_ImageColor3[3] = "main"
					colored_slider_ImageColor3[4] = 2.5
					tweenService:Create(slider, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						BackgroundColor3 = darkenColor(library.colors.main, 1.5),
						ImageColor3 = darkenColor(library.colors.main, 2.5)
					}):Play()
				end)
				library.signals[1 + #library.signals] = slider.MouseLeave:Connect(function()
					colored_slider_BackgroundColor3[3] = "topGradient"
					colored_slider_BackgroundColor3[4] = nil
					colored_slider_ImageColor3[3] = "bottomGradient"
					colored_slider_ImageColor3[4] = nil
					tweenService:Create(slider, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
						BackgroundColor3 = library.colors.topGradient,
						ImageColor3 = library.colors.bottomGradient
					}):Play()
				end)
				local function sliding(input, sb, sc)
					local last_val = library_flags[flagName]
					local pos = UDim2.fromScale(math.clamp((input.Position.X - sb.AbsolutePosition.X) / sb.AbsoluteSize.X, 0, 1), 1)
					tweenService:Create(sc, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
						Size = pos
					}):Play()
					local sliderValue = nil
					if decimalprecision then
						sliderValue = tonumber(string.format("%0." .. decimalprecision .. "f", ((pos.X.Scale * maxValue) / maxValue) * (maxValue - minValue) + minValue))
					end
					sliderValue = sliderValue or tonumber(string.format("%0.2f", (floor(((pos.X.Scale * maxValue) / maxValue) * (maxValue - minValue) + minValue))))
					library_flags[flagName] = sliderValue
					if options.Location then
						options.Location[options.LocationFlag or flagName] = sliderValue
					end
					sliderHeadline.Text = resolvedisplay(sliderValue, last_val)
					if usetextbox and realTextbox then
						realTextbox.Text = tostring(sliderValue)
					end
					if callback and last_val ~= sliderValue then
						task.spawn(callback, sliderValue, last_val)
					end
					last_val = sliderValue
				end
				library.signals[1 + #library.signals] = newSlider.InputBegan:Connect(function(input)
					if not library.colorpicker and input.UserInputType == Enum.UserInputType.MouseButton1 then
						sliderDragging = true
						isDraggingSomething = true
					end
				end)
				library.signals[1 + #library.signals] = newSlider.InputEnded:Connect(function(input)
					if not library.colorpicker and input.UserInputType == Enum.UserInputType.MouseButton1 then
						sliderDragging = false
						isDraggingSomething = false
					end
				end)
				library.signals[1 + #library.signals] = newSlider.InputBegan:Connect(function(input)
					if not library.colorpicker and not isDraggingSomething and input.UserInputType == Enum.UserInputType.MouseButton1 then
						isDraggingSomething = true
						sliding(input, sliderInner, sliderColored)
					end
				end)
				library.signals[1 + #library.signals] = userInputService.InputChanged:Connect(function(input)
					if not library.colorpicker and sliderDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
						sliding(input, sliderInner, sliderColored)
					end
				end)
				local default = library_flags[flagName]
				local function Update(t, last_val)
					if last_val == nil and t ~= nil and type(t) ~= "table" then
						last_val = t
					end
					sliderName, maxValue, minValue, callback = options.Name or sliderName, options.Max or maxValue, options.Min or minValue, options.Callback
					local newValue = library_flags[flagName]
					do
						local newValue = math.clamp(newValue, options.Min or -math.huge, options.Max or math.huge)
						tweenService:Create(sliderColored, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
							Size = UDim2.fromScale(((newValue or minValue) - minValue) / (maxValue - minValue), 1)
						}):Play()
					end
					sliderHeadline.Text = resolvedisplay(newValue, last_val)
					if usetextbox and realTextbox then
						realTextbox.Text = tostring(newValue)
					end
					return newValue
				end
				local objectdata = {
					Options = options,
					Name = flagName,
					Flag = flagName,
					Type = "Slider",
					Default = default,
					Parent = sectionFunctions,
					Instance = sliderHeadline,
					Set = Set,
					Get = function()
						return library_flags[flagName]
					end,
					SetConstraints = function(t, min, max)
						if t and type(t) ~= "table" then
							min, max = t, min
						end
						if min then
							options.Min = min
						end
						if max then
							options.Max = max
						end
						Update()
					end,
					SetMin = function(t, min)
						if min == nil and t ~= nil then
							min = t
						end
						if min and min ~= options.Min then
							options.Min = min
							Update()
						end
					end,
					SetMax = function(t, max)
						if max == nil and t ~= nil then
							max = t
						end
						if max and max ~= options.Max then
							options.Max = max
							Update()
						end
					end,
					Update = Update,
					RawSet = function(t, newValue)
						if nil == newValue and t ~= nil then
							newValue = t
						end
						local last_val = library_flags[flagName]
						library_flags[flagName] = newValue
						if options.Location then
							options.Location[options.LocationFlag or flagName] = newValue
						end
						Update(nil, last_val)
					end,
					Reset = function()
						return Set(nil, default)
					end
				}
				tabFunctions.Flags[flagName], sectionFunctions.Flags[flagName], elements[flagName] = objectdata, objectdata, objectdata
				return objectdata
			end
			sectionFunctions.NewSlider = sectionFunctions.AddSlider
			sectionFunctions.CreateSlider = sectionFunctions.AddSlider
			sectionFunctions.NumberConstraint = sectionFunctions.AddSlider
			sectionFunctions.Slider = sectionFunctions.AddSlider
			sectionFunctions.Slide = sectionFunctions.AddSlider
			function sectionFunctions:AddSearchBox(options, ...)
				options = (options and type(options) == "string" and resolvevararg("SearchBox", options, ...)) or options
				local dropdownName, listt, val, callback, flagName = assert(options.Name, "Missing Name for new searchbox."), assert(options.List, "Missing List for new searchbox."), options.Value, options.Callback, options.Flag or (function()
					library.unnamedsearchbox = 1 + (library.unnamedsearchbox or 0)
					return "SearchBox" .. tostring(library.unnamedsearchbox)
				end)()
				if elements[flagName] ~= nil then
				--	warn(debug.traceback("Warning! Re-used flag '" .. flagName .. "'", 3))
				end
				local newDropdown = Instance_new("Frame")
				local dropdown = Instance_new("ImageLabel")
				local dropdownInner = Instance_new("ImageLabel")
				local dropdownToggle = Instance_new("ImageButton")
				local dropdownSelection = Instance_new("TextBox")
				local dropdownHeadline = Instance_new("TextLabel")
				local dropdownHolderFrame = Instance_new("ImageLabel")
				local dropdownHolderInner = Instance_new("ImageLabel")
				local realDropdownHolder = Instance_new("ScrollingFrame")
				local realDropdownHolderList = Instance_new("UIListLayout")
				local dropdownEnabled = false
				local resolvelist = getresolver(listt, options.Filter)
				local list = resolvelist()
				local multiselect = options.MultiSelect or options.Multi or options.Multiple
				local passed_multiselect = multiselect and type(multiselect)
				local blankstring = not multiselect and (options.BlankValue or options.NoValueString or options.Nothing)
				local selectedOption = val or list[1] or blankstring
				local addcallback = options.ItemAdded or options.AddedCallback
				local delcallback = options.ItemRemoved or options.RemovedCallback
				local clrcallback = options.ItemsCleared or options.ClearedCallback
				local modcallback = options.ItemChanged or options.ChangedCallback
				if blankstring and val == nil then
					val = blankstring
				end
				if val ~= nil then
					selectedOption = val
				end
				if multiselect and (not selectedOption or type(selectedOption) ~= "table") then
					selectedOption = {}
				end
				local selectedObjects = {}
				local optionCount = 0
				newDropdown.Name = "newDropdown"
				newDropdown.Parent = sectionHolder
				newDropdown.BackgroundColor3 = Color3.new(1, 1, 1)
				newDropdown.BackgroundTransparency = 1
				newDropdown.Size = UDim2.new(1, 0, 0, 42)
				dropdown.Name = "dropdown"
				dropdown.Parent = newDropdown
				dropdown.Active = true
				dropdown.BackgroundColor3 = library.colors.topGradient
				local colored_dropdown_BackgroundColor3 = {dropdown, "BackgroundColor3", "topGradient"}
				colored[1 + #colored] = colored_dropdown_BackgroundColor3
				dropdown.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {dropdown, "BorderColor3", "elementBorder"}
				dropdown.Position = UDim2.fromScale(0.027, 0.45)
				dropdown.Selectable = true
				dropdown.Size = UDim2.fromOffset(206, 18)
				dropdown.Image = "rbxassetid://2454009026"
				dropdown.ImageColor3 = library.colors.bottomGradient
				local colored_dropdown_ImageColor3 = {dropdown, "ImageColor3", "bottomGradient"}
				colored[1 + #colored] = colored_dropdown_ImageColor3
				dropdownInner.Name = "dropdownInner"
				dropdownInner.Parent = dropdown
				dropdownInner.Active = true
				dropdownInner.AnchorPoint = Vector2.new(0.5, 0.5)
				dropdownInner.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {dropdownInner, "BackgroundColor3", "topGradient"}
				dropdownInner.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {dropdownInner, "BorderColor3", "elementBorder"}
				dropdownInner.Position = UDim2.fromScale(0.5, 0.5)
				dropdownInner.Selectable = true
				dropdownInner.Size = UDim2.new(1, -4, 1, -4)
				dropdownInner.Image = "rbxassetid://2454009026"
				dropdownInner.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {dropdownInner, "ImageColor3", "bottomGradient"}
				dropdownToggle.Name = "dropdownToggle"
				dropdownToggle.Parent = dropdown
				dropdownToggle.BackgroundColor3 = Color3.new(1, 1, 1)
				dropdownToggle.BackgroundTransparency = 1
				dropdownToggle.Position = UDim2.fromScale(0.9, 0.17)
				dropdownToggle.Rotation = 90
				dropdownToggle.Size = UDim2.fromOffset(12, 12)
				dropdownToggle.ZIndex = 6
				dropdownToggle.Image = "rbxassetid://71659683"
				dropdownToggle.ImageColor3 = Color3.fromRGB(171, 171, 171)
				dropdownSelection.Name = "dropdownSelection"
				dropdownSelection.Parent = dropdown
				dropdownSelection.BackgroundColor3 = Color3.new(1, 1, 1)
				dropdownSelection.BackgroundTransparency = 1
				dropdownSelection.Position = UDim2.new(0.0295485705)
				dropdownSelection.Size = UDim2.fromScale(0.85, 1)
				dropdownSelection.ZIndex = 5
				dropdownSelection.Font = Enum.Font.Code
				dropdownSelection.LineHeight = 1.15
				dropdownSelection.Text = (passed_multiselect == "string" and multiselect) or tostring((multiselect and (blankstring or "Select Item(s)")) or (selectedOption and tostring(selectedOption)) or blankstring or "No Blank String")
				dropdownSelection.TextColor3 = library.colors.otherElementText
				colored[1 + #colored] = {dropdownSelection, "TextColor3", "otherElementText"}
				dropdownSelection.TextSize = 14
				dropdownSelection.TextXAlignment = Enum.TextXAlignment.Left
				dropdownSelection.ClearTextOnFocus = true
				dropdownHeadline.Name = "dropdownHeadline"
				dropdownHeadline.Parent = newDropdown
				dropdownHeadline.BackgroundColor3 = Color3.new(1, 1, 1)
				dropdownHeadline.BackgroundTransparency = 1
				dropdownHeadline.Position = UDim2.fromScale(0.034, 0.03)
				dropdownHeadline.Size = UDim2.fromOffset(167, 11)
				dropdownHeadline.Font = Enum.Font.Code
				dropdownHeadline.Text = (dropdownName and tostring(dropdownName)) or "???"
				dropdownHeadline.TextColor3 = library.colors.elementText
				colored[1 + #colored] = {dropdownHeadline, "TextColor3", "elementText"}
				dropdownHeadline.TextSize = 14
				dropdownHeadline.TextXAlignment = Enum.TextXAlignment.Left
				dropdownHolderFrame.Name = "dropdownHolderFrame"
				dropdownHolderFrame.Parent = newDropdown
				dropdownHolderFrame.Active = true
				dropdownHolderFrame.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {dropdownHolderFrame, "BackgroundColor3", "topGradient"}
				dropdownHolderFrame.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {dropdownHolderFrame, "BorderColor3", "elementBorder"}
				dropdownHolderFrame.Position = UDim2.fromScale(0.025, 1.012)
				dropdownHolderFrame.Selectable = true
				dropdownHolderFrame.Size = UDim2.fromOffset(206, 22)
				dropdownHolderFrame.Visible = false
				dropdownHolderFrame.Image = "rbxassetid://2454009026"
				dropdownHolderFrame.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {dropdownHolderFrame, "ImageColor3", "bottomGradient"}
				dropdownHolderInner.Name = "dropdownHolderInner"
				dropdownHolderInner.Parent = dropdownHolderFrame
				dropdownHolderInner.Active = true
				dropdownHolderInner.AnchorPoint = Vector2.new(0.5, 0.5)
				dropdownHolderInner.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {dropdownHolderInner, "BackgroundColor3", "topGradient"}
				dropdownHolderInner.BorderColor3 = library.colors.elementBorder
				dropdownHolderInner.Position = UDim2.fromScale(0.5, 0.5)
				dropdownHolderInner.Selectable = true
				dropdownHolderInner.Size = UDim2.new(1, -4, 1, -4)
				dropdownHolderInner.Image = "rbxassetid://2454009026"
				dropdownHolderInner.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {dropdownHolderInner, "ImageColor3", "bottomGradient"}
				realDropdownHolder.Name = "realDropdownHolder"
				realDropdownHolder.Parent = dropdownHolderInner
				realDropdownHolder.BackgroundColor3 = Color3.new(1, 1, 1)
				realDropdownHolder.BackgroundTransparency = 1
				realDropdownHolder.Selectable = false
				realDropdownHolder.Size = UDim2.fromScale(1, 1)
				realDropdownHolder.CanvasSize = UDim2.new()
				realDropdownHolder.ScrollBarThickness = 5
				realDropdownHolder.ScrollingDirection = Enum.ScrollingDirection.Y
				realDropdownHolder.AutomaticCanvasSize = Enum.AutomaticSize.Y
				realDropdownHolder.ScrollBarImageTransparency = 0.5
				realDropdownHolder.ScrollBarImageColor3 = library.colors.section
				colored[1 + #colored] = {realDropdownHolder, "ScrollBarImageColor3", "section"}
				realDropdownHolderList.Name = "realDropdownHolderList"
				realDropdownHolderList.Parent = realDropdownHolder
				realDropdownHolderList.HorizontalAlignment = Enum.HorizontalAlignment.Center
				realDropdownHolderList.SortOrder = Enum.SortOrder.LayoutOrder
				sectionFunctions:Update()
				local restorezindex = {}
				library.signals[1 + #library.signals] = newDropdown.MouseEnter:Connect(function()
					colored_dropdown_BackgroundColor3[3] = "main"
					colored_dropdown_BackgroundColor3[4] = 1.5
					colored_dropdown_ImageColor3[3] = "main"
					colored_dropdown_ImageColor3[4] = 2.5
					tweenService:Create(dropdown, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
						BackgroundColor3 = darkenColor(library.colors.main, 1.5),
						ImageColor3 = darkenColor(library.colors.main, 2.5)
					}):Play()
				end)
				library.signals[1 + #library.signals] = newDropdown.MouseLeave:Connect(function()
					if not dropdownEnabled then
						colored_dropdown_BackgroundColor3[3] = "topGradient"
						colored_dropdown_BackgroundColor3[4] = nil
						colored_dropdown_ImageColor3[3] = "bottomGradient"
						colored_dropdown_ImageColor3[4] = nil
						tweenService:Create(dropdown, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = library.colors.topGradient,
							ImageColor3 = library.colors.bottomGradient
						}):Play()
					end
				end)
				local function UpdateDropdownHolder()
					if optionCount >= 6 then
						realDropdownHolder.CanvasSize = UDim2:fromOffset(realDropdownHolderList.AbsoluteContentSize.Y + 2)
					elseif optionCount <= 5 then
						dropdownHolderFrame.Size = UDim2.fromOffset(206, realDropdownHolderList.AbsoluteContentSize.Y + 4)
					end
				end
				local function AddOptions(optionsTable, filter)
					if options.Sort then
						local didstuff, dosort = nil, options.Sort
						if type(dosort) == "function" then
							local g, h = pcall(table.sort, optionsTable, dosort)
							if g then
								didstuff = true
							elseif h then
								--warn("Error sorting list:", h, debug.traceback(""))
							end
						end
						if not didstuff then
							table.sort(optionsTable, library.defaultSort)
						end
					end
					if blankstring and (optionsTable[1] ~= blankstring or table.find(optionsTable, blankstring, 2)) then
						local exists = table.find(optionsTable, blankstring)
						if exists then
							for _ = 1, 35 do
								table.remove(optionsTable, exists)
								exists = table.find(optionsTable, blankstring)
								if not exists then
									break
								end
							end
						end
						table.insert(optionsTable, 1, blankstring)
					end
					optionCount = 0
					realDropdownHolderList.Parent = nil
					realDropdownHolder:ClearAllChildren()
					realDropdownHolderList.Parent = realDropdownHolder
					for _, v in next, optionsTable do
						if not filter or tostring(v):lower():find(dropdownSelection.Text:lower(), 1, not options.RegEx) then
							optionCount = optionCount + 1
							UpdateDropdownHolder()
							local newOption = Instance_new("ImageLabel")
							local optionButton = Instance_new("TextButton")
							if selectedOption == v then
								selectedObjects[1] = newOption
								selectedObjects[2] = optionButton
							end
							newOption.Name = "Frame"
							newOption.Parent = realDropdownHolder
							local togged = (not multiselect and selectedOption == v) or (multiselect and table.find(selectedOption, v))
							newOption.BackgroundColor3 = (togged and library.colors.selectedOption) or library.colors.topGradient
							newOption.BorderSizePixel = 0
							newOption.Size = UDim2.fromOffset(202, 18)
							newOption.Image = "rbxassetid://2454009026"
							newOption.ImageColor3 = (togged and library.colors.unselectedOption) or library.colors.bottomGradient
							local stringed = tostring(v)
							optionButton.Name = stringed
							optionButton.Parent = newOption
							optionButton.Active = true
							optionButton.AnchorPoint = Vector2.new(0.5, 0.5)
							optionButton.BackgroundColor3 = Color3.new(1, 1, 1)
							optionButton.BackgroundTransparency = 1
							optionButton.Position = UDim2.fromScale(0.5, 0.5)
							optionButton.Selectable = true
							optionButton.Size = UDim2.new(1, -10, 1)
							optionButton.ZIndex = 5
							optionButton.Font = Enum.Font.Code
							optionButton.Text = (togged and (" " .. stringed)) or stringed
							optionButton.TextColor3 = (togged and library.colors.main) or library.colors.otherElementText
							optionButton.TextSize = 14
							optionButton.TextXAlignment = Enum.TextXAlignment.Left
							library.signals[1 + #library.signals] = optionButton[(multiselect and "MouseButton1Click") or "MouseButton1Down"]:Connect(function()
								if not library.colorpicker then
									dropdownSelection.Text = (passed_multiselect == "string" and multiselect) or tostring(blankstring or "Select Item(s)")
									restorezindex[newSection] = restorezindex[newSection] or newSection.ZIndex
									restorezindex[newDropdown] = restorezindex[newDropdown] or newDropdown.ZIndex
									restorezindex[sectionHolder] = restorezindex[sectionHolder] or sectionHolder.ZIndex
									if multiselect then
										local cloned = {unpack(selectedOption)}
										local togged = table.find(selectedOption, v)
										if togged then
											table.remove(selectedOption, togged)
										else
											selectedOption[1 + #selectedOption] = v
										end
										togged = table.find(selectedOption, v)
										optionButton.Text = (togged and (" " .. stringed)) or stringed
										newOption.BackgroundColor3 = (togged and library.colors.selectedOption) or library.colors.topGradient
										newOption.ImageColor3 = (togged and library.colors.unselectedOption) or library.colors.bottomGradient
										optionButton.TextColor3 = (togged and library.colors.main) or library.colors.otherElementText
										if callback then
											task.spawn(callback, selectedOption, cloned)
										end
										if togged then
											if addcallback then
												task.spawn(addcallback, v, selectedOption)
											end
										elseif delcallback then
											task.spawn(delcallback, v, selectedOption)
										end
										if modcallback then
											task.spawn(modcallback, v, togged, selectedOption)
										end
										if #selectedOption == 0 and clrcallback then
											task.spawn(clrcallback, selectedOption, cloned)
										end
										return
									else
										dropdownSelection.Text = stringed
										if selectedOption ~= v then
											local last_v = library_flags[flagName]
											selectedObjects[1].BackgroundColor3 = library.colors.topGradient
											selectedObjects[1].ImageColor3 = library.colors.bottomGradient
											selectedObjects[2].Text = selectedObjects[2].Name
											selectedObjects[2].TextColor3 = library.colors.otherElementText
											selectedOption = v
											selectedObjects[1] = newOption
											selectedObjects[2] = optionButton
											newOption.BackgroundColor3 = library.colors.selectedOption
											newOption.ImageColor3 = library.colors.unselectedOption
											optionButton.TextColor3 = library.colors.main
											dropdownHolderFrame.Visible = false
											dropdownToggle.Rotation = 90
											dropdownEnabled = false
											newDropdown.ZIndex = 1
											colored_dropdown_BackgroundColor3[3] = "topGradient"
											colored_dropdown_BackgroundColor3[4] = nil
											colored_dropdown_ImageColor3[3] = "bottomGradient"
											colored_dropdown_ImageColor3[4] = nil
											tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
												BackgroundColor3 = library.colors.topGradient,
												ImageColor3 = library.colors.bottomGradient
											}):Play()
											library_flags[flagName] = selectedOption
											if options.Location then
												options.Location[options.LocationFlag or flagName] = selectedOption
											end
											dropdownSelection.Text = tostring(selectedOption)
											if submenuOpen then
												submenuOpen = nil
											end
											if callback then
												task.spawn(callback, selectedOption, last_v)
											end
										else
											submenuOpen = nil
											dropdownToggle.Rotation = 90
											colored_dropdown_BackgroundColor3[3] = "topGradient"
											colored_dropdown_BackgroundColor3[4] = nil
											colored_dropdown_ImageColor3[3] = "bottomGradient"
											colored_dropdown_ImageColor3[4] = nil
											tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
												BackgroundColor3 = library.colors.topGradient,
												ImageColor3 = library.colors.bottomGradient
											}):Play()
											dropdownHolderFrame.Visible = false
										end
									end
									for ins, z in next, restorezindex do
										ins.ZIndex = z
									end
								end
							end)
							library.signals[1 + #library.signals] = optionButton.MouseEnter:Connect(function()
								tweenService:Create(newOption, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
									BackgroundColor3 = library.colors.hoveredOptionTop,
									ImageColor3 = library.colors.hoveredOptionBottom
								}):Play()
							end)
							library.signals[1 + #library.signals] = optionButton.MouseLeave:Connect(function()
								local togged = (not multiselect and selectedOption == v) or (multiselect and table.find(selectedOption, v))
								tweenService:Create(newOption, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
									BackgroundColor3 = (togged and library.colors.selectedOption) or library.colors.topGradient,
									ImageColor3 = (togged and library.colors.unselectedOption) or library.colors.bottomGradient
								}):Play()
							end)
							UpdateDropdownHolder()
						end
					end
				end
				local precisionscrolling, update = nil
				local showing = false
				local function display(dropdownEnabled, f)
					if submenuOpen == dropdown or submenuOpen == nil then
						if dropdownEnabled then
							list = resolvelist()
							AddOptions(list, f)
							submenuOpen = dropdown
							dropdownToggle.Rotation = 270
							restorezindex[newSection] = restorezindex[newSection] or newSection.ZIndex
							restorezindex[newDropdown] = restorezindex[newDropdown] or newDropdown.ZIndex
							restorezindex[sectionHolder] = restorezindex[sectionHolder] or sectionHolder.ZIndex
							newSection.ZIndex = 50 + newSection.ZIndex
							newDropdown.ZIndex = 2
							sectionHolder.ZIndex = 2
							colored_dropdown_BackgroundColor3[3] = "main"
							colored_dropdown_BackgroundColor3[4] = 1.5
							colored_dropdown_ImageColor3[3] = "main"
							colored_dropdown_ImageColor3[4] = 2.5
							tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
								BackgroundColor3 = darkenColor(library.colors.main, 1.5),
								ImageColor3 = darkenColor(library.colors.main, 2.5)
							}):Play()
							dropdownHolderFrame.Visible = true
							if not options.DisablePrecisionScrolling then
								local scrollrate = tonumber(options.ScrollButtonRate or options.ScrollRate) or 5
								local upkey = options.ScrollUpButton or library.scrollupbutton or shared.scrollupbutton or Enum.KeyCode.Up
								local downkey = options.ScrollDownButton or library.scrolldownbutton or shared.scrolldownbutton or Enum.KeyCode.Down
								precisionscrolling = (precisionscrolling and precisionscrolling:Disconnect() and nil) or userInputService.InputBegan:Connect(function(input)
									if input.UserInputType == Enum.UserInputType.Keyboard then
										local code = input.KeyCode
										local isup = code == upkey
										local isdown = code == downkey
										if isup or isdown then
											local txt = userInputService:GetFocusedTextBox()
											if not txt or txt == dropdownSelection then
												while wait_check() and userInputService:IsKeyDown(code) do
													realDropdownHolder.CanvasPosition = Vector2:new(math.clamp(realDropdownHolder.CanvasPosition.Y + ((isup and -scrollrate) or scrollrate), 0, realDropdownHolder.AbsoluteCanvasSize.Y))
												end
											end
										end
									end
								end)
								library.signals[1 + #library.signals] = precisionscrolling
							end
						else
							submenuOpen = nil
							dropdownToggle.Rotation = 90
							colored_dropdown_BackgroundColor3[3] = "topGradient"
							colored_dropdown_BackgroundColor3[4] = nil
							colored_dropdown_ImageColor3[3] = "bottomGradient"
							colored_dropdown_ImageColor3[4] = nil
							tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
								BackgroundColor3 = library.colors.topGradient,
								ImageColor3 = library.colors.bottomGradient
							}):Play()
							dropdownHolderFrame.Visible = false
							for ins, z in next, restorezindex do
								ins.ZIndex = z
							end
							precisionscrolling = (precisionscrolling and precisionscrolling:Disconnect() and nil) or nil
						end
					end
					showing = dropdownEnabled
					if showing or dropdownEnabled then
					else
						delay(0.01, update)
					end
				end
				local Set = (multiselect and function(t, dat)
					if nil == dat and t ~= nil then
						dat = t
					end
					local lastv = library_flags[flagName]
					if not lastv or selectedOption ~= lastv then
						if lastv and type(lastv) == "table" then
							selectedOption = library_flags[flagName]
						else
							library_flags[flagName] = selectedOption
						end
					--	warn("Attempting to use new table for", flagName, " Please use :Set(), because setting it through flags table may cause errors", debug.traceback(""))
						lastv = library_flags[flagName]
					end
					local cloned = {unpack(selectedOption)}
					if not dat then
						if #selectedOption ~= 0 then
							table.clear(selectedOption)
							if callback then
								task.spawn(callback, selectedOption, cloned)
							end
						end
						return selectedOption
					elseif type(dat) ~= "table" then
					--	warn("Expected table for argument #1 on Set for MultiSelect searchbox. Got", dat, debug.traceback(""))
						return selectedOption
					end
					for k = table.pack(unpack(dat)).n, 1, -1 do
						if dat[k] == nil then
							table.remove(dat, k)
						end
					end
					local proceed = #cloned ~= #dat
					table.clear(selectedOption)
					for k, v in next, dat do
						selectedOption[k] = v
						if not proceed and cloned[k] ~= v then
							proceed = 1
						end
					end
					dropdownSelection.Text = (passed_multiselect == "string" and multiselect) or tostring(blankstring or "Select Item(s)")
					if proceed and callback then
						task.spawn(callback, selectedOption, cloned)
					end
					return selectedOption
				end) or function(t, str)
					if nil == str and t then
						str = t
					end
					local last_v = library_flags[flagName]
					selectedOption = str
					library_flags[flagName] = str
					if options.Location then
						options.Location[options.LocationFlag or flagName] = str
					end
					local sstr = (selectedOption and tostring(selectedOption)) or blankstring or "No Blank String"
					if dropdownSelection.Text ~= sstr then
						dropdownSelection.Text = sstr
					end
					if callback and (last_v ~= str or options.AllowDuplicateCalls) then
						task.spawn(callback, str, last_v)
					end
					return str
				end
				if val ~= nil then
					Set(val)
				else
					library_flags[flagName] = selectedOption
					if options.Location then
						options.Location[options.LocationFlag or flagName] = selectedOption
					end
				end
				library.signals[1 + #library.signals] = dropdownToggle.MouseButton1Click:Connect(function()
					showing = not showing
					display(showing)
				end)
				library.signals[1 + #library.signals] = dropdownSelection.Focused:Connect(function()
					showing = true
					display(true)
				end)
				library.signals[1 + #library.signals] = dropdownSelection:GetPropertyChangedSignal("Text"):Connect(function()
					if showing then
						display(true, #dropdownSelection.Text > 0)
					end
				end)
				if not multiselect then
					library.signals[1 + #library.signals] = dropdownSelection.FocusLost:Connect(function(b)
						if showing then
							wait()
						end
						showing = false
						display(false)
						if b then
							Set(dropdownSelection.Text)
						end
					end)
				end
				AddOptions(list)
				local default = library_flags[flagName]
				function update()
					dropdownName, callback = options.Name or dropdownName, options.Callback
					local sstr = (passed_multiselect == "string" and multiselect) or (not multiselect and library_flags[flagName] and tostring(library_flags[flagName])) or (not multiselect and selectedOption and tostring(selectedOption)) or blankstring or "Nothing"
					if dropdownSelection.Text ~= sstr then
						dropdownSelection.Text = sstr
					end
					dropdownHeadline.Text = (dropdownName and tostring(dropdownName)) or "???"
					return sstr
				end
				local function validate(fallbackValue)
					if list and table.find(list, library_flags[flagName]) then
						update()
						return true
					end
					if fallbackValue ~= nil then
						if fallbackValue == "__DEFAULT" then
							fallbackValue = default
						end
					else
						fallbackValue = list[1]
					end
					if multiselect and type(fallbackValue) ~= "table" then
						fallbackValue = {fallbackValue}
					end
					return Set(fallbackValue)
				end
				local objectdata = {
					Options = options,
					Name = flagName,
					Flag = flagName,
					Type = "SearchBox",
					Default = default,
					Parent = sectionFunctions,
					Instance = dropdownSelection,
					Validate = validate,
					Set = Set,
					RawSet = ((multiselect and function(t, dat)
						if nil == dat and t ~= nil then
							dat = t
						end
						local lastv = library_flags[flagName]
						if not lastv or selectedOption ~= lastv then
							if lastv and type(lastv) == "table" then
								selectedOption = library_flags[flagName]
							else
								library_flags[flagName] = selectedOption
							end
						--	warn("Attempting to use new table for", flagName, " Please use :Set(), as setting through flags table may cause errors", debug.traceback(""))
							lastv = library_flags[flagName]
						end
						local cloned = {unpack(selectedOption)}
						if not dat then
							if #selectedOption ~= 0 then
								table.clear(selectedOption)
								if callback then
									task.spawn(callback, selectedOption, cloned)
								end
							end
							return selectedOption
						elseif type(dat) ~= "table" then
						--	warn("Expected table for argument #1 on Set for MultiSelect searchbox. Got", dat, debug.traceback(""))
							return selectedOption
						end
						for k = table.pack(unpack(dat)).n, 1, -1 do
							if dat[k] == nil then
								table.remove(dat, k)
							end
						end
						local proceed = #cloned ~= #dat
						table.clear(selectedOption)
						for k, v in next, dat do
							selectedOption[k] = v
							if not proceed and cloned[k] ~= v then
								proceed = 1
							end
						end
						update()
						return selectedOption
					end) or function(t, str)
						if nil == str and t then
							str = t
						end
						selectedOption = str
						library_flags[flagName] = str
						if options.Location then
							options.Location[options.LocationFlag or flagName] = str
						end
						update()
						return str
					end),
					Get = function()
						return library_flags[flagName]
					end,
					Update = update,
					Reset = function()
						return Set(nil, default)
					end
				}
				function objectdata.UpdateList(t, listt, updateValues)
					if (nil == listt and t ~= nil) or (type(t) == "table" and type(listt) ~= "table") then
						listt, updateValues = t, listt
					end
					if listt == objectdata then
						listt = nil
					end
					resolvelist = getresolver(listt or options.List, options.Filter, options.Method)
					list = resolvelist()
					if updateValues then
						validate()
					end
					if showing then
						display(false)
						display(true)
					end
					return list
				end
				tabFunctions.Flags[flagName], sectionFunctions.Flags[flagName], elements[flagName] = objectdata, objectdata, objectdata
				return objectdata
			end
			sectionFunctions.NewSearchBox = sectionFunctions.AddSearchBox
			sectionFunctions.CreateSearchBox = sectionFunctions.AddSearchBox
			sectionFunctions.SearchBox = sectionFunctions.AddSearchBox
			sectionFunctions.CreateSearchbox = sectionFunctions.AddSearchBox
			sectionFunctions.NewSearchbox = sectionFunctions.AddSearchBox
			sectionFunctions.Searchbox = sectionFunctions.AddSearchBox
			sectionFunctions.Sbox = sectionFunctions.AddSearchBox
			sectionFunctions.SBox = sectionFunctions.AddSearchBox
			if isfolder and makefolder and listfiles and readfile and writefile then
				function sectionFunctions:AddPersistence(options, ...)
					options = (options and type(options) == "string" and resolvevararg("Tab", options, ...)) or options
					local dropdownName, custom_workspace, val, persistiveflags, suffix, callback, loadcallback, savecallback, postload, postsave, flagName = assert(options.Name, "Missing Name for new persistence."), options.Workspace or library.WorkspaceName, options.Value, options.Persistive or options.Flags or "all", options.Suffix, options.Callback, options.LoadCallback, options.SaveCallback, options.PostLoadCallback, options.PostSaveCallback, options.Flag or (function()
						library.unnamedpersistence = 1 + (library.unnamedpersistence or 0)
						return "Persistence" .. tostring(library.unnamedpersistence)
					end)()
					if elements[flagName] ~= nil then
					--	warn(debug.traceback("Warning! Re-used flag '" .. flagName .. "'", 3))
					end
					local designerpersists = options.Desginer
					local newDropdown = Instance_new("Frame")
					local dropdown = Instance_new("ImageLabel")
					local dropdownInner = Instance_new("ImageLabel")
					local dropdownToggle = Instance_new("ImageButton")
					local dropdownSelection = Instance_new("TextBox")
					local dropdownHeadline = Instance_new("TextLabel")
					local dropdownHolderFrame = Instance_new("ImageLabel")
					local dropdownHolderInner = Instance_new("ImageLabel")
					local realDropdownHolder = Instance_new("ScrollingFrame")
					local realDropdownHolderList = Instance_new("UIListLayout")
					local dropdownEnabled = false
					if not isfolder("./Root") then
						makefolder("./Root")
					end
					local common_string = "./Root/" .. tostring(custom_workspace or library.WorkspaceName)
					local function resolvelist(nofold)
						if custom_workspace ~= options.Workspace then
							custom_workspace = options.Workspace
							common_string = "./Root/" .. tostring(custom_workspace or library.WorkspaceName)
						end
						if not isfolder or not makefolder or not listfiles then
							return {}
						end
						if not isfolder(common_string) then
							if nofold then
								return {}
							end
							makefolder(common_string)
						end
						assert(isfolder(common_string), "Couldn't create folder: " .. tostring(library.WorkspaceName or "No workspace name?"))
						local names, files = {}, listfiles(common_string)
						if #files > 0 then
							local len = #common_string + 2
							for _, f in next, files do
								names[1 + #names] = string.sub(f, len, -5)
							end
							table.sort(names)
						end
						return names
					end
					local list = resolvelist(true)
					local blankstring = options.BlankValue or options.NoValueString or options.Nothing
					local selectedObjects = {}
					local optionCount = 0
					if blankstring and val == nil then
						val = blankstring
					end
					local selectedOption = val or blankstring or list[1]
					newDropdown.Name = "newDropdown"
					newDropdown.Parent = sectionHolder
					newDropdown.BackgroundColor3 = Color3.new(1, 1, 1)
					newDropdown.BackgroundTransparency = 1
					newDropdown.Size = UDim2.new(1, 0, 0, 42)
					dropdown.Name = "dropdown"
					dropdown.Parent = newDropdown
					dropdown.Active = true
					dropdown.BackgroundColor3 = library.colors.topGradient
					local colored_dropdown_BackgroundColor3 = {dropdown, "BackgroundColor3", "topGradient"}
					colored[1 + #colored] = colored_dropdown_BackgroundColor3
					dropdown.BorderColor3 = library.colors.elementBorder
					colored[1 + #colored] = {dropdown, "BorderColor3", "elementBorder"}
					dropdown.Position = UDim2.fromScale(0.027, 0.45)
					dropdown.Selectable = true
					dropdown.Size = UDim2.fromOffset(206, 18)
					dropdown.Image = "rbxassetid://2454009026"
					dropdown.ImageColor3 = library.colors.bottomGradient
					local colored_dropdown_ImageColor3 = {dropdown, "ImageColor3", "bottomGradient"}
					colored[1 + #colored] = colored_dropdown_ImageColor3
					dropdownInner.Name = "dropdownInner"
					dropdownInner.Parent = dropdown
					dropdownInner.Active = true
					dropdownInner.AnchorPoint = Vector2.new(0.5, 0.5)
					dropdownInner.BackgroundColor3 = library.colors.topGradient
					colored[1 + #colored] = {dropdownInner, "BackgroundColor3", "topGradient"}
					dropdownInner.BorderColor3 = library.colors.elementBorder
					colored[1 + #colored] = {dropdownInner, "BorderColor3", "elementBorder"}
					dropdownInner.Position = UDim2.fromScale(0.5, 0.5)
					dropdownInner.Selectable = true
					dropdownInner.Size = UDim2.new(1, -4, 1, -4)
					dropdownInner.Image = "rbxassetid://2454009026"
					dropdownInner.ImageColor3 = library.colors.bottomGradient
					colored[1 + #colored] = {dropdownInner, "ImageColor3", "bottomGradient"}
					dropdownToggle.Name = "dropdownToggle"
					dropdownToggle.Parent = dropdown
					dropdownToggle.BackgroundColor3 = Color3.new(1, 1, 1)
					dropdownToggle.BackgroundTransparency = 1
					dropdownToggle.Position = UDim2.fromScale(0.9, 0.17)
					dropdownToggle.Rotation = 90
					dropdownToggle.Size = UDim2.fromOffset(12, 12)
					dropdownToggle.ZIndex = 2
					dropdownToggle.Image = "rbxassetid://71659683"
					dropdownToggle.ImageColor3 = Color3.fromRGB(171, 171, 171)
					dropdownSelection.Name = "dropdownSelection"
					dropdownSelection.Parent = dropdown
					dropdownSelection.BackgroundColor3 = Color3.new(1, 1, 1)
					dropdownSelection.BackgroundTransparency = 1
					dropdownSelection.Position = UDim2.new(0.0295485705)
					dropdownSelection.Size = UDim2.fromScale(0.97, 1)
					dropdownSelection.ZIndex = 5
					dropdownSelection.Font = Enum.Font.Code
					dropdownSelection.LineHeight = 1.15
					dropdownSelection.Text = (selectedOption and tostring(selectedOption)) or "nil"
					dropdownSelection.TextColor3 = library.colors.otherElementText
					colored[1 + #colored] = {dropdownSelection, "TextColor3", "otherElementText"}
					dropdownSelection.TextSize = 14
					dropdownSelection.TextXAlignment = Enum.TextXAlignment.Left
					dropdownHeadline.Name = "dropdownHeadline"
					dropdownHeadline.Parent = newDropdown
					dropdownHeadline.BackgroundColor3 = Color3.new(1, 1, 1)
					dropdownHeadline.BackgroundTransparency = 1
					dropdownHeadline.Position = UDim2.fromScale(0.034, 0.03)
					dropdownHeadline.Size = UDim2.fromOffset(167, 11)
					dropdownHeadline.Font = Enum.Font.Code
					dropdownHeadline.Text = (dropdownName and tostring(dropdownName)) or "???"
					dropdownHeadline.TextColor3 = library.colors.elementText
					colored[1 + #colored] = {dropdownHeadline, "TextColor3", "elementText"}
					dropdownHeadline.TextSize = 14
					dropdownHeadline.TextXAlignment = Enum.TextXAlignment.Left
					dropdownHolderFrame.Name = "dropdownHolderFrame"
					dropdownHolderFrame.Parent = newDropdown
					dropdownHolderFrame.Active = true
					dropdownHolderFrame.BackgroundColor3 = library.colors.topGradient
					colored[1 + #colored] = {dropdownHolderFrame, "BackgroundColor3", "topGradient"}
					dropdownHolderFrame.BorderColor3 = library.colors.elementBorder
					colored[1 + #colored] = {dropdownHolderFrame, "BorderColor3", "elementBorder"}
					dropdownHolderFrame.Position = UDim2.fromScale(0.025, 1.012)
					dropdownHolderFrame.Selectable = true
					dropdownHolderFrame.Size = UDim2.fromOffset(206, 22)
					dropdownHolderFrame.Visible = false
					dropdownHolderFrame.Image = "rbxassetid://2454009026"
					dropdownHolderFrame.ImageColor3 = library.colors.bottomGradient
					colored[1 + #colored] = {dropdownHolderFrame, "ImageColor3", "bottomGradient"}
					dropdownHolderInner.Name = "dropdownHolderInner"
					dropdownHolderInner.Parent = dropdownHolderFrame
					dropdownHolderInner.Active = true
					dropdownHolderInner.AnchorPoint = Vector2.new(0.5, 0.5)
					dropdownHolderInner.BackgroundColor3 = library.colors.topGradient
					colored[1 + #colored] = {dropdownHolderInner, "BackgroundColor3", "topGradient"}
					dropdownHolderInner.BorderColor3 = library.colors.elementBorder
					colored[1 + #colored] = {dropdownHolderInner, "BorderColor3", "elementBorder"}
					dropdownHolderInner.Position = UDim2.fromScale(0.5, 0.5)
					dropdownHolderInner.Selectable = true
					dropdownHolderInner.Size = UDim2.new(1, -4, 1, -4)
					dropdownHolderInner.Image = "rbxassetid://2454009026"
					dropdownHolderInner.ImageColor3 = library.colors.bottomGradient
					colored[1 + #colored] = {dropdownHolderInner, "ImageColor3", "bottomGradient"}
					realDropdownHolder.Name = "realDropdownHolder"
					realDropdownHolder.Parent = dropdownHolderInner
					realDropdownHolder.BackgroundColor3 = Color3.new(1, 1, 1)
					realDropdownHolder.BackgroundTransparency = 1
					realDropdownHolder.Selectable = false
					realDropdownHolder.Size = UDim2.fromScale(1, 1)
					realDropdownHolder.CanvasSize = UDim2.new()
					realDropdownHolder.ScrollBarThickness = 5
					realDropdownHolder.ScrollingDirection = Enum.ScrollingDirection.Y
					realDropdownHolder.AutomaticCanvasSize = Enum.AutomaticSize.Y
					realDropdownHolder.ScrollBarImageTransparency = 0.5
					realDropdownHolder.ScrollBarImageColor3 = library.colors.section
					colored[1 + #colored] = {realDropdownHolder, "ScrollBarImageColor3", "section"}
					realDropdownHolderList.Name = "realDropdownHolderList"
					realDropdownHolderList.Parent = realDropdownHolder
					realDropdownHolderList.HorizontalAlignment = Enum.HorizontalAlignment.Center
					realDropdownHolderList.SortOrder = Enum.SortOrder.LayoutOrder
					sectionFunctions:Update()
					library.signals[1 + #library.signals] = newDropdown.MouseEnter:Connect(function()
						colored_dropdown_BackgroundColor3[3] = "main"
						colored_dropdown_BackgroundColor3[4] = 1.5
						colored_dropdown_ImageColor3[3] = "main"
						colored_dropdown_ImageColor3[4] = 2.5
						tweenService:Create(dropdown, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = darkenColor(library.colors.main, 1.5),
							ImageColor3 = darkenColor(library.colors.main, 2.5)
						}):Play()
					end)
					library.signals[1 + #library.signals] = newDropdown.MouseLeave:Connect(function()
						if not dropdownEnabled then
							colored_dropdown_BackgroundColor3[3] = "topGradient"
							colored_dropdown_BackgroundColor3[4] = nil
							colored_dropdown_ImageColor3[3] = "bottomGradient"
							colored_dropdown_ImageColor3[4] = nil
							tweenService:Create(dropdown, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
								BackgroundColor3 = library.colors.topGradient,
								ImageColor3 = library.colors.bottomGradient
							}):Play()
						end
					end)
					local restorezindex = {}
					local function UpdateDropdownHolder()
						if optionCount >= 6 then
							realDropdownHolder.CanvasSize = UDim2:fromOffset(realDropdownHolderList.AbsoluteContentSize.Y + 2)
						elseif optionCount <= 5 then
							dropdownHolderFrame.Size = UDim2.fromOffset(206, (realDropdownHolderList.AbsoluteContentSize.Y + 4))
						end
					end
					local function AddOptions(optionsTable, filter)
						if options.Sort then
							local didstuff, dosort = nil, options.Sort
							if type(dosort) == "function" then
								local g, h = pcall(table.sort, optionsTable, dosort)
								if g then
									didstuff = true
								elseif h then
								--	warn("Error sorting list:", h, debug.traceback(""))
								end
							end
							if not didstuff then
								table.sort(optionsTable, library.defaultSort)
							end
						end
						if blankstring and (optionsTable[1] ~= blankstring or table.find(optionsTable, blankstring, 2)) then
							local exists = table.find(optionsTable, blankstring)
							if exists then
								for _ = 1, 35 do
									table.remove(optionsTable, exists)
									exists = table.find(optionsTable, blankstring)
									if not exists then
										break
									end
								end
							end
							table.insert(optionsTable, 1, blankstring)
						end
						optionCount = 0
						realDropdownHolderList.Parent = nil
						realDropdownHolder:ClearAllChildren()
						realDropdownHolderList.Parent = realDropdownHolder
						for _, v in next, optionsTable do
							if not filter or tostring(v):lower():find(dropdownSelection.Text:lower(), 1, true) then
								optionCount = optionCount + 1
								UpdateDropdownHolder()
								local newOption = Instance_new("ImageLabel")
								local optionButton = Instance_new("TextButton")
								if selectedOption == v or not selectedObjects[1] or not selectedObjects[2] then
									selectedObjects[1] = newOption
									selectedObjects[2] = optionButton
								end
								newOption.Name = "Frame"
								newOption.Parent = realDropdownHolder
								newOption.BackgroundColor3 = (selectedOption == v and library.colors.selectedOption or library.colors.topGradient)
								newOption.BorderSizePixel = 0
								newOption.Size = UDim2.fromOffset(202, 18)
								newOption.Image = "rbxassetid://2454009026"
								newOption.ImageColor3 = (selectedOption == v and library.colors.unselectedOption or library.colors.bottomGradient)
								optionButton.Name = tostring(v)
								optionButton.Parent = newOption
								optionButton.AnchorPoint = Vector2.new(0.5, 0.5)
								optionButton.BackgroundColor3 = Color3.new(1, 1, 1)
								optionButton.BackgroundTransparency = 1
								optionButton.Position = UDim2.fromScale(0.5, 0.5)
								optionButton.Size = UDim2.new(1, -10, 1)
								optionButton.ZIndex = 5
								optionButton.Font = Enum.Font.Code
								optionButton.Text = (selectedOption == v and " " .. tostring(v)) or tostring(v)
								optionButton.TextColor3 = (selectedOption == v and library.colors.main or library.colors.otherElementText)
								optionButton.TextSize = 14
								optionButton.TextXAlignment = Enum.TextXAlignment.Left
								library.signals[1 + #library.signals] = optionButton.MouseButton1Down:Connect(function()
									dropdownSelection.Text = tostring(v)
									restorezindex[newSection] = restorezindex[newSection] or newSection.ZIndex
									restorezindex[newDropdown] = restorezindex[newDropdown] or newDropdown.ZIndex
									restorezindex[sectionHolder] = restorezindex[sectionHolder] or sectionHolder.ZIndex
									if selectedOption ~= v then
										local last_v = library_flags[flagName]
										selectedObjects[1].BackgroundColor3 = library.colors.topGradient
										selectedObjects[1].ImageColor3 = library.colors.bottomGradient
										selectedObjects[2].Text = selectedObjects[2].Name
										selectedObjects[2].TextColor3 = library.colors.otherElementText
										selectedOption = v
										selectedObjects[1] = newOption
										selectedObjects[2] = optionButton
										newOption.BackgroundColor3 = library.colors.selectedOption
										newOption.ImageColor3 = library.colors.unselectedOption
										optionButton.TextColor3 = library.colors.main
										dropdownHolderFrame.Visible = false
										dropdownToggle.Rotation = 90
										dropdownEnabled = false
										colored_dropdown_BackgroundColor3[3] = "topGradient"
										colored_dropdown_BackgroundColor3[4] = nil
										colored_dropdown_ImageColor3[3] = "bottomGradient"
										colored_dropdown_ImageColor3[4] = nil
										tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
											BackgroundColor3 = library.colors.topGradient,
											ImageColor3 = library.colors.bottomGradient
										}):Play()
										library_flags[flagName] = selectedOption
										if options.Location then
											options.Location[options.LocationFlag or flagName] = selectedOption
										end
										dropdownSelection.Text = tostring(selectedOption)
										if submenuOpen then
											submenuOpen = nil
										end
										if callback then
											task.spawn(callback, selectedOption, last_v)
										end
									else
										submenuOpen = nil
										dropdownToggle.Rotation = 90
										newDropdown.ZIndex = 1
										sectionHolder.ZIndex = 1
										colored_dropdown_BackgroundColor3[3] = "topGradient"
										colored_dropdown_BackgroundColor3[4] = nil
										colored_dropdown_ImageColor3[3] = "bottomGradient"
										colored_dropdown_ImageColor3[4] = nil
										tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
											BackgroundColor3 = library.colors.topGradient,
											ImageColor3 = library.colors.bottomGradient
										}):Play()
										dropdownHolderFrame.Visible = false
									end
									for ins, z in next, restorezindex do
										ins.ZIndex = z
									end
								end)
								library.signals[1 + #library.signals] = optionButton.MouseEnter:Connect(function()
									tweenService:Create(newOption, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
										BackgroundColor3 = library.colors.hoveredOptionTop,
										ImageColor3 = library.colors.hoveredOptionBottom
									}):Play()
								end)
								library.signals[1 + #library.signals] = optionButton.MouseLeave:Connect(function()
									tweenService:Create(newOption, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
										BackgroundColor3 = library.colors.unhoveredOptionTop,
										ImageColor3 = library.colors.unhoveredOptionBottom
									}):Play()
								end)
								UpdateDropdownHolder()
							end
						end
					end
					local precisionscrolling, update = nil
					local showing = false
					local function display(dropdownEnabled, f)
						if submenuOpen == dropdown or submenuOpen == nil then
							if dropdownEnabled then
								list = resolvelist(true)
								AddOptions(list, f)
								submenuOpen = dropdown
								restorezindex[newSection] = restorezindex[newSection] or newSection.ZIndex
								restorezindex[newDropdown] = restorezindex[newDropdown] or newDropdown.ZIndex
								restorezindex[sectionHolder] = restorezindex[sectionHolder] or sectionHolder.ZIndex
								newSection.ZIndex = 50 + newSection.ZIndex
								dropdownToggle.Rotation = 270
								newDropdown.ZIndex = 2
								sectionHolder.ZIndex = 2
								colored_dropdown_BackgroundColor3[3] = "main"
								colored_dropdown_BackgroundColor3[4] = 1.5
								colored_dropdown_ImageColor3[3] = "main"
								colored_dropdown_ImageColor3[4] = 2.5
								tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
									BackgroundColor3 = darkenColor(library.colors.main, 1.5),
									ImageColor3 = darkenColor(library.colors.main, 2.5)
								}):Play()
								dropdownHolderFrame.Visible = true
								if not options.DisablePrecisionScrolling then
									local upkey = options.ScrollUpButton or library.scrollupbutton or shared.scrollupbutton or Enum.KeyCode.Up
									local downkey = options.ScrollDownButton or library.scrolldownbutton or shared.scrolldownbutton or Enum.KeyCode.Down
									precisionscrolling = (precisionscrolling and precisionscrolling:Disconnect() and nil) or userInputService.InputBegan:Connect(function(input)
										if input.UserInputType == Enum.UserInputType.Keyboard then
											local code = input.KeyCode
											local isup = code == upkey
											local isdown = code == downkey
											if isup or isdown then
												local txt = userInputService:GetFocusedTextBox()
												if not txt then
													while wait_check() and userInputService:IsKeyDown(code) do
														realDropdownHolder.CanvasPosition = Vector2:new(math.clamp(realDropdownHolder.CanvasPosition.Y + ((isup and -5) or 5), 0, realDropdownHolder.AbsoluteCanvasSize.Y))
													end
												end
											end
										end
									end)
									library.signals[1 + #library.signals] = precisionscrolling
								end
							else
								submenuOpen = nil
								dropdownToggle.Rotation = 90
								colored_dropdown_BackgroundColor3[3] = "topGradient"
								colored_dropdown_BackgroundColor3[4] = nil
								colored_dropdown_ImageColor3[3] = "bottomGradient"
								colored_dropdown_ImageColor3[4] = nil
								tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
									BackgroundColor3 = library.colors.topGradient,
									ImageColor3 = library.colors.bottomGradient
								}):Play()
								dropdownHolderFrame.Visible = false
								for ins, z in next, restorezindex do
									ins.ZIndex = z
								end
								precisionscrolling = (precisionscrolling and precisionscrolling:Disconnect() and nil) or nil
							end
							showing = dropdownEnabled
							if showing or dropdownEnabled then
							else
								delay(0.01, update)
							end
						end
					end
					local last_v = nil
					local function Set(t, str)
						if nil == str and t then
							str = t
						end
						selectedOption = str
						last_v = library_flags[flagName]
						library_flags[flagName] = str
						if options.Location then
							options.Location[options.LocationFlag or flagName] = str
						end
						local sstr = (selectedOption and tostring(selectedOption)) or blankstring or "No Blank String"
						if dropdownSelection.Text ~= sstr then
							dropdownSelection.Text = sstr
						end
						if callback and (last_v ~= str or options.AllowDuplicateCalls) then
							task.spawn(callback, str, last_v)
						end
						return str
					end
					if val ~= nil then
						Set(val)
					else
						Set("Filename")
					end
					library.signals[1 + #library.signals] = dropdownSelection.Focused:Connect(function()
						showing = true
						display(true)
					end)
					library.signals[1 + #library.signals] = dropdownSelection:GetPropertyChangedSignal("Text"):Connect(function()
						if showing then
							display(true, #dropdownSelection.Text > 0)
						end
					end)
					library.signals[1 + #library.signals] = dropdownSelection.FocusLost:Connect(function(b)
						if showing then
							wait()
						end
						showing = false
						display(false)
						if b then
							Set(dropdownSelection.Text)
						end
					end)
					AddOptions(list)
					local function savestuff(s, get)
						if not s or type(s) ~= "string" then
							s = nil
						end
						local rawfile = "json__save"
						if not get then
							local filenameddst = string.gsub(s or dropdownSelection.Text or "", "", "") --ตรงนี้
							if #filenameddst == 0 then
								return
							end
							rawfile = string.format("%s/%s.txt", common_string, filenameddst)
						end
						if savecallback then
							local x, e = pcall(savecallback, rawfile, library_flags[flagName])
							if not x and e then
							--	warn("Error while calling the Pre-Save callback:", e, debug.traceback(""))
							end
						end
						local working_with = {}
						if persistiveflags == 1 or persistiveflags == true or persistiveflags == "*" then
							persistiveflags = "all"
						elseif persistiveflags == 2 then
							persistiveflags = "tab"
						elseif persistiveflags == 3 then
							persistiveflags = "section"
						end
						if persistiveflags == "all" or persistiveflags == "tab" or persistiveflags == "section" then
							for cflag, data in next, (persistiveflags == "all" and elements) or (persistiveflags == "tab" and tabFunctions.Flags) or (persistiveflags == "section" and sectionFunctions.Flags) do
								if data.Type ~= "Persistence" and (designerpersists or string.sub(cflag, 1, 11) ~= "__Designer.") then
									working_with[cflag] = data
								end
							end
						elseif type(persistiveflags) == "table" then
							if #persistiveflags > 0 then
								local inverted = persistiveflags[0] == false or persistiveflags.Inverted
								for k, cflag in next, persistiveflags do
									if k > 0 then
										local data = elements[cflag]
										if data and data.Type ~= "Persistence" and (designerpersists or string.sub(cflag, 1, 11) ~= "__Designer.") then
											working_with[cflag] = (not inverted and data) or nil
										end
									end
								end
							else
								for cflag, persists in next, elements do
									if persists and (designerpersists or string.sub(cflag, 1, 11) ~= "__Designer.") then
										local data = elements[cflag]
										if data then
											working_with[cflag] = data
										end
									end
								end
							end
						end
						local saving = {}
						for cflag in next, working_with do
							local value = library_flags[cflag]
							local good, jval = nil, nil
							if value ~= nil then
								good, jval = JSONEncode(value)
							else
								good, jval = true, "null"
							end
							if not good or (jval == "null" and value ~= nil) then
								local typ = typeof(value)
								if typ == "Color3" then
									value = (library.rainbowflags[cflag] and "rainbow") or Color3ToHex(value)
								end
								value = tostring(value)
								good, jval = JSONEncode(value)
								if not good or (jval == "null" and value ~= nil) then
								--	warn("Could not save value:", value, debug.traceback(""))
								end
							end
							if good and jval then
								saving[cflag] = value
							end
						end
						local ret = nil
						local good, content = JSONEncode(saving)
						if good and content then
							if not get then
								if not isfolder(common_string) then
									makefolder(common_string)
								end
								writefile(rawfile, content)
							else
								ret = content
							end
						end
						if postsave then
							local x, e = pcall(postsave, rawfile, library_flags[flagName])
							if not x and e then
							--	warn("Error while calling the Post-Save callback:", e, debug.traceback(""))
							end
						end
						return ret
					end
					local function loadstuff(s, jsonmode, silent)
						if not s or type(s) ~= "string" then
							s = nil
						end
						local filename = "json__load"
						if not jsonmode then
							local filenameddst = convertfilename(s or dropdownSelection.Text, nil, "")
							if #filenameddst == 0 then
								return
							end
							filename = string.format("%s/%s.txt", common_string, filenameddst)
						end
						if loadcallback then
							local x, e = pcall(loadcallback, (jsonmode and s) or filename, library_flags[flagName])
							if not x and e then
						--		warn("Error while calling the Pre-Load callback:", e, debug.traceback(""))
							end
						end
						if jsonmode or not isfile or isfile(filename) then
							local content = (jsonmode and s) or (not jsonmode and readfile(filename))
							if content and #content > 1 then
								local good, jcontent = JSONDecode(content)
								if good and jcontent then
									for cflag, val in next, jcontent do
										if val and type(val) == "string" and #val > 7 and #val < 64 and string.sub(val, 1, 5) == "Enum." then
											local e = string.find(val, ".", 6, true)
											if e then
												local en = Enum[string.sub(val, 6, e - 1)]
												en = en and en[string.sub(val, e + 1)]
												if en then
													val = en
												else
												--	warn("Tried & failed to convert '" .. val .. "' to EnumItem")
												end
											end
										end
										local data = elements[cflag]
										if data and data.Type ~= "Persistence" then
											if silent and data.RawSet then
												data:RawSet(val)
											elseif data.Set then
												data:Set(val)
											else
												library_flags[cflag] = val
											end
										end
									end
								end
							end
						end
						if postload then
							local x, e = pcall(postload, filename, library_flags[flagName])
							if not x and e then
							--	warn("Error while calling the Post-Load callback:", e, debug.traceback(""))
							end
						end
					end
					do
						local buttons, offset = {}, 0
						local fram = nil
						for _, options in next, {{
							Name = "Save" .. ((suffix and (" " .. tostring(suffix))) or ""),
							Callback = savestuff
							}, {
								Name = "Load" .. ((suffix and (" " .. tostring(suffix))) or ""),
								Callback = loadstuff
							}} do
							local buttonName, callback = options.Name, options.Callback
							local realButton = Instance_new("TextButton")
							realButton.Name = "realButton"
							realButton.BackgroundColor3 = Color3.new(1, 1, 1)
							realButton.BackgroundTransparency = 1
							realButton.Size = UDim2.fromScale(1, 1)
							realButton.ZIndex = 5
							realButton.Font = Enum.Font.Code
							realButton.Text = (buttonName and tostring(buttonName)) or "???"
							realButton.TextColor3 = library.colors.elementText
							colored[1 + #colored] = {realButton, "TextColor3", "elementText"}
							realButton.TextSize = 14
							local textsize = textToSize(realButton).X + 14
							if newSection.Parent.AbsoluteSize.X < offset + textsize + 8 then
								offset, fram = 0, nil
							end
							local newButton = fram or Instance_new("Frame")
							fram = newButton
							local button = Instance_new("ImageLabel")
							newButton.Name = removeSpaces((buttonName and buttonName:lower() or "???") .. "Holder")
							newButton.Parent = sectionHolder
							newButton.BackgroundColor3 = Color3.new(1, 1, 1)
							newButton.BackgroundTransparency = 1
							newButton.Size = UDim2.new(1, 0, 0, 24)
							button.Name = "button"
							button.Parent = newButton
							button.Active = true
							button.BackgroundColor3 = library.colors.topGradient
							local colored_button_BackgroundColor3 = {button, "BackgroundColor3", "topGradient"}
							colored[1 + #colored] = colored_button_BackgroundColor3
							button.BorderColor3 = library.colors.elementBorder
							colored[1 + #colored] = {button, "BorderColor3", "elementBorder"}
							button.Position = UDim2.new(0.031, offset, 0.166)
							button.Selectable = true
							button.Size = UDim2.fromOffset(28, 18)
							button.Image = "rbxassetid://2454009026"
							button.ImageColor3 = library.colors.bottomGradient
							local colored_button_ImageColor3 = {button, "ImageColor3", "bottomGradient"}
							colored[1 + #colored] = colored_button_ImageColor3
							local buttonInner = Instance_new("ImageLabel")
							buttonInner.Name = "buttonInner"
							buttonInner.Parent = button
							buttonInner.Active = true
							buttonInner.AnchorPoint = Vector2.new(0.5, 0.5)
							buttonInner.BackgroundColor3 = library.colors.topGradient
							colored[1 + #colored] = {buttonInner, "BackgroundColor3", "topGradient"}
							buttonInner.BorderColor3 = library.colors.elementBorder
							colored[1 + #colored] = {buttonInner, "BorderColor3", "elementBorder"}
							buttonInner.Position = UDim2.fromScale(0.5, 0.5)
							buttonInner.Selectable = true
							buttonInner.Size = UDim2.new(1, -4, 1, -4)
							buttonInner.Image = "rbxassetid://2454009026"
							buttonInner.ImageColor3 = library.colors.bottomGradient
							colored[1 + #colored] = {buttonInner, "ImageColor3", "bottomGradient"}
							button.Size = UDim2.fromOffset(textsize, 18)
							realButton.Parent = button
							offset = offset + textsize + 6
							sectionFunctions:Update()
							local presses = 0
							library.signals[1 + #library.signals] = realButton.MouseButton1Click:Connect(function()
								if not library.colorpicker and not submenuOpen then
									presses = 1 + presses
									task.spawn(callback, presses)
								end
							end)
							library.signals[1 + #library.signals] = button.MouseEnter:Connect(function()
								colored_button_BackgroundColor3[3] = "main"
								colored_button_BackgroundColor3[4] = 1.5
								colored_button_ImageColor3[3] = "main"
								colored_button_ImageColor3[4] = 2.5
								tweenService:Create(button, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
									BackgroundColor3 = darkenColor(library.colors.main, 1.5),
									ImageColor3 = darkenColor(library.colors.main, 2.5)
								}):Play()
							end)
							library.signals[1 + #library.signals] = button.MouseLeave:Connect(function()
								colored_button_BackgroundColor3[3] = "topGradient"
								colored_button_BackgroundColor3[4] = nil
								colored_button_ImageColor3[3] = "bottomGradient"
								colored_button_ImageColor3[4] = nil
								tweenService:Create(button, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
									BackgroundColor3 = library.colors.topGradient,
									ImageColor3 = library.colors.bottomGradient
								}):Play()
							end)
						end
					end
					local default = library_flags[flagName]
					function update()
						dropdownName, custom_workspace, persistiveflags, suffix, callback, loadcallback, savecallback, postload, postsave = options.Name or dropdownName, options.Workspace or library.WorkspaceName, options.Persistive or options.Flags or "all", options.Suffix, options.Callback, options.LoadCallback, options.SaveCallback, options.PostLoadCallback, options.PostSaveCallback
						local sstr = tostring(library_flags[flagName])
						if dropdownSelection.Text ~= sstr then
							dropdownSelection.Text = sstr
						end
						dropdownHeadline.Text = (dropdownName and tostring(dropdownName)) or "???"
						return sstr
					end
					local objectdata = {
						Options = options,
						Name = flagName,
						Flag = flagName,
						Type = "Persistence",
						Default = default,
						Parent = sectionFunctions,
						Instance = dropdownSelection,
						Set = Set,
						SaveFile = function(t, str, ret)
							if t ~= nil and type(t) ~= "table" then
								str, ret = t, str
							end
							if type(str) == "string" then
								str = str:match("(.+)%..+$") or str
							end
							return savestuff(str, ret)
						end,
						LoadFile = function(t, str, jsonmode)
							if t ~= nil and type(t) ~= "table" then
								str, jsonmode = t, str
							end
							if isfile and isfile(str) then
								return loadstuff(readfile(str), true)
							elseif not jsonmode and type(str) == "string" then
								str = str:match("(.+)%..+$") or str
							end
							return loadstuff(str, jsonmode)
						end,
						LoadJSON = function(_, json)
							return loadstuff(json, true)
						end,
						LoadFileRaw = function(t, str, jsonmode)
							if t ~= nil and type(t) ~= "table" then
								str, jsonmode = t, str
							end
							if isfile and isfile(str) then
								return loadstuff(readfile(str), true, true)
							elseif not jsonmode and type(str) == "string" then
								str = str:match("(.+)%..+$") or str
							end
							return loadstuff(str, jsonmode, true)
						end,
						LoadJSONRaw = function(_, json)
							return loadstuff(json, true, true)
						end,
						GetJSON = function(t, clipboard)
							if nil == clipboard and t ~= nil then
								clipboard = t
							end
							local json = savestuff(nil, true)
							local clipfunc = (clipboard and type(clipboard) == "function" and clipboard) or setclipboard
							if clipboard and clipfunc then
								clipfunc(json)
							end
							return json
						end,
						RawSet = function(t, str)
							if nil == str and t ~= nil then
								str = t
							end
							selectedOption = str
							last_v = library_flags[flagName]
							library_flags[flagName] = str
							if options.Location then
								options.Location[options.LocationFlag or flagName] = str
							end
							update()
							return str
						end,
						Get = function()
							return library_flags[flagName]
						end,
						Update = update,
						Reset = function()
							return Set(nil, default)
						end
					}
					tabFunctions.Flags[flagName], sectionFunctions.Flags[flagName], elements[flagName] = objectdata, objectdata, objectdata
					return objectdata
				end
			else
				function sectionFunctions.AddPersistence()
					if not library.warnedpersistance then
						library.warnedpersistance = 1
					--	warn(debug.traceback("Persistance not supported"))
					end
					function sectionFunctions.AddPersistence()
					end
				end
			end
			sectionFunctions.NewPersistence = sectionFunctions.AddPersistence
			sectionFunctions.CreatePersistence = sectionFunctions.AddPersistence
			sectionFunctions.Persistence = sectionFunctions.AddPersistence
			sectionFunctions.CreateSaveLoad = sectionFunctions.AddPersistence
			sectionFunctions.SaveLoad = sectionFunctions.AddPersistence
			sectionFunctions.SL = sectionFunctions.AddPersistence
			function sectionFunctions:AddDropdown(options, ...)
				options = (options and type(options) == "string" and resolvevararg("Dropdown", options, ...)) or options
				local dropdownName, listt, val, callback, flagName = assert(options.Name, "Missing Name for new searchbox."), assert(options.List, "Missing List for new searchbox."), options.Value, options.Callback, options.Flag or (function()
					library.unnameddropdown = 1 + (library.unnameddropdown or 0)
					return "Dropdown" .. tostring(library.unnameddropdown)
				end)()
				if elements[flagName] ~= nil then
				--	warn(debug.traceback("Warning! Re-used flag '" .. flagName .. "'", 3))
				end
				local newDropdown = Instance_new("Frame")
				local dropdown = Instance_new("ImageLabel")
				local dropdownInner = Instance_new("ImageLabel")
				local dropdownToggle = Instance_new("ImageButton")
				local dropdownSelection = Instance_new("TextLabel")
				local dropdownHeadline = Instance_new("TextLabel")
				local dropdownHolderFrame = Instance_new("ImageLabel")
				local dropdownHolderInner = Instance_new("ImageLabel")
				local realDropdownHolder = Instance_new("ScrollingFrame")
				local realDropdownHolderList = Instance_new("UIListLayout")
				local dropdownEnabled = false
				local multiselect = options.MultiSelect or options.Multi or options.Multiple
				local addcallback = options.ItemAdded or options.AddedCallback
				local delcallback = options.ItemRemoved or options.RemovedCallback
				local clrcallback = options.ItemsCleared or options.ClearedCallback
				local modcallback = options.ItemChanged or options.ChangedCallback
				local blankstring = not multiselect and (options.BlankValue or options.NoValueString or options.Nothing)
				local resolvelist = getresolver(listt, options.Filter, options.Method)
				local list = resolvelist()
				local selectedOption = list[1]
				local passed_multiselect = multiselect and type(multiselect)
				if blankstring and val == nil then
					val = blankstring
				end
				if val ~= nil then
					selectedOption = val
				end
				if multiselect and (not selectedOption or type(selectedOption) ~= "table") then
					selectedOption = {}
				end
				local selectedObjects = {}
				local optionCount = 0
				newDropdown.Name = "newDropdown"
				newDropdown.Parent = sectionHolder
				newDropdown.BackgroundColor3 = Color3.new(1, 1, 1)
				newDropdown.BackgroundTransparency = 1
				newDropdown.Size = UDim2.new(1, 0, 0, 42)
				dropdown.Name = "dropdown"
				dropdown.Parent = newDropdown
				dropdown.Active = true
				dropdown.BackgroundColor3 = library.colors.topGradient
				local colored_dropdown_BackgroundColor3 = {dropdown, "BackgroundColor3", "topGradient"}
				colored[1 + #colored] = colored_dropdown_BackgroundColor3
				dropdown.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {dropdown, "BorderColor3", "elementBorder"}
				dropdown.Position = UDim2.fromScale(0.027, 0.45)
				dropdown.Selectable = true
				dropdown.Size = UDim2.fromOffset(232, 22)
				dropdown.Image = "rbxassetid://2454009026"
				dropdown.ImageColor3 = library.colors.bottomGradient
				local colored_dropdown_ImageColor3 = {dropdown, "ImageColor3", "bottomGradient"}
				colored[1 + #colored] = colored_dropdown_ImageColor3
				dropdownInner.Name = "dropdownInner"
				dropdownInner.Parent = dropdown
				dropdownInner.Active = true
				dropdownInner.AnchorPoint = Vector2.new(0.5, 0.5)
				dropdownInner.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {dropdownInner, "BackgroundColor3", "topGradient"}
				dropdownInner.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {dropdownInner, "BorderColor3", "elementBorder"}
				dropdownInner.Position = UDim2.fromScale(0.5, 0.5)
				dropdownInner.Selectable = true
				dropdownInner.Size = UDim2.new(1, -4, 1, -4)
				dropdownInner.Image = "rbxassetid://2454009026"
				dropdownInner.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {dropdownInner, "ImageColor3", "bottomGradient"}
				dropdownToggle.Name = "dropdownToggle"
				dropdownToggle.Parent = dropdown
				dropdownToggle.BackgroundColor3 = Color3.new(1, 1, 1)
				dropdownToggle.BackgroundTransparency = 1
				dropdownToggle.Position = UDim2.fromScale(0.9, 0.17)
				dropdownToggle.Rotation = 90
				dropdownToggle.Size = UDim2.fromOffset(12, 12)
				dropdownToggle.ZIndex = 2
				dropdownToggle.Image = "rbxassetid://71659683"
				dropdownToggle.ImageColor3 = Color3.fromRGB(171, 171, 171)
				dropdownSelection.Name = "dropdownSelection"
				dropdownSelection.Parent = dropdown
				dropdownSelection.Active = true
				dropdownSelection.BackgroundColor3 = Color3.new(1, 1, 1)
				dropdownSelection.BackgroundTransparency = 1
				dropdownSelection.Position = UDim2.new(0.0295)
				dropdownSelection.Selectable = true
				dropdownSelection.Size = UDim2.fromScale(0.97, 1)
				dropdownSelection.ZIndex = 5
				dropdownSelection.Font = Enum.Font.Code
				dropdownSelection.Text = (passed_multiselect == "string" and multiselect) or (multiselect and tostring(blankstring or "Select Item(s)")) or (selectedOption and tostring(selectedOption)) or tostring(blankstring or "No Blank String")
				dropdownSelection.TextColor3 = library.colors.otherElementText
				colored[1 + #colored] = {dropdownSelection, "TextColor3", "otherElementText"}
				dropdownSelection.TextSize = 14
				dropdownSelection.TextXAlignment = Enum.TextXAlignment.Left
				dropdownHeadline.Name = "dropdownHeadline"
				dropdownHeadline.Parent = newDropdown
				dropdownHeadline.BackgroundColor3 = Color3.new(1, 1, 1)
				dropdownHeadline.BackgroundTransparency = 1
				dropdownHeadline.Position = UDim2.fromScale(0.034, 0.03)
				dropdownHeadline.Size = UDim2.fromOffset(167, 11)
				dropdownHeadline.Font = Enum.Font.Code
				dropdownHeadline.Text = (dropdownName and tostring(dropdownName)) or "???"
				dropdownHeadline.TextColor3 = library.colors.elementText
				colored[1 + #colored] = {dropdownHeadline, "TextColor3", "elementText"}
				dropdownHeadline.TextSize = 14
				dropdownHeadline.TextXAlignment = Enum.TextXAlignment.Left
				dropdownHolderFrame.Name = "dropdownHolderFrame"
				dropdownHolderFrame.Parent = newDropdown
				dropdownHolderFrame.Active = true
				dropdownHolderFrame.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {dropdownHolderFrame, "BackgroundColor3", "topGradient"}
				dropdownHolderFrame.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {dropdownHolderFrame, "BorderColor3", "elementBorder"}
				dropdownHolderFrame.Position = UDim2.fromScale(0.025, 1.012)
				dropdownHolderFrame.Selectable = true
				dropdownHolderFrame.Size = UDim2.fromOffset(232, 22)
				dropdownHolderFrame.Visible = false
				dropdownHolderFrame.Image = "rbxassetid://2454009026"
				dropdownHolderFrame.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {dropdownHolderFrame, "ImageColor3", "bottomGradient"}
				dropdownHolderInner.Name = "dropdownHolderInner"
				dropdownHolderInner.Parent = dropdownHolderFrame
				dropdownHolderInner.Active = true
				dropdownHolderInner.AnchorPoint = Vector2.new(0.5, 0.5)
				dropdownHolderInner.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {dropdownHolderInner, "BackgroundColor3", "topGradient"}
				dropdownHolderInner.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {dropdownHolderInner, "BorderColor3", "elementBorder"}
				dropdownHolderInner.Position = UDim2.fromScale(0.5, 0.5)
				dropdownHolderInner.Selectable = true
				dropdownHolderInner.Size = UDim2.new(1, -4, 1, -4)
				dropdownHolderInner.Image = "rbxassetid://2454009026"
				dropdownHolderInner.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {dropdownHolderInner, "ImageColor3", "bottomGradient"}
				realDropdownHolder.Name = "realDropdownHolder"
				realDropdownHolder.Parent = dropdownHolderInner
				realDropdownHolder.BackgroundColor3 = Color3.new(1, 1, 1)
				realDropdownHolder.BackgroundTransparency = 1
				realDropdownHolder.Selectable = false
				realDropdownHolder.Size = UDim2.fromScale(1, 1)
				realDropdownHolder.CanvasSize = UDim2.new()
				realDropdownHolder.ScrollBarThickness = 5
				realDropdownHolder.ScrollingDirection = Enum.ScrollingDirection.Y
				realDropdownHolder.AutomaticCanvasSize = Enum.AutomaticSize.Y
				realDropdownHolder.ScrollBarImageTransparency = 0.5
				realDropdownHolder.ScrollBarImageColor3 = library.colors.section
				colored[1 + #colored] = {realDropdownHolder, "ScrollBarImageColor3", "section"}
				realDropdownHolderList.Name = "realDropdownHolderList"
				realDropdownHolderList.Parent = realDropdownHolder
				realDropdownHolderList.HorizontalAlignment = Enum.HorizontalAlignment.Center
				realDropdownHolderList.SortOrder = Enum.SortOrder.LayoutOrder
				sectionFunctions:Update()
				local showing = false
				local function UpdateDropdownHolder()
					if optionCount >= 6 then
						realDropdownHolder.CanvasSize = UDim2:fromOffset(realDropdownHolderList.AbsoluteContentSize.Y + 2)
					elseif optionCount <= 5 then
						dropdownHolderFrame.Size = UDim2.fromOffset(232, realDropdownHolderList.AbsoluteContentSize.Y + 4)
					end
				end
				local restorezindex = {}
				local Set = (multiselect and function(t, dat)
					if nil == dat and t ~= nil then
						dat = t
					end
					local lastv = library_flags[flagName]
					if not lastv or selectedOption ~= lastv then
						if lastv and type(lastv) == "table" then
							selectedOption = library_flags[flagName]
						else
							library_flags[flagName] = selectedOption
						end
					--	warn("Attempting to use new table for", flagName, " Please use :Set(), as setting through flags table may cause errors", debug.traceback(""))
						lastv = library_flags[flagName]
					end
					local cloned = {unpack(selectedOption)}
					if not dat then
						if #selectedOption ~= 0 then
							table.clear(selectedOption)
							if callback then
								task.spawn(callback, selectedOption, cloned)
							end
						end
						return selectedOption
					elseif type(dat) ~= "table" then
					--	warn("Expected table for argument #1 on Set for MultiSelect dropdown. Got", dat, debug.traceback(""))
						return selectedOption
					end
					for k = table.pack(unpack(dat)).n, 1, -1 do
						if dat[k] == nil then
							table.remove(dat, k)
						end
					end
					local proceed = #cloned ~= #dat
					table.clear(selectedOption)
					for k, v in next, dat do
						selectedOption[k] = v
						if not proceed and cloned[k] ~= v then
							proceed = 1
						end
					end
					dropdownSelection.Text = (passed_multiselect == "string" and multiselect) or tostring(blankstring or "Select Item(s)")
					if proceed and callback then
						task.spawn(callback, selectedOption, cloned)
					end
					return selectedOption
				end) or function(t, str)
					if nil == str and t ~= nil then
						str = t
					end
					local last_v = library_flags[flagName]
					selectedOption = str
					library_flags[flagName] = str
					if options.Location then
						options.Location[options.LocationFlag or flagName] = str
					end
					local sstr = (selectedOption and tostring(selectedOption)) or blankstring or "No Blank String"
					if dropdownSelection.Text ~= sstr then
						dropdownSelection.Text = sstr
					end
					if callback and (last_v ~= str or options.AllowDuplicateCalls) then
						task.spawn(callback, str, last_v)
					end
					return str
				end
				if val ~= nil then
					Set(val)
				else
					library_flags[flagName] = selectedOption
					if options.Location then
						options.Location[options.LocationFlag or flagName] = selectedOption
					end
				end
				local function AddOptions(optionsTable)
					if options.Sort then
						local didstuff, dosort = nil, options.Sort
						if type(dosort) == "function" then
							local g, h = pcall(table.sort, optionsTable, dosort)
							if g then
								didstuff = true
							elseif h then
							--	warn("Error sorting list:", h, debug.traceback(""))
							end
						elseif dosort ~= 1 and dosort ~= true then
						--	warn("Potential mistake for passed Sort argument:", dosort, debug.traceback(""))
						end
						if not didstuff then
							table.sort(optionsTable, library.defaultSort)
						end
					end
					if blankstring and (optionsTable[1] ~= blankstring or table.find(optionsTable, blankstring, 2)) then
						local exists = table.find(optionsTable, blankstring)
						if exists then
							for _ = 1, 35 do
								table.remove(optionsTable, exists)
								exists = table.find(optionsTable, blankstring)
								if not exists then
									break
								end
							end
						end
						table.insert(optionsTable, 1, blankstring)
					end
					optionCount = 0
					realDropdownHolderList.Parent = nil
					realDropdownHolder:ClearAllChildren()
					realDropdownHolderList.Parent = realDropdownHolder
					for _, v in next, optionsTable do
						optionCount = optionCount + 1
						local newOption = Instance_new("ImageLabel")
						local optionButton = Instance_new("TextButton")
						if selectedOption == v then
							selectedObjects[1] = newOption
							selectedObjects[2] = optionButton
						end
						newOption.Name = "Frame"
						newOption.Parent = realDropdownHolder
						local togged = (not multiselect and selectedOption == v) or (multiselect and table.find(selectedOption, v))
						newOption.BackgroundColor3 = (togged and library.colors.selectedOption) or library.colors.topGradient
						newOption.BorderSizePixel = 0
						newOption.Size = UDim2.fromOffset(232, 18)
						newOption.Image = "rbxassetid://2454009026"
						newOption.ImageColor3 = (togged and library.colors.unselectedOption) or library.colors.bottomGradient
						local stringed = tostring(v)
						optionButton.Name = stringed
						optionButton.Parent = newOption
						optionButton.AnchorPoint = Vector2.new(0.5, 0.5)
						optionButton.BackgroundColor3 = Color3.new(1, 1, 1)
						optionButton.BackgroundTransparency = 1
						optionButton.Position = UDim2.fromScale(0.5, 0.5)
						optionButton.Size = UDim2.new(1, -10, 1)
						optionButton.ZIndex = 5
						optionButton.Font = Enum.Font.Code
						optionButton.Text = (togged and (" " .. stringed)) or stringed
						optionButton.TextColor3 = (togged and library.colors.main) or library.colors.otherElementText
						optionButton.TextSize = 14
						optionButton.TextXAlignment = Enum.TextXAlignment.Left
						library.signals[1 + #library.signals] = optionButton.MouseButton1Click:Connect(function()
							if not library.colorpicker then
								restorezindex[newSection] = restorezindex[newSection] or newSection.ZIndex
								restorezindex[newDropdown] = restorezindex[newDropdown] or newDropdown.ZIndex
								restorezindex[sectionHolder] = restorezindex[sectionHolder] or sectionHolder.ZIndex
								if multiselect then
									local cloned = {unpack(selectedOption)}
									local togged = table.find(selectedOption, v)
									if togged then
										table.remove(selectedOption, togged)
									else
										selectedOption[1 + #selectedOption] = v
									end
									togged = table.find(selectedOption, v)
									optionButton.Text = (togged and (" " .. stringed)) or stringed
									newOption.BackgroundColor3 = (togged and library.colors.selectedOption) or library.colors.topGradient
									newOption.ImageColor3 = (togged and library.colors.unselectedOption) or library.colors.bottomGradient
									optionButton.TextColor3 = (togged and library.colors.main) or library.colors.otherElementText
									dropdownSelection.Text = (passed_multiselect == "string" and multiselect) or tostring(blankstring or "Select Item(s)")
									if callback then
										task.spawn(callback, selectedOption, cloned)
									end
									if togged then
										if addcallback then
											task.spawn(addcallback, v, selectedOption)
										end
									elseif delcallback then
										task.spawn(delcallback, v, selectedOption)
									end
									if modcallback then
										task.spawn(modcallback, v, togged, selectedOption)
									end
									if #selectedOption == 0 and clrcallback then
										task.spawn(clrcallback, selectedOption, cloned)
									end
									return
								else
									if selectedOption ~= v then
										local last_v = library_flags[flagName]
										selectedObjects[1].BackgroundColor3 = library.colors.topGradient
										selectedObjects[1].ImageColor3 = library.colors.bottomGradient
										selectedObjects[2].Text = selectedObjects[2].Name
										selectedObjects[2].TextColor3 = library.colors.otherElementText
										selectedOption = v
										dropdownSelection.Text = stringed
										selectedObjects[1] = newOption
										selectedObjects[2] = optionButton
										newOption.BackgroundColor3 = library.colors.selectedOption
										newOption.ImageColor3 = library.colors.unselectedOption
										optionButton.Text = " " .. stringed
										optionButton.TextColor3 = library.colors.main
										dropdownHolderFrame.Visible = false
										dropdownToggle.Rotation = 90
										dropdownEnabled = false
										newDropdown.ZIndex = 1
										colored_dropdown_BackgroundColor3[3] = "topGradient"
										colored_dropdown_BackgroundColor3[4] = nil
										colored_dropdown_ImageColor3[3] = "bottomGradient"
										colored_dropdown_ImageColor3[4] = nil
										tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
											BackgroundColor3 = library.colors.topGradient,
											ImageColor3 = library.colors.bottomGradient
										}):Play()
										library_flags[flagName] = selectedOption
										if options.Location then
											options.Location[options.LocationFlag or flagName] = selectedOption
										end
										submenuOpen = nil
										showing = false
										if callback then
											task.spawn(callback, selectedOption, last_v)
										end
									else
										showing = false
										submenuOpen = nil
										dropdownToggle.Rotation = 90
										newDropdown.ZIndex = 1
										sectionHolder.ZIndex = 1
										colored_dropdown_BackgroundColor3[3] = "topGradient"
										colored_dropdown_BackgroundColor3[4] = nil
										colored_dropdown_ImageColor3[3] = "bottomGradient"
										colored_dropdown_ImageColor3[4] = nil
										tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
											BackgroundColor3 = library.colors.topGradient,
											ImageColor3 = library.colors.bottomGradient
										}):Play()
										dropdownHolderFrame.Visible = false
									end
								end
								for ins, z in next, restorezindex do
									ins.ZIndex = z
								end
							end
						end)
						library.signals[1 + #library.signals] = optionButton.MouseEnter:Connect(function()
							tweenService:Create(newOption, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
								BackgroundColor3 = library.colors.hoveredOptionTop,
								ImageColor3 = library.colors.hoveredOptionBottom
							}):Play()
						end)
						library.signals[1 + #library.signals] = optionButton.MouseLeave:Connect(function()
							local togged = (not multiselect and selectedOption == v) or (multiselect and table.find(selectedOption, v))
							tweenService:Create(newOption, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
								BackgroundColor3 = (togged and library.colors.selectedOption) or library.colors.topGradient,
								ImageColor3 = (togged and library.colors.unselectedOption) or library.colors.bottomGradient
							}):Play()
						end)
						UpdateDropdownHolder()
					end
				end
				local precisionscrolling, update = nil
				local function display(dropdownEnabled)
					list = resolvelist()
					if dropdownEnabled then
						AddOptions(list)
						submenuOpen = dropdown
						dropdownToggle.Rotation = 270
						restorezindex[newSection] = restorezindex[newSection] or newSection.ZIndex
						restorezindex[newDropdown] = restorezindex[newDropdown] or newDropdown.ZIndex
						restorezindex[sectionHolder] = restorezindex[sectionHolder] or sectionHolder.ZIndex
						newSection.ZIndex = 50 + newSection.ZIndex
						newDropdown.ZIndex = 2
						sectionHolder.ZIndex = 2
						colored_dropdown_BackgroundColor3[3] = "main"
						colored_dropdown_BackgroundColor3[4] = 1.5
						colored_dropdown_ImageColor3[3] = "main"
						colored_dropdown_ImageColor3[4] = 2.5
						tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = darkenColor(library.colors.main, 1.5),
							ImageColor3 = darkenColor(library.colors.main, 2.5)
						}):Play()
						dropdownHolderFrame.Visible = true
						if not options.DisablePrecisionScrolling then
							local upkey = options.ScrollUpButton or library.scrollupbutton or shared.scrollupbutton or Enum.KeyCode.Up
							local downkey = options.ScrollDownButton or library.scrolldownbutton or shared.scrolldownbutton or Enum.KeyCode.Down
							precisionscrolling = (precisionscrolling and precisionscrolling:Disconnect() and nil) or userInputService.InputBegan:Connect(function(input)
								if input.UserInputType == Enum.UserInputType.Keyboard then
									local code = input.KeyCode
									local isup = code == upkey
									local isdown = code == downkey
									if isup or isdown then
										local txt = userInputService:GetFocusedTextBox()
										if not txt or txt == dropdownSelection then
											while wait_check() and userInputService:IsKeyDown(code) do
												realDropdownHolder.CanvasPosition = Vector2:new(math.clamp(realDropdownHolder.CanvasPosition.Y + ((isup and -5) or 5), 0, realDropdownHolder.AbsoluteCanvasSize.Y))
											end
										end
									end
								end
							end)
							library.signals[1 + #library.signals] = precisionscrolling
						end
					else
						submenuOpen = nil
						dropdownToggle.Rotation = 90
						colored_dropdown_BackgroundColor3[3] = "topGradient"
						colored_dropdown_BackgroundColor3[4] = nil
						colored_dropdown_ImageColor3[3] = "bottomGradient"
						colored_dropdown_ImageColor3[4] = nil
						tweenService:Create(dropdown, TweenInfo.new(0.35, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = library.colors.topGradient,
							ImageColor3 = library.colors.bottomGradient
						}):Play()
						dropdownHolderFrame.Visible = false
						for ins, z in next, restorezindex do
							ins.ZIndex = z
						end
						precisionscrolling = (precisionscrolling and precisionscrolling:Disconnect() and nil) or nil
					end
					if not multiselect and (not next(list) or not table.find(list, library_flags[flagName])) then
						Set(list[1])
					end
					showing = dropdownEnabled
					if showing or dropdownEnabled then
					else
						delay(0.01, update)
					end
				end
				library.signals[1 + #library.signals] = newDropdown.InputEnded:Connect(function(input)
					if not library.colorpicker and input.UserInputType == Enum.UserInputType.MouseButton1 then
						showing = not showing
						display(showing)
					end
				end)
				library.signals[1 + #library.signals] = newDropdown.MouseEnter:Connect(function()
					colored_dropdown_BackgroundColor3[3] = "main"
					colored_dropdown_BackgroundColor3[4] = 1.5
					colored_dropdown_ImageColor3[3] = "main"
					colored_dropdown_ImageColor3[4] = 2.5
					tweenService:Create(dropdown, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
						BackgroundColor3 = darkenColor(library.colors.main, 1.5),
						ImageColor3 = darkenColor(library.colors.main, 2.5)
					}):Play()
				end)
				library.signals[1 + #library.signals] = newDropdown.MouseLeave:Connect(function()
					if not dropdownEnabled then
						colored_dropdown_BackgroundColor3[3] = "topGradient"
						colored_dropdown_BackgroundColor3[4] = nil
						colored_dropdown_ImageColor3[3] = "bottomGradient"
						colored_dropdown_ImageColor3[4] = nil
						tweenService:Create(dropdown, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = library.colors.topGradient,
							ImageColor3 = library.colors.bottomGradient
						}):Play()
					end
				end)
				library.signals[1 + #library.signals] = dropdownToggle.MouseButton1Click:Connect(function()
					if not library.colorpicker then
						showing = not showing
						display(showing)
					end
				end)
				AddOptions(list)
				local default = library_flags[flagName]
				function update()
					dropdownName, callback = options.Name or dropdownName, options.Callback
					local sstr = (passed_multiselect == "string" and multiselect) or (library_flags[flagName] and tostring(library_flags[flagName])) or (selectedOption and tostring(selectedOption)) or blankstring or "nil"
					if dropdownSelection.Text ~= sstr then
						dropdownSelection.Text = sstr
					end
					dropdownHeadline.Text = (dropdownName and tostring(dropdownName)) or "???"
					return sstr
				end
				local function validate(fallbackValue)
					if list and table.find(list, library_flags[flagName]) then
						update()
						return true
					end
					if fallbackValue ~= nil then
						if fallbackValue == "__DEFAULT" then
							fallbackValue = fallbackValue
						end
					else
						fallbackValue = list[1]
					end
					return Set((multiselect and {fallbackValue}) or fallbackValue)
				end
				local objectdata = {
					Options = options,
					Name = flagName,
					Flag = flagName,
					Type = "Dropdown",
					Default = default,
					Parent = sectionFunctions,
					Instance = dropdownSelection,
					Get = function()
						return library_flags[flagName]
					end,
					Set = Set,
					RawSet = ((multiselect and function(t, dat)
						if nil == dat and t ~= nil then
							dat = t
						end
						local lastv = library_flags[flagName]
						if not lastv or selectedOption ~= lastv then
							if lastv and type(lastv) == "table" then
								selectedOption = library_flags[flagName]
							else
								library_flags[flagName] = selectedOption
							end
						--	warn("Attempting to use new table for", flagName, " Please use :Set(), as setting through flags table may cause errors", debug.traceback(""))
							lastv = library_flags[flagName]
						end
						local cloned = {unpack(selectedOption)}
						if not dat then
							if #selectedOption ~= 0 then
								table.clear(selectedOption)
							end
							return selectedOption
						elseif type(dat) ~= "table" then
					--		warn("Expected table for argument #1 on Set for MultiSelect dropdown. Got", dat, debug.traceback(""))
							return selectedOption
						end
						for k = table.pack(unpack(dat)).n, 1, -1 do
							if dat[k] == nil then
								table.remove(dat, k)
							end
						end
						table.clear(selectedOption)
						for k, v in next, dat do
							selectedOption[k] = v
						end
						return selectedOption
					end) or function(t, str)
						if nil == str and t ~= nil then
							str = t
						end
						selectedOption = str
						library_flags[flagName] = str
						if options.Location then
							options.Location[options.LocationFlag or flagName] = str
						end
						update()
						return str
					end),
					Update = update,
					Reset = function()
						return Set(nil, default)
					end
				}
				function objectdata.UpdateList(t, listt, updateValues)
					if (nil == listt and t ~= nil) or (type(t) == "table" and type(listt) ~= "table") then
						listt, updateValues = t, listt
					end
					if listt == objectdata then
						listt = nil
					end
					resolvelist = getresolver(listt or options.List, options.Filter, options.Method)
					list = resolvelist()
					if updateValues then
						validate()
					end
					if showing then
						display(false)
						display(true)
					end
					return list
				end
				tabFunctions.Flags[flagName], sectionFunctions.Flags[flagName], elements[flagName] = objectdata, objectdata, objectdata
				return objectdata
			end
			sectionFunctions.AddDropDown = sectionFunctions.AddDropdown
			sectionFunctions.NewDropDown = sectionFunctions.AddDropdown
			sectionFunctions.NewDropdown = sectionFunctions.AddDropdown
			sectionFunctions.CreateDropdown = sectionFunctions.AddDropdown
			sectionFunctions.CreateDropdown = sectionFunctions.AddDropdown
			sectionFunctions.DropDown = sectionFunctions.AddDropdown
			sectionFunctions.Dropdown = sectionFunctions.AddDropdown
			sectionFunctions.DD = sectionFunctions.AddDropdown
			sectionFunctions.Dd = sectionFunctions.AddDropdown
			function sectionFunctions:AddColorpicker(options, ...)
				options = (options and type(options) == "string" and resolvevararg("Colorpicker", options, ...)) or options
				if options.Random == true then
					options.Value = "random"
				elseif options.Rainbow == true then
					options.Value = "rainbow"
				end
				local colorPickerName, presetColor, callback, flagName = assert(options.Name, "Missing Name for new colorpicker."), options.Value, options.Callback, options.Flag or (function()
					library.unnamedcolorpicker = 1 + (library.unnamedcolorpicker or 0)
					return "Colorpicker" .. tostring(library.unnamedcolorpicker)
				end)()
				if elements[flagName] ~= nil then
				--	warn(debug.traceback("Warning! Re-used flag '" .. flagName .. "'", 3))
				end
				local designers = options.__designer
				options.__designer = nil
				local rainbowColorMode = false
				if presetColor == "random" then
					presetColor = Color3.new(math.random(), math.random(), math.random())
				elseif presetColor == "rainbow" then
					presetColor = Color3.new(1, 1, 1)
					rainbowColorMode = true
				end
				local newColorPicker = Instance_new("Frame")
				local colorPicker = Instance_new("ImageLabel")
				local colorPickerInner = Instance_new("ImageLabel")
				local colorPickerHeadline = Instance_new("TextLabel")
				local colorPickerButton = Instance_new("TextButton")
				local colorPickerHolderFrame = Instance_new("ImageLabel")
				local colorPickerHolderInner = Instance_new("ImageLabel")
				local color = Instance_new("ImageLabel")
				local selectorColor = Instance_new("Frame")
				local hue = Instance_new("ImageLabel")
				local hueGradient = Instance_new("UIGradient")
				local selectorHue = Instance_new("Frame")
				local randomColor = Instance_new("ImageLabel")
				local randomColorInner = Instance_new("ImageLabel")
				local randomColorButton = Instance_new("ImageButton")
				local hexInputBox = Instance_new("TextBox")
				local hexInput = Instance_new("ImageLabel")
				local hexInputInner = Instance_new("ImageLabel")
				local rainbow = Instance_new("ImageLabel")
				local rainbowInner = Instance_new("ImageLabel")
				local rainbowButton = Instance_new("ImageButton")
				local startingColor = presetColor or Color3.new(1, 1, 1)
				local colorPickerEnabled = false
				local colorH, colorS, colorV = 1, 1, 1
				local colorInput, hueInput = nil, nil
				local oldBackgroundColor = Color3.new()
				local oldImageColor = oldBackgroundColor
				local oldColor = oldBackgroundColor
				local rainbowColorValue = 0
				newColorPicker.Name = "newColorPicker"
				newColorPicker.Parent = sectionHolder
				newColorPicker.BackgroundColor3 = Color3.new(1, 1, 1)
				newColorPicker.BackgroundTransparency = 1
				newColorPicker.Size = UDim2.new(1, 0, 0, 19)
				colorPicker.Name = "colorPicker"
				colorPicker.Parent = newColorPicker
				colorPicker.Active = true
				colorPicker.BackgroundColor3 = library.colors.topGradient
				local colored_colorPicker_BackgroundColor3 = {colorPicker, "BackgroundColor3", "topGradient"}
				colored[1 + #colored] = colored_colorPicker_BackgroundColor3
				colorPicker.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {colorPicker, "BorderColor3", "elementBorder"}
				colorPicker.Position = UDim2.fromScale(0.842, 0.113)
				colorPicker.Selectable = true
				colorPicker.Size = UDim2.fromOffset(24, 12)
				colorPicker.Image = "rbxassetid://2454009026"
				colorPicker.ImageColor3 = library.colors.bottomGradient
				local colored_colorPicker_ImageColor3 = {colorPicker, "ImageColor3", "bottomGradient"}
				colored[1 + #colored] = colored_colorPicker_ImageColor3
				colorPickerInner.Name = "colorPickerInner"
				colorPickerInner.Parent = colorPicker
				colorPickerInner.Active = true
				colorPickerInner.AnchorPoint = Vector2.new(0.5, 0.5)
				colorPickerInner.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {colorPickerInner, "BorderColor3", "elementBorder"}
				colorPickerInner.Position = UDim2.fromScale(0.5, 0.5)
				colorPickerInner.Selectable = true
				colorPickerInner.Size = UDim2.new(1, -4, 1, -4)
				colorPickerInner.Image = "rbxassetid://2454009026"
				colorPickerInner.BackgroundColor3 = darkenColor(startingColor, 1.5)
				colorPickerInner.ImageColor3 = darkenColor(startingColor, 2.5)
				colorPickerHeadline.Name = "colorPickerHeadline"
				colorPickerHeadline.Parent = newColorPicker
				colorPickerHeadline.BackgroundColor3 = Color3.new(1, 1, 1)
				colorPickerHeadline.BackgroundTransparency = 1
				colorPickerHeadline.Position = UDim2.fromScale(0.034, 0.113)
				colorPickerHeadline.Size = UDim2.fromOffset(173, 11)
				colorPickerHeadline.Font = Enum.Font.Code
				colorPickerHeadline.Text = colorPickerName or "???"
				colorPickerHeadline.TextColor3 = library.colors.elementText
				colored[1 + #colored] = {colorPickerHeadline, "TextColor3", "elementText"}
				colorPickerHeadline.TextSize = 14
				colorPickerHeadline.TextXAlignment = Enum.TextXAlignment.Left
				colorPickerButton.Name = "colorPickerButton"
				colorPickerButton.Parent = newColorPicker
				colorPickerButton.BackgroundColor3 = Color3.new(1, 1, 1)
				colorPickerButton.BackgroundTransparency = 1
				colorPickerButton.Size = UDim2.fromScale(1, 1)
				colorPickerButton.ZIndex = 5
				colorPickerButton.Font = Enum.Font.SourceSans
				colorPickerButton.Text = ""
				colorPickerButton.TextColor3 = Color3.new()
				colorPickerButton.TextSize = 14
				colorPickerButton.TextTransparency = 1
				colorPickerButton.BorderColor3 = library.colors.elementBorder
				local colored_colorPickerButton_BorderColor3 = {colorPickerButton, "BorderColor3", "elementBorder"}
				colored[1 + #colored] = colored_colorPickerButton_BorderColor3
				local function UpdateColorPicker(force, rainbsow)
					local last_vv = library_flags[flagName]
					local newColor = force or Color3.fromHSV(colorH, colorS, colorV)
					if not force then
						colorH, colorS, colorV = newColor:ToHSV()
					end
					colorPickerInner.BackgroundColor3 = darkenColor(newColor, 1.5)
					colorPickerInner.ImageColor3 = darkenColor(newColor, 2.5)
					color.BackgroundColor3 = Color3.fromHSV(colorH, 1, 1)
					library_flags[flagName] = newColor
					if options.Location then
						options.Location[options.LocationFlag or flagName] = newColor
					end
					hexInputBox.Text = Color3ToHex(newColor)
					if force then
						color.BackgroundColor3 = force
						selectorColor.Position = UDim2.new(force and select(3, Color3.toHSV(force)))
					end
					local pos = 1 - (Color3.toHSV(newColor))
					local scalex = selectorHue.Position.X.Scale
					if scalex ~= pos and not ((pos == 0 or pos == 1) and (scalex == 1 or scalex == 0)) then
						selectorHue.Position = UDim2.new(pos)
					end
					if callback and last_vv ~= newColor then
						task.spawn(callback, newColor, last_vv, rainbsow)
					end
				end
				library.signals[1 + #library.signals] = colorPickerButton.MouseButton1Click:Connect(function()
					if submenuOpen == colorPicker or submenuOpen == nil then
						colorPickerEnabled = not colorPickerEnabled
						library.colorpicker = colorPickerEnabled
						colorPickerHolderFrame.Visible = colorPickerEnabled
						if colorPickerEnabled then
							for _, v in next, colorpickerconflicts do
								v.Visible = false
							end
							submenuOpen = colorPicker
							newColorPicker.ZIndex = 2
							newSection.ZIndex = 100 + newSection.ZIndex
							colorPickerButton.BorderColor3 = library.colors.main
							colored_colorPickerButton_BorderColor3[3] = "main"
							UpdateColorPicker()
						else
							for _, v in next, colorpickerconflicts do
								v.Visible = true
							end
							submenuOpen = nil
							newColorPicker.ZIndex = 0
							newSection.ZIndex = newSection.ZIndex - 100
							colorPickerButton.BorderColor3 = library.colors.elementBorder
							colored_colorPickerButton_BorderColor3[3] = "elementBorder"
						end
					end
				end)
				colorPickerHolderFrame.Name = "colorPickerHolderFrame"
				colorPickerHolderFrame.Parent = newColorPicker
				colorPickerHolderFrame.Active = true
				colorPickerHolderFrame.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {colorPickerHolderFrame, "BackgroundColor3", "topGradient"}
				colorPickerHolderFrame.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {colorPickerHolderFrame, "BorderColor3", "elementBorder"}
				colorPickerHolderFrame.Selectable = true
				colorPickerHolderFrame.Position = UDim2.fromScale(0.025, 1.012)
				colorPickerHolderFrame.Size = UDim2.fromOffset(206, 250)
				if math.ceil(colorPickerHolderFrame.AbsolutePosition.Y + colorPickerHolderFrame.AbsoluteSize.Y) > floor(newTabHolder.AbsoluteSize.Y + newTabHolder.AbsolutePosition.Y) then
					colorPickerHolderFrame.Position = UDim2.new(0.025, 0, 1.012, -colorPickerHolderFrame.AbsoluteSize.Y - colorPickerButton.AbsoluteSize.Y - 2)
				end
				colorPickerHolderFrame.Visible = false
				colorPickerHolderFrame.Image = "rbxassetid://2454009026"
				colorPickerHolderFrame.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {colorPickerHolderFrame, "ImageColor3", "bottomGradient"}
				colorPickerHolderInner.Name = "colorPickerHolderInner"
				colorPickerHolderInner.Parent = colorPickerHolderFrame
				colorPickerHolderInner.Active = true
				colorPickerHolderInner.AnchorPoint = Vector2.new(0.5, 0.5)
				colorPickerHolderInner.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {colorPickerHolderInner, "BackgroundColor3", "topGradient"}
				colorPickerHolderInner.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {colorPickerHolderInner, "BorderColor3", "elementBorder"}
				colorPickerHolderInner.Position = UDim2.fromScale(0.5, 0.5)
				colorPickerHolderInner.Selectable = true
				colorPickerHolderInner.Size = UDim2.new(1, -4, 1, -4)
				colorPickerHolderInner.Image = "rbxassetid://2454009026"
				colorPickerHolderInner.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {colorPickerHolderInner, "ImageColor3", "bottomGradient"}
				color.Name = "color"
				color.Parent = colorPickerHolderInner
				color.BackgroundColor3 = startingColor
				color.BorderSizePixel = 0
				color.Position = UDim2.fromOffset(5, 5)
				color.Size = UDim2.new(1, -10, 0, 192)
				color.Image = "rbxassetid://4155801252"
				selectorColor.Name = "selectorColor"
				selectorColor.Parent = color
				selectorColor.AnchorPoint = Vector2.new(0.5, 0.5)
				selectorColor.BackgroundColor3 = Color3.fromRGB(144, 144, 144)
				selectorColor.BorderColor3 = Color3.fromRGB(69, 65, 70)
				selectorColor.Position = UDim2.new(startingColor and select(3, Color3.toHSV(startingColor)))
				selectorColor.Size = UDim2.fromOffset(4, 4)
				hue.Name = "hue"
				hue.Parent = colorPickerHolderInner
				hue.BackgroundColor3 = Color3.new(1, 1, 1)
				hue.BorderSizePixel = 0
				hue.Position = UDim2.fromOffset(5, 202)
				hue.Size = UDim2.new(1, -10, 0, 14)
				hue.Image = "rbxassetid://3570695787"
				hue.ScaleType = Enum.ScaleType.Slice
				hue.SliceScale = 0.01
				hueGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 4)), ColorSequenceKeypoint.new(0.17, Color3.fromRGB(235, 7, 255)), ColorSequenceKeypoint.new(0.33, Color3:fromRGB(9, 189)), ColorSequenceKeypoint.new(0.5, Color3:fromRGB(193, 196)), ColorSequenceKeypoint.new(0.66, Color3:new(1)), ColorSequenceKeypoint.new(0.84, Color3.fromRGB(255, 247)), ColorSequenceKeypoint.new(1, Color3.new(1))})
				hueGradient.Name = "hueGradient"
				hueGradient.Parent = hue
				selectorHue.Name = "selectorHue"
				selectorHue.Parent = hue
				selectorHue.BackgroundColor3 = Color3:fromRGB(125, 255)
				selectorHue.BackgroundTransparency = 0.2
				selectorHue.BorderColor3 = Color3:fromRGB(84, 91)
				selectorHue.Position = UDim2.new(1 - (Color3.toHSV(startingColor)))
				selectorHue.Size = UDim2:new(2, 1)
				hexInput.Name = "hexInput"
				hexInput.Parent = colorPickerHolderInner
				hexInput.Active = true
				hexInput.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {hexInput, "BackgroundColor3", "topGradient"}
				hexInput.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {hexInput, "BorderColor3", "elementBorder"}
				hexInput.Position = UDim2.fromOffset(5, 223)
				hexInput.Selectable = true
				hexInput.Size = UDim2.fromOffset(150, 18)
				hexInput.Image = "rbxassetid://2454009026"
				hexInput.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {hexInput, "ImageColor3", "bottomGradient"}
				hexInputInner.Name = "hexInputInner"
				hexInputInner.Parent = hexInput
				hexInputInner.Active = true
				hexInputInner.AnchorPoint = Vector2.new(0.5, 0.5)
				hexInputInner.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {hexInputInner, "BackgroundColor3", "topGradient"}
				hexInputInner.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {hexInputInner, "BorderColor3", "elementBorder"}
				hexInputInner.Position = UDim2.fromScale(0.5, 0.5)
				hexInputInner.Selectable = true
				hexInputInner.Size = UDim2.new(1, -4, 1, -4)
				hexInputInner.Image = "rbxassetid://2454009026"
				hexInputInner.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {hexInputInner, "ImageColor3", "bottomGradient"}
				hexInputBox.Name = "hexInputBox"
				hexInputBox.Parent = hexInput
				hexInputBox.BackgroundColor3 = Color3.new(1, 1, 1)
				hexInputBox.BackgroundTransparency = 1
				hexInputBox.Size = UDim2.fromScale(1, 1)
				hexInputBox.ZIndex = 5
				hexInputBox.Font = Enum.Font.Code
				hexInputBox.PlaceholderText = "Hex Input"
				hexInputBox.Text = Color3ToHex(startingColor)
				hexInputBox.TextColor3 = library.colors.elementText
				colored[1 + #colored] = {hexInputBox, "TextColor3", "elementText"}
				hexInputBox.TextSize = 14
				hexInputBox.ClearTextOnFocus = false
				randomColor.Name = "randomColor"
				randomColor.Parent = colorPickerHolderInner
				randomColor.Active = true
				randomColor.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {randomColor, "BackgroundColor3", "topGradient"}
				randomColor.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {randomColor, "BorderColor3", "elementBorder"}
				randomColor.Position = UDim2.fromOffset(158, 223)
				randomColor.Selectable = true
				randomColor.Size = UDim2.fromOffset(18, 18)
				randomColor.Image = "rbxassetid://2454009026"
				randomColor.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {randomColor, "ImageColor3", "bottomGradient"}
				randomColorInner.Name = "randomColorInner"
				randomColorInner.Parent = randomColor
				randomColorInner.Active = true
				randomColorInner.AnchorPoint = Vector2.new(0.5, 0.5)
				randomColorInner.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {randomColorInner, "BackgroundColor3", "topGradient"}
				randomColorInner.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {randomColorInner, "BorderColor3", "elementBorder"}
				randomColorInner.Position = UDim2.fromScale(0.5, 0.5)
				randomColorInner.Selectable = true
				randomColorInner.Size = UDim2.new(1, -4, 1, -4)
				randomColorInner.Image = "rbxassetid://2454009026"
				randomColorInner.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {randomColorInner, "ImageColor3", "bottomGradient"}
				randomColorButton.Name = "randomColorButton"
				randomColorButton.Parent = randomColor
				randomColorButton.BackgroundColor3 = Color3.new(1, 1, 1)
				randomColorButton.BackgroundTransparency = 1
				randomColorButton.Size = UDim2.fromScale(1, 1)
				randomColorButton.ZIndex = 5
				randomColorButton.Image = "rbxassetid://7484765651"
				rainbow.Name = "rainbow"
				rainbow.Parent = colorPickerHolderInner
				rainbow.Active = true
				rainbow.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {rainbow, "BackgroundColor3", "topGradient"}
				rainbow.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {rainbow, "BorderColor3", "elementBorder"}
				rainbow.Position = UDim2.fromOffset(158 + 18 + 4, 223)
				rainbow.Selectable = true
				rainbow.Size = UDim2.fromOffset(18, 18)
				rainbow.Image = "rbxassetid://2454009026"
				rainbow.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {rainbow, "ImageColor3", "bottomGradient"}
				rainbowInner.Name = "rainbowInner"
				rainbowInner.Parent = randomColor
				rainbowInner.Active = true
				rainbowInner.AnchorPoint = Vector2.new(0.5, 0.5)
				rainbowInner.BackgroundColor3 = library.colors.topGradient
				colored[1 + #colored] = {rainbowInner, "BackgroundColor3", "topGradient"}
				rainbowInner.BorderColor3 = library.colors.elementBorder
				colored[1 + #colored] = {rainbowInner, "BorderColor3", "elementBorder"}
				rainbowInner.Position = UDim2.fromScale(0.5, 0.5)
				rainbowInner.Selectable = true
				rainbowInner.Size = UDim2.new(1, -4, 1, -4)
				rainbowInner.Image = "rbxassetid://2454009026"
				rainbowInner.ImageColor3 = library.colors.bottomGradient
				colored[1 + #colored] = {rainbowInner, "ImageColor3", "bottomGradient"}
				rainbowButton.Name = "rainbowButton"
				rainbowButton.Parent = rainbow
				rainbowButton.BackgroundColor3 = Color3.new(1, 1, 1)
				rainbowButton.BackgroundTransparency = 1
				rainbowButton.Size = UDim2.fromScale(1, 1)
				rainbowButton.ZIndex = 5
				rainbowButton.Image = "rbxassetid://7484772919"
				local indexwith = (designers and "rainbows") or "rainbowsg"
				local function setrainbow(t, rainbowColorMod)
					if nil == rainbowColorMod and t ~= nil then
						rainbowColorMod = t
					end
					if rainbowColorMod == nil or type(rainbowColorMod) ~= "boolean" then
						rainbowColorMode = not rainbowColorMode
					else
						rainbowColorMode = rainbowColorMod
					end
					if colorInput then
						colorInput = (colorInput:Disconnect() and nil) or nil
					end
					if hueInput then
						hueInput = (hueInput:Disconnect() and nil) or nil
					end
					pcall(function()
						if destroyrainbows and library.rainbows <= 0 then
							destroyrainbows = nil
						end
						if destroyrainbowsg and library.rainbowsg <= 0 then
							destroyrainbowsg = nil
						end
					end)
					if rainbowColorMode then
						pcall(function()
							if not library.rainbowflags[flagName] then
								library[indexwith] = 1 + library[indexwith]
							end
							library.rainbowflags[flagName] = true
							oldImageColor = colorPickerInner.ImageColor3
							oldBackgroundColor = colorPickerInner.BackgroundColor3
							oldColor = color.BackgroundColor3
							pcall(function()
								local common_float = 1 / 255
								while wait_check() and rainbowColorMode and (options.Value == "rainbow" or ((not designers and not destroyrainbowsg) or (designers and not destroyrainbows))) do
									rainbowColorValue = common_float + rainbowColorValue
									if rainbowColorValue > 1 then
										rainbowColorValue = 0
									end
									colorH = rainbowColorValue
									UpdateColorPicker(Color3.fromHSV(rainbowColorValue, 1, 1), true)
								end
							end)
						end)
						pcall(function()
							rainbowColorMode = nil
							if library.rainbowflags[flagName] then
								library[indexwith] = library[indexwith] - 1
							end
							library.rainbowflags[flagName] = nil
						end)
					end
					UpdateColorPicker(library_flags[flagName])
				end
				library.signals[1 + #library.signals] = randomColorButton.MouseButton1Click:Connect(function()
					if rainbowColorMode then
						setrainbow(false)
					end
					UpdateColorPicker(Color3.fromRGB(math.random(0, 255), math.random(0, 255), math.random(0, 255)))
				end)
				library.signals[1 + #library.signals] = rainbowButton.MouseButton1Click:Connect(setrainbow)
				sectionFunctions:Update()
				library.signals[1 + #library.signals] = newColorPicker.MouseEnter:Connect(function()
					tweenService:Create(colorPicker, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
						BackgroundColor3 = darkenColor(library.colors.main, 1.5),
						ImageColor3 = darkenColor(library.colors.main, 2.5)
					}):Play()
					colored_colorPicker_BackgroundColor3[3] = "main"
					colored_colorPicker_BackgroundColor3[4] = 1.5
					colored_colorPicker_ImageColor3[3] = "main"
					colored_colorPicker_ImageColor3[4] = 2.5
				end)
				library.signals[1 + #library.signals] = newColorPicker.MouseLeave:Connect(function()
					if not colorPickerEnabled then
						tweenService:Create(colorPicker, TweenInfo.new(0.25, library.configuration.easingStyle, library.configuration.easingDirection), {
							BackgroundColor3 = library.colors.topGradient,
							ImageColor3 = library.colors.bottomGradient
						}):Play()
						colored_colorPicker_BackgroundColor3[3] = "topGradient"
						colored_colorPicker_BackgroundColor3[4] = nil
						colored_colorPicker_ImageColor3[3] = "bottomGradient"
						colored_colorPicker_ImageColor3[4] = nil
					end
				end)
				hexInputBox.FocusLost:Connect(function()
					if #hexInputBox.Text > 5 then
						local last_vv = library_flags[flagName]
						local not_fucked, clr = pcall(Color3FromHex, hexInputBox.Text)
						UpdateColorPicker((not_fucked and clr) or last_vv)
					end
				end)
				colorH = 1 - (math.clamp(selectorHue.AbsolutePosition.X - hue.AbsolutePosition.X, 0, hue.AbsoluteSize.X) / hue.AbsoluteSize.X)
				colorS = (math.clamp(selectorColor.AbsolutePosition.X - color.AbsolutePosition.X, 0, color.AbsoluteSize.X) / color.AbsoluteSize.X)
				colorV = 1 - (math.clamp(selectorColor.AbsolutePosition.Y - color.AbsolutePosition.Y, 0, color.AbsoluteSize.Y) / color.AbsoluteSize.Y)
				library.signals[1 + #library.signals] = color.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						isDraggingSomething = true
						colorInput = (colorInput and colorInput:Disconnect() and nil) or runService.RenderStepped:Connect(function()
							local colorX = (math.clamp(mouse.X - color.AbsolutePosition.X, 0, color.AbsoluteSize.X) / color.AbsoluteSize.X)
							local colorY = (math.clamp(mouse.Y - color.AbsolutePosition.Y, 0, color.AbsoluteSize.Y) / color.AbsoluteSize.Y)
							selectorColor.Position = UDim2.fromScale(colorX, colorY)
							colorS = colorX
							colorV = 1 - colorY
							UpdateColorPicker()
						end)
						library.signals[1 + #library.signals] = colorInput
					end
				end)
				library.signals[1 + #library.signals] = color.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						if colorInput then
							isDraggingSomething = false
							colorInput:Disconnect()
						end
					end
				end)
				library.signals[1 + #library.signals] = hue.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						if hueInput then
							hueInput:Disconnect()
						end
						isDraggingSomething = true
						hueInput = runService.RenderStepped:Connect(function()
							local hueX = math.clamp(mouse.X - hue.AbsolutePosition.X, 0, hue.AbsoluteSize.X) / hue.AbsoluteSize.X
							selectorHue.Position = UDim2.new(hueX)
							colorH = 1 - hueX
							UpdateColorPicker()
						end)
						library.signals[1 + #library.signals] = hueInput
					end
				end)
				library.signals[1 + #library.signals] = hue.InputEnded:Connect(function(input)
					if hueInput and input.UserInputType == Enum.UserInputType.MouseButton1 then
						isDraggingSomething = false
						hueInput:Disconnect()
					end
				end)
				if rainbowColorMode then
					spawn(function()
						rainbowColorMode = nil
						setrainbow(true)
					end)
				end
				local function Set(t, clr)
					if clr == nil and t ~= nil then
						clr = t
					end
					if clr == "rainbow" then
						if not rainbowColorMode then
							task.spawn(setrainbow, true)
						end
						return
					elseif clr == "random" then
						clr = Color3.new(math.random(), math.random(), math.random())
					elseif type(clr) == "string" and tonumber(clr, 16) then
						clr = Color3FromHex(clr)
					end
					task.spawn(setrainbow, false)
					local last_v = library_flags[flagName]
					library_flags[flagName] = clr
					if options.Location then
						options.Location[options.LocationFlag or flagName] = clr
					end
					color.BackgroundColor3 = clr
					selectorColor.Position = UDim2.new(clr and select(3, Color3.toHSV(clr)))
					selectorHue.Position = UDim2.new(1 - (Color3.toHSV(clr)))
					colorPickerInner.BackgroundColor3 = darkenColor(clr, 1.5)
					colorPickerInner.ImageColor3 = darkenColor(clr, 2.5)
					hexInputBox.Text = Color3ToHex(clr)
					colorH, colorS, colorV = Color3.toHSV(clr)
					if callback and (last_v ~= clr or options.AllowDuplicateCalls) then
						task.spawn(callback, clr, last_v)
					end
					return clr
				end
				if presetColor ~= nil then
					Set(presetColor)
				else
					library_flags[flagName] = startingColor
					if options.Location then
						options.Location[options.LocationFlag or flagName] = startingColor
					end
				end
				local default = options.Value or startingColor or library_flags[flagName]
				local function update()
					colorPickerName, callback = options.Name or colorPickerName, options.Callback
					local clr = library_flags[flagName]
					color.BackgroundColor3 = clr
					selectorColor.Position = UDim2.new(clr and select(3, Color3.toHSV(clr)))
					selectorHue.Position = UDim2.new(1 - (Color3.toHSV(clr)))
					colorPickerInner.BackgroundColor3 = darkenColor(clr, 1.5)
					colorPickerInner.ImageColor3 = darkenColor(clr, 2.5)
					hexInputBox.Text = Color3ToHex(clr)
					colorPickerHeadline.Text = colorPickerName or "???"
					return clr
				end
				local objectdata = {
					Options = options,
					Name = flagName,
					Flag = flagName,
					Type = "Colorpicker",
					Default = default,
					Parent = sectionFunctions,
					Instance = newColorPicker,
					SetRainbow = setrainbow,
					Get = function()
						return library_flags[flagName]
					end,
					GetRainbow = function()
						return rainbowColorMode
					end,
					Set = Set,
					RawSet = function(t, clr)
						if clr == nil and t ~= nil then
							clr = t
						end
						if clr == "rainbow" then
							if not rainbowColorMode then
								task.spawn(setrainbow, true)
							end
							return clr
						elseif clr == "random" then
							clr = Color3.new(math.random(), math.random(), math.random())
						elseif clr and type(clr) == "string" and tonumber(clr, 16) then
							clr = Color3FromHex(clr)
						end
						task.spawn(setrainbow, false)
						library_flags[flagName] = clr
						if options.Location then
							options.Location[options.LocationFlag or flagName] = clr
						end
						return clr
					end,
					Update = update,
					Reset = function()
						return Set(nil, default)
					end
				}
				tabFunctions.Flags[flagName], sectionFunctions.Flags[flagName], elements[flagName] = objectdata, objectdata, objectdata
				return objectdata
			end
			sectionFunctions.AddColorPicker = sectionFunctions.AddColorpicker
			sectionFunctions.NewColorpicker = sectionFunctions.AddColorpicker
			sectionFunctions.NewColorPicker = sectionFunctions.AddColorpicker
			sectionFunctions.CreateColorPicker = sectionFunctions.AddColorpicker
			sectionFunctions.CreateColorpicker = sectionFunctions.AddColorpicker
			sectionFunctions.ColorPicker = sectionFunctions.AddColorpicker
			sectionFunctions.Colorpicker = sectionFunctions.AddColorpicker
			sectionFunctions.Cp = sectionFunctions.AddColorpicker
			sectionFunctions.CP = sectionFunctions.AddColorpicker
			function sectionFunctions:UpdateAll()
				local target = self or sectionFunctions
				if target and type(target) == "table" and target.Flags then
					for _, e in next, target.Flags do
						if e and type(e) == "table" and e.Update then
							pcall(e.Update)
						end
					end
				end
			end
			return sectionFunctions
		end
		tabFunctions.AddSection = tabFunctions.CreateSection
		tabFunctions.NewSection = tabFunctions.CreateSection
		tabFunctions.Section = tabFunctions.CreateSection
		tabFunctions.Sec = tabFunctions.CreateSection
		tabFunctions.S = tabFunctions.CreateSection
		function tabFunctions:UpdateAll()
			local target = self or tabFunctions
			if target and type(target) == "table" and target.Flags then
				for _, e in next, target.Flags do
					if e and type(e) == "table" and e.Update then
						pcall(e.Update)
					end
				end
			end
		end
		return tabFunctions
	end
	windowFunctions.AddTab = windowFunctions.CreateTab
	windowFunctions.NewTab = windowFunctions.CreateTab
	windowFunctions.Tab = windowFunctions.CreateTab
	windowFunctions.T = windowFunctions.CreateTab
	function windowFunctions:CreateDesigner(options, ...)
		options = (options and type(options) == "string" and resolvevararg("Tab", options, ...)) or options
		assert(shared.bypasstablimit or library.Designer == nil, "Designer already exists")
		options = options or {}
		options.Image = options.Image or 7483871523
		options.LastTab = true
		local designer = windowFunctions:CreateTab(options)
		local colorsection = designer:CreateSection({
			Name = "Colors"
		})
		local backgroundsection = designer:CreateSection({
			Name = "Background",
			Side = "right"
		})
		local detailssection = designer:CreateSection({
			Name = "More Info"
		})
		local filessection = designer:CreateSection({
			Name = "Profiles",
			Side = "right"
		})
		local settingssection = designer:CreateSection({
			Name = "Settings",
			Side = "right"
		})

		
		local designerelements = {}
		library.designerelements = designerelements
		for _, v in next, {{"Main", "main"}, {"Background", "background"}, {"Outer Border", "outerBorder"}, {"Inner Border", "innerBorder"}, {"Top Gradient", "topGradient"}, {"Bottom Gradient", "bottomGradient"}, {"Section Background", "sectionBackground"}, {"Section", "section"}, {"Element Text", "elementText"}, {"Other Element Text", "otherElementText"}, {"Tab Text", "tabText"}, {"Element Border", "elementBorder"}, {"Selected Option", "selectedOption"}, {"Unselected Option", "unselectedOption"}, {"Hovered Option Top", "hoveredOptionTop"}, {"Unhovered Option Top", "unhoveredOptionTop"}, {"Hovered Option Bottom", "hoveredOptionBottom"}, {"Unhovered Option Bottom", "unhoveredOptionBottom"}} do
			local nam, codename = v[1], v[2]
			local cflag = "__Designer.Colors." .. codename
			designerelements[codename] = {
				Return = colorsection:AddColorpicker({
					Name = nam,
					Flag = cflag,
					Value = library.colors[codename],
					Callback = function(v, y)
						library.colors[codename] = v or y
					end,
					__designer = 1
				}),
				Flag = cflag
			}
		end
		local flags = {}
		local persistoptions = {
			Name = "Workspace Profile",
			Flag = "__Designer.Background.WorkspaceProfile",
			Flags = true,
			Suffix = "Config",
			Workspace = library.WorkspaceName or "Unnamed Workspace",
			Desginer = true
		}
		local daaata = {{"AddTextbox", "__Designer.Textbox.ImageAssetID", backgroundsection, {
			Name = "Image Asset ID",
			Placeholder = "rbxassetid://4427304036",
			Flag = "__Designer.Background.ImageAssetID",
			Value = "rbxassetid://4427304036",
			Callback = updatecolorsnotween
		}}, {"AddColorpicker", "__Designer.Colorpicker.ImageColor", backgroundsection, {
			Name = "Image Color",
			Flag = "__Designer.Background.ImageColor",
			Value = Color3.new(1, 1, 1),
			Callback = updatecolorsnotween,
			__designer = 1
		}}, {"AddSlider", "__Designer.Slider.ImageTransparency", backgroundsection, {
			Name = "Image Transparency",
			Flag = "__Designer.Background.ImageTransparency",
			Value = 100,
			Min = 0,
			Max = 100,
			Format = "Image Transparency: %s%%",
			Textbox = true,
			Callback = updatecolorsnotween
		}}, {"AddToggle", "__Designer.Toggle.UseBackgroundImage", backgroundsection, {
			Name = "Use Background Image",
			Flag = "__Designer.Background.UseBackgroundImage",
			Value = false,
			Callback = updatecolorsnotween
		}}, {"AddPersistence", "__Designer.Persistence.ThemeFile", filessection, {
			Name = "Theme Profile",
			Flag = "__Designer.Files.ThemeFile",
			Workspace = "Root Themes",
			Flags = flags,
			Suffix = "Theme",
			Desginer = true
		}}, {"AddTextbox", "__Designer.Textbox.WorkspaceName", filessection, {
			Name = "Workspace Name",
			Value = library.WorkspaceName or "Unnamed Workspace",
			Flag = "__Designer.Files.WorkspaceFile",
			Callback = function(n, o)
				persistoptions.Workspace = n or o
			end
		}}, 
		{"AddPersistence", "__Designer.Persistence.WorkspaceProfile", filessection, persistoptions}, 
         {"AddKeybind", "__Designer.Keybind.ShowHideKey", settingssection, {
			Name = "Show/Hide Key",
			Location = library.configuration,
			Flag = "__Designer.Settings.ShowHideKey",
			LocationFlag = "hideKeybind",
			Value = library.configuration.hideKeybind,
			Callback = function()
				lasthidebing = os.clock()
			end
		}}, {"AddLabel", "__Designer.Label.Version", settingssection, {
			Name = "Library Version: " .. tostring(library.Version or "?")
		}}}
		if setclipboard and daaata[8] then
			local common_table = daaata[8][4]
			if common_table then
				common_table[1 + #common_table] = {
					Name = "Copy Theme",
					Callback = function()
						local working_with = {}
						if #flags > 0 then
							for k, cflag in next, flags do
								if k > 0 then
									local data = elements[cflag]
									if data and data.Type ~= "Persistence" and string.sub(cflag, 1, 11) == "__Designer." then
										working_with[cflag] = data
									end
								end
							end
						end
						local saving = {}
						for cflag in next, working_with do
							local value = library_flags[cflag]
							local good, jval = nil, nil
							if value ~= nil then
								good, jval = JSONEncode(value)
							else
								good, jval = true, "null"
							end
							if not good or (jval == "null" and value ~= nil) then
								local typ = typeof(value)
								if typ == "Color3" then
									value = (library.rainbowflags[cflag] and "rainbow") or Color3ToHex(value)
								end
								value = tostring(value)
								good, jval = JSONEncode(value)
								if not good or (jval == "null" and value ~= nil) then
									--warn("Could not save value:", value, debug.traceback(""))
								end
							end
							if good and jval then
								saving[cflag] = value
							end
						end
						local good, content = JSONEncode(saving)
						if good and content then
							setclipboard(content)
						end
					end
				}
				common_table = nil
			end
		end
		if options.Credit ~= false then
			daaata[1 + #daaata] = {"AddLabel", "__Designer.Label.Creator", detailssection, {
				Text = "Library by Pepsi#5229 "
			}}
		elseif "Gee, thanks for your support." then
		end
		if options.Info then
			local typ = type(options.Info)
			if typ == "string" then
				daaata[1 + #daaata] = {"AddLabel", "__Designer.Label.Creator", detailssection, {
					Text = options.Info
				}}
			elseif typ == "table" and #options.Info > 0 then
				for _, v in next, options.Info do
					daaata[1 + #daaata] = {"AddLabel", "__Designer.Label.Creator", detailssection, {
						Text = tostring(v)
					}}
				end
			end
		end
		for _, v in next, daaata do
			designerelements[v[2]] = v[3][v[1]](v[3], v[4])
		end
		designerelements["__Designer.Textbox.WorkspaceName"]:Set(library.WorkspaceName or "Unnamed Workspace")
		for k, v in next, elements do
			if v and k and string.sub(k, 1, 11) == "__Designer." and v.Type and v.Type ~= "Persistence" then
				flags[1 + #flags] = k
			end
		end
		if library.Backdrop then
			library.Backdrop.Image = resolveid(library_flags["__Designer.Background.ImageAssetID"], "__Designer.Background.ImageAssetID") or ""
			library.Backdrop.Visible = library_flags["__Designer.Background.UseBackgroundImage"] and true
			library.Backdrop.ImageTransparency = (library_flags["__Designer.Background.ImageTransparency"] or 95) / 100
			library.Backdrop.ImageColor3 = library_flags["__Designer.Background.ImageColor"] or Color3.new(1, 1, 1)
		end
		local function setbackground(t, Asset, Transparency, Visible)
			if Visible == nil and t ~= nil and type(t) ~= "table" then
				Asset, Transparency, Visible = t, Transparency, Visible
			end
			if Visible == 0 or ((Asset == 0 or Asset == false) and Visible == nil and Transparency == nil) then
				Visible = false
			elseif Visible == 1 or ((Asset == 1 or Asset == true) and Visible == nil and Transparency == nil) then
				Visible = true
			elseif Asset == nil and Transparency == nil and Visible == nil then
				Visible = not library_flags["__Designer.Background.UseBackgroundImage"]
			end
			local temp = Asset and type(Asset)
			if Transparency == nil and Visible == nil and temp == "number" and ((Asset ~= 1 and Asset ~= 0) or (Asset > 0 and Asset <= 100)) then
				Transparency, Asset, temp = Asset, nil
			end
			if temp and ((temp == "number" and Asset > 1) or temp == "string") then
				designerelements["__Designer.Textbox.ImageAssetID"]:Set(Asset)
			end
			temp = tonumber(Transparency)
			temp = (temp >= 0 and temp <= 1 and temp * 100) or temp
			if temp then
				designerelements["__Designer.Slider.ImageTransparency"]:Set(temp)
			end
			if Visible ~= nil then
				designerelements["__Designer.Toggle.UseBackgroundImage"]:Set(Visible and true)
			end
			return Asset, Transparency, Visible
		end
		local bk = options.Background or options.Backdrop or options.Grahpic
		if bk then
			if type(bk) == "table" then
				setbackground(bk.Asset or bk[1], bk.Transparency or bk[2], bk.Visible or bk[3])
			else
				setbackground(bk, 0, 1)
			end
		end
		library.Designer = {
			Options = options,
			Parent = windowFunctions,
			Name = "Designer",
			Flag = "Designer",
			Type = "Designer",
			Instance = designer,
			SetBackground = setbackground
		}
		library.SetBackground = setbackground
		local savestuff = library.elements["__Designer.Background.WorkspaceProfile"]
		if savestuff then
			library.LoadFile = savestuff.LoadFile
			library.LoadFileRaw = savestuff.LoadFileRaw
			library.LoadJSON = savestuff.LoadJSON
			library.LoadJSONRaw = savestuff.LoadJSONRaw
			library.SaveFile = savestuff.SaveFile
			library.GetJSON = savestuff.GetJSON
		end
		spawn(updatecolorsnotween)
		return library.Designer
	end
	windowFunctions.AddDesigner = windowFunctions.CreateDesigner
	windowFunctions.NewDesigner = windowFunctions.CreateDesigner
	windowFunctions.Designer = windowFunctions.CreateDesigner
	windowFunctions.D = windowFunctions.CreateDesigner
	function windowFunctions:UpdateAll()
		local target = self or windowFunctions
		if target and type(target) == "table" and target.Flags then
			for _, e in next, target.Flags do
				if e and type(e) == "table" and e.Update then
					pcall(e.Update)
				end
			end
			pcall(function()
				if library.Backdrop then
					library.Backdrop.Visible = library_flags["__Designer.Background.UseBackgroundImage"] and true
					library.Backdrop.Image = resolveid(library_flags["__Designer.Background.ImageAssetID"], "__Designer.Background.ImageAssetID") or ""
					library.Backdrop.ImageColor3 = library_flags["__Designer.Background.ImageColor"] or Color3.new(1, 1, 1)
					library.Backdrop.ImageTransparency = (library_flags["__Designer.Background.ImageTransparency"] or 95) / 100
				end
			end)
		end
	end
	library.UpdateAll = windowFunctions.UpdateAll
	if options.Themeable or options.DefaultTheme or options.Theme then
		spawn(function()
			local os_clock = os.clock
			local starttime = os_clock()
			while os_clock() - starttime < 12 do
				if homepage then
					windowFunctions.GoHome = homepage
					local x, e = pcall(homepage)
					if not x and e then
					--	warn("Error going to Homepage:", e)
					end
					x, e = nil
					break
				end
				task.wait()
			end
			local whatDoILookLike = options.Themeable or options.DefaultTheme or options.Theme
			windowFunctions:CreateDesigner((type(whatDoILookLike) == "table" and whatDoILookLike) or nil)
			if options.DefaultTheme or options.Theme then
				spawn(function()
					local content = options.DefaultTheme or options.Theme or options.JSON or options.ThemeJSON
					if content and type(content) == "string" and #content > 1 then
						local good, jcontent = JSONDecode(content)
						if good and jcontent then
							for cflag, val in next, jcontent do
								local data = elements[cflag]
								if data and data.Type ~= "Persistence" then
									if data.Set then
										data:Set(val)
									elseif data.RawSet then
										data:RawSet(val)
									else
										library.flags[cflag] = val
									end
								end
							end
						end
					end
				end)
			end
			os_clock, starttime = nil
		end)
	end
	return windowFunctions
end
library.NewWindow = library.CreateWindow
library.AddWindow = library.CreateWindow
library.Window = library.CreateWindow
library.W = library.CreateWindow
--return library, library_flags, library.subs

TextLabel = Instance.new("TextLabel")
TextLabel.ZIndex = 10
TextLabel.Parent = game:GetService("Players").LocalPlayer.PlayerGui.Main.Timer.Parent
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(0, 0, 0, -30)
TextLabel.Size = UDim2.new(1, 0, 0, 30)

TextLabel.Font = "Cartoon"
TextLabel.FontSize = "Size36"
TextLabel.TextSize = 36
TextLabel.Text = ""
TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
TextLabel.TextStrokeTransparency = 0.5
TextLabel.Visible = false

TextLabel1 = Instance.new("TextLabel")
TextLabel1.Name = "test"
TextLabel1.ZIndex = 10
TextLabel1.Parent = game:GetService("Players").LocalPlayer.PlayerGui.Main.Timer.Parent
TextLabel1.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel1.BackgroundTransparency = 1
TextLabel1.Position = UDim2.new(0, 0, 0, 0)
TextLabel1.Size = UDim2.new(1, 0, 0, 30)

TextLabel1.Font = "Cartoon"
TextLabel1.FontSize = "Size18"
TextLabel1.TextSize = 18
TextLabel1.Text = ""
TextLabel1.TextColor3 = Color3.fromRGB(255, 0, 0)
TextLabel1.TextStrokeTransparency = 0.5
TextLabel1.Visible = false

TextLabel2 = Instance.new("TextLabel")
TextLabel2.Name = "boty"
TextLabel2.ZIndex = 10
TextLabel2.Parent = game:GetService("Players").LocalPlayer.PlayerGui.Main.Timer.Parent
TextLabel2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel2.BackgroundTransparency = 1
TextLabel2.Position = UDim2.new(0, 0, 0, 40)
TextLabel2.Size = UDim2.new(1, 0, 0, 30)

TextLabel2.Font = "Cartoon"
TextLabel2.FontSize = "Size36"
TextLabel2.TextSize = 36
TextLabel2.Text = ""
TextLabel2.TextColor3 = Color3.fromRGB(255, 0, 0)
TextLabel2.TextStrokeTransparency = 0.5
TextLabel2.Visible = false


local noshank = require(game.ReplicatedStorage.Util.CameraShaker)
noshank:Stop()

OldWorld = false
newworld = false
sea3world = false
Magnet = false
local placeId = game.PlaceId


local market = game:GetService("MarketplaceService")
local info = market:GetProductInfo(game.PlaceId, Enum.InfoType.Asset)

if placeId == 2753915549 then
    OldWorld = true
elseif placeId == 4442272183 then
    newworld = true
elseif placeId == 7449423635 then
    sea3world = true
end

function tpwait(...)
    local gotoCFrame = {...}
    if typeof(gotoCFrame[1]) == "number" and gotoCFrame[2] and gotoCFrame[3] then
        gotoCFrame = Vector3.new(gotoCFrame[1], gotoCFrame[2], gotoCFrame[3])
    elseif typeof(gotoCFrame[1]) == "Vector3" then
        gotoCFrame = gotoCFrame[1]
    elseif typeof(gotoCFrame[1]) == "CFrame" then
        gotoCFrame = gotoCFrame[1].Position
    end
    Distance = (gotoCFrame - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
    if Distance < 1000 then
        Speed2 = 325
    elseif Distance >= 1000 then
        Speed2 = 310
    end

    pcall(function()
        game.Players.LocalPlayer.Character.Humanoid.Sit = false
    end)
   
        local tweentp = game:service"TweenService"
        local info = TweenInfo.new((game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart.Position - gotoCFrame).Magnitude/Speed2, Enum.EasingStyle.Linear)
        
        local  err = pcall(function()
            _G.tweennew = tweentp:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], info, {CFrame = CFrame.new(gotoCFrame)})
            _G.tweennew:Play()
        end)
		if not _G.tweennew then return err end

		_G.tweennew.Completed:Wait()

  
end

local function GetIsLand(...)
	local RealtargetPos = {...}
	local targetPos = RealtargetPos[1]
	local RealTarget
	if type(targetPos) == "vector" then
		RealTarget = targetPos
	elseif type(targetPos) == "userdata" then
		RealTarget = targetPos.Position
	elseif type(targetPos) == "number" then
		RealTarget = CFrame.new(unpack(RealtargetPos))
		RealTarget = RealTarget.p
	end

	local ReturnValue
	local CheckInOut = math.huge;
	if game.Players.LocalPlayer.Team then
		for i,v in pairs(game.Workspace._WorldOrigin.PlayerSpawns:FindFirstChild(tostring(game.Players.LocalPlayer.Team)):GetChildren()) do 
			local ReMagnitude = (RealTarget - v:GetModelCFrame().p).Magnitude;
			if ReMagnitude < CheckInOut then
				CheckInOut = ReMagnitude;
				ReturnValue = v.Name
			end
		end
		if ReturnValue then
			return ReturnValue
		end 
	end
end

function tp(...)
    local gotoCFrame = {...}
    if typeof(gotoCFrame[1]) == "number" and gotoCFrame[2] and gotoCFrame[3] then
        gotoCFrame = Vector3.new(gotoCFrame[1], gotoCFrame[2], gotoCFrame[3])
    elseif typeof(gotoCFrame[1]) == "Vector3" then
        gotoCFrame = gotoCFrame[1]
	elseif typeof(gotoCFrame[1]) == "userdata" then
        gotoCFrame = gotoCFrame[1]
    elseif typeof(gotoCFrame[1]) == "CFrame" then
        gotoCFrame = gotoCFrame[1].Position
    end
    Distance = (gotoCFrame - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
    if Distance < 1000 then
        Speed1 = 325
    elseif Distance >= 1000 then
        Speed1 = 310
    end

	if _G.bypasstp and not _G.AutoFarmken and Distance > 3000 and not _G.AutoRaid and not (game.Players.LocalPlayer.Backpack:FindFirstChild("Special Microchip") or game.Players.LocalPlayer.Character:FindFirstChild("Special Microchip") or game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") or game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") or game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence") or game.Players.LocalPlayer.Character:FindFirstChild("Hallow Essence") or game.Players.LocalPlayer.Character:FindFirstChild("Sweet Chalice") or game.Players.LocalPlayer.Backpack:FindFirstChild("Sweet Chalice")) then
		pcall(function()
			_G.tweennew:Cancel()
			fkwarp = false
			if game:GetService("Players")["LocalPlayer"].Data:FindFirstChild("SpawnPoint").Value == tostring(GetIsLand(gotoCFrame)) then 
				wait(.1)
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
			elseif game:GetService("Players")["LocalPlayer"].Data:FindFirstChild("LastSpawnPoint").Value == tostring(GetIsLand(gotoCFrame)) then
				game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(15)
				wait(0.1)
				repeat wait() until game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").Health > 0
			else
				if game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").Health > 0 then
					if fkwarp == false then
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(gotoCFrame)
					end
					fkwarp = true
				end
				wait(.08)
				game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(15)
				repeat wait() until game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").Health > 0
				wait(.1)
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
			end
			wait(0.2)
			return
		end)
	end

    pcall(function()
        game.Players.LocalPlayer.Character.Humanoid.Sit = false
    end)
    if (game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart.Position - gotoCFrame).Magnitude <= 150 then
        pcall(function() 
            _G.tweennew:Cancel()
			game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart.CFrame = CFrame.new(gotoCFrame)
        end)
        --wait(0.1)
       
    end
        local tweentp = game:service"TweenService"
        local info = TweenInfo.new((game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart.Position - gotoCFrame).Magnitude/Speed1, Enum.EasingStyle.Linear)
        
        local  err = pcall(function()
            _G.tweennew = tweentp:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], info, {CFrame = CFrame.new(gotoCFrame)})
            _G.tweennew:Play()
        end)
		
        if not _G.tweennew then return err end

        _G.tweennew.Completed:Connect(function() 
            islandtp = false
        end)
end

for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do
    v:Disable()
end
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
    vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)

local function UpdateTime()
    local GameTime = math.floor(workspace.DistributedGameTime + 0.5)
    local Hour = math.floor(GameTime / (60 ^ 2)) % 24
    local Minute = math.floor(GameTime / (60 ^ 1)) % 60
    local Second = math.floor(GameTime / (60 ^ 0)) % 60
    -- Time:Refresh(Hour .. " Hrs. " .. Minute .. " Mins. " .. Second .. " Secs. ")
    game:GetService("Players").LocalPlayer.PlayerGui.Main.TextLabel.Text =
    math.floor(GameTime / (60 ^ 2)) % 24 .. " Hrs. " .. math.floor(GameTime / (60 ^ 1)) % 60 .. " Mins. " ..
    math.floor(GameTime / (60 ^ 0)) % 60 .. " Secs. "
end


spawn(function()
    while true do
        UpdateTime()
        game:GetService("RunService").RenderStepped:Wait()
    end
end)
game:GetService("Players").LocalPlayer.PlayerGui.Main.test.Visible = true
game:GetService("Players").LocalPlayer.PlayerGui.Main.TextLabel.Visible = true




--Settings = ReadSetting()

function HopServer()
	if _G.eghgrthrtyhj then
	Settings = {}
		for i=1,100 do wait()
			local huhu = game:GetService("ReplicatedStorage").__ServerBrowser:InvokeServer(i)
			for k,v in pairs(huhu) do wait()
				if k~=game.JobId and v.Count < 10 then
					if not Settings[k] or tick() - Settings[k].Time > 60*10  then
						Settings[k] = {
							Time = tick()
						}
						game:GetService("ReplicatedStorage").__ServerBrowser:InvokeServer("teleport",k)
					elseif tick() - Settings[k].Time > 60*60 then
						Settings[k] = nil
					end
				end
			end
		end
	end
end

function Hopey()


HopServer()

	--[[
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local Deleted = false
    function TPReturner()
        local Site;
        if foundAnything == "" then
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?limit=100'))
        else
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?limit=100&cursor=' .. foundAnything))
        end
        local ID = ""
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        local num = 0;
        for i,v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _,Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile = pcall(function()
                                -- delfile("NotSameServers.json")
                                AllIDs = {}
                                table.insert(AllIDs, actualHour)
                            end)
                        end
                    end
                    num = num + 1
                end
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait()
                    pcall(function()
                        -- writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                        wait()
                        game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                    end)
                    wait(4)
                end
            end
        end
    end
    function Teleport() 
        while wait() do
            pcall(function()
                TPReturner()
                if foundAnything ~= "" then
                    TPReturner()
                end
            end)
        end
    end
    Teleport()
	]]
end




function Hopey1()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local Deleted = false
    function TPReturner()
        local Site;
        if foundAnything == "" then
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
        else
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
        end
        local ID = ""
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        local num = 0;
        for i,v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) and v.playing >= 9 then
                for _,Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile = pcall(function()
                                -- delfile("NotSameServers.json")
                                AllIDs = {}
                                table.insert(AllIDs, actualHour)
                            end)
                        end
                    end
                    num = num + 1
                end
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait()
                    pcall(function()
                        wait()
                        game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                    end)
                    wait(4)
                end
            end
        end
    end
    function Teleport() 
        while wait() do
            pcall(function()
                TPReturner()
                if foundAnything ~= "" then
                    TPReturner()
                end
            end)
        end
    end
    Teleport()
end

--local library, Flags, Subs = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
--local Wait = library.subs.Wait -- Only returns if the GUI has not been terminated. For 'while Wait() do' loops

local PepsisWorld = library:CreateWindow({
    Name = "Root Hub v2",
    Themeable = {
        Info = "V. 2.4",
        Credit = false
    }
})

local FarmingTab = PepsisWorld:CreateTab({
    Name = "Farming"
})

local PlayerTab = PepsisWorld:CreateTab({
    Name = "Player"
})

local CombatTab = PepsisWorld:CreateTab({
    Name = "Combat"
})

local IslandTab = PepsisWorld:CreateTab({
    Name = "Island"
})

local ShopTab = PepsisWorld:CreateTab({
    Name = "Shop"
})

local MiseTab = PepsisWorld:CreateTab({
    Name = "Mise"
})

local RaidTab = PepsisWorld:CreateTab({
    Name = "Raid"
})
local Imagesedit = PepsisWorld:CreateTab({
    Name = "img-1"
})
local Imagesedit2 = PepsisWorld:CreateTab({
    Name = "img-2"
})
local ImagesSection = Imagesedit:CreateSection({
    Name = "Images Edit"
	
})

local textSection = Imagesedit:CreateSection({
    Name = "text",
    Side = "Right"
})

local OguiSection = Imagesedit:CreateSection({
    Name = "Gui",
    Side = "Right"
})

local OCombatSection = Imagesedit:CreateSection({
    Name = "Combat",
    Side = "Right"
})

local ImagesSection2 = Imagesedit2:CreateSection({
    Name = "Inventory"
	
})

local GamePassSection = Imagesedit2:CreateSection({
    Name = "Game pass",
    Side = "Right"
})
local Noedit = PepsisWorld:CreateTab({
    Name = "."
})
local NoeditSection = Noedit:CreateSection({
    Name = "No edit"
	
})
--_G.SaveConfig = true
--_G.ConfigMode = 1
if _G.ConfigMode == 0 then
	_G.ModeSetting = "multi"
 elseif _G.ConfigMode == 1 then
	_G.ModeSetting = Game.Players.LocalPlayer.Name
 else
	_G.ModeSetting = "multi"
 end

local Persistence = NoeditSection:AddPersistence({
    Name = "Save/Load",
    Value = _G.ModeSetting
})

function savenaja()
	if _G.eghgrthrtyhj and _G.SaveConfig then
		pcall(function()
		Persistence:SaveFile(_G.ModeSetting)
		end)
	end
end

local FarmSection = FarmingTab:CreateSection({
    Name = "Auto Farm",
	Side = "Left"
})

local OtherSection = FarmingTab:CreateSection({
    Name = "Other",
	Side = "Left"
})
local setconSection = FarmingTab:CreateSection({
    Name = "Settings Option",
    Side = "Right"
})
local WeaponSection = FarmingTab:CreateSection({
    Name = "Weapon",
    Side = "Right"
})
local BossSection = FarmingTab:CreateSection({
    Name = "Boss",
    Side = "Right"
})


local SettingSection = FarmingTab:CreateSection({
    Name = "Config",
    Side = "Right"
})

local MasterySection = FarmingTab:CreateSection({
    Name = "Mastery",
    Side = "Left"
})



local StatsSection = PlayerTab:CreateSection({
    Name = "Auto Stats",
	Side = "Left"
})

local LockSection = PlayerTab:CreateSection({
    Name = "Auto Lock",
    Side = "Right"
})

local AddonSection = PlayerTab:CreateSection({
    Name = "Addon",
    Side = "Left"
})

local CombatSection = CombatTab:CreateSection({
    Name = "Combat",
	Side = "Left"
})

local AimSection = CombatTab:CreateSection({
    Name = "Option",
    Side = "Right"
})

local IslandSection = IslandTab:CreateSection({
    Name = "Island",
	Side = "Left"
})
local WorldSection = IslandTab:CreateSection({
    Name = "World",
    Side = "Right"
})

local ServerSection = IslandTab:CreateSection({
    Name = "Server",
    Side = "Right"
})

local TeameSection = IslandTab:CreateSection({
    Name = "Teame",
    Side = "Right"
})
local BuySection = ShopTab:CreateSection({
    Name = "Auto Buy",
})
local BoneSection = ShopTab:CreateSection({
    Name = "Bones",
    Side = "Left"
})
local HakiSection = ShopTab:CreateSection({
    Name = "Haki",
	Side = "Left"
})

local FragsSection = ShopTab:CreateSection({
    Name = "FragMents",
	Side = "Left"
	
})
local meleeSection = ShopTab:CreateSection({
    Name = "Melee",
	Side = "Right"
	
})
local SwordSection = ShopTab:CreateSection({
    Name = "Sword",
	Side = "Right"
	
})

local GunSection = ShopTab:CreateSection({
    Name = "Gun",
	Side = "Left"
	
})

local AcessorySection = ShopTab:CreateSection({
    Name = "Acessory",
	Side = "Right"
	
})

local MiseSection = MiseTab:CreateSection({
    Name = "Mise",
	Side = "Left"
	
})

local ActivateSection = MiseTab:CreateSection({
    Name = "Auto Activate",
	
})
local Abilitieection = MiseTab:CreateSection({
    Name = "Ablilities",
	Side = "Right"
	
})
local GuiSection = MiseTab:CreateSection({
    Name = "OpenGui",
	Side = "Right"
	
})
local RaidSection = RaidTab:CreateSection({
    Name = "Raid",
	Side = "Left"
	
})

local Raid2Section = RaidTab:CreateSection({
    Name = "Options",
	Side = "Right"
})

--[[
_G.row = 0
ImagesSection2:AddTextbox({
	Name = "Sort x Row ",
	Value = 2,
	Type = "number",
	Callback = function(t,o)
		_G.row = t
	end
})
]]

function goodfruit()
	if game.Players.localPlayer.PlayerGui.Main:FindFirstChild("invfood") then
		game.Players.localPlayer.PlayerGui.Main:FindFirstChild("invfood"):Destroy()
	end
	
	game.Players.localPlayer.PlayerGui.Main.FruitInventory.Visible = true
	wait(0.5)
	local cpcpRare = game.Players.localPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:Clone()
	cpcpRare.Parent = game.Players.localPlayer.PlayerGui.Main
	cpcpRare.Name = "invfood"
	
	cpcpRare.Selectable = true
	cpcpRare.Active = true
	cpcpRare.Draggable = true
	cpcpRare.Style = "DropShadow"
	game.Players.localPlayer.PlayerGui.Main.FruitInventory.Visible = false
	game.Players.localPlayer.PlayerGui.Main.invfood.UIGridLayout.CellSize = UDim2.new(0, 100, 0, 100)
	game.Players.localPlayer.PlayerGui.Main.invfood.UIGridLayout.FillDirection = "Vertical"
	game.Players.localPlayer.PlayerGui.Main.invfood.UIGridLayout.VerticalAlignment = "Center"

	game.Players.localPlayer.PlayerGui.Main.invfood.UIGridLayout.FillDirectionMaxCells = 2
	local co = (#game.Players.localPlayer.PlayerGui.Main.invfood:GetChildren()-3)/game.Players.localPlayer.PlayerGui.Main.invfood.UIGridLayout.FillDirectionMaxCells

	if game.Players.localPlayer.PlayerGui.Main.invfood.UIGridLayout.FillDirectionMaxCells <= 1 then
		cpcpRare.Size = UDim2.new(0, 106*(#game.Players.localPlayer.PlayerGui.Main.invfood:GetChildren()-3), 0, 116*game.Players.localPlayer.PlayerGui.Main.invfood.UIGridLayout.FillDirectionMaxCells)
	else
		cpcpRare.Size = UDim2.new(0, 106*math.ceil(co), 0, 116*game.Players.localPlayer.PlayerGui.Main.invfood.UIGridLayout.FillDirectionMaxCells)
	end
	
end

--[[
function goodinventory(tier)
	if game.Players.localPlayer.PlayerGui.Main:FindFirstChild(tier) then
		game.Players.localPlayer.PlayerGui.Main:FindFirstChild(tier):Destroy()
	end
	
	
	game.Players.localPlayer.PlayerGui.Main.Inventory.Visible = true
	wait(0.5)
	local cpcpRare = game.Players.localPlayer.PlayerGui.Main.Inventory.Container.Stored.ScrollingFrame.Frame:Clone()
	cpcpRare.Parent = game.Players.localPlayer.PlayerGui.Main
	cpcpRare.Name = tier
	
	cpcpRare.Selectable = true
	cpcpRare.Active = true
	cpcpRare.Draggable = true
	cpcpRare.Style = "DropShadow"
	game.Players.localPlayer.PlayerGui.Main.Inventory.Visible = false
	game.Players.localPlayer.PlayerGui.Main[tier].UIGridLayout.CellSize = UDim2.new(0, 100, 0, 100)
	game.Players.localPlayer.PlayerGui.Main[tier].UIGridLayout.FillDirection = "Vertical"
	game.Players.localPlayer.PlayerGui.Main[tier].UIGridLayout.VerticalAlignment = "Center"
	game.Players.localPlayer.PlayerGui.Main[tier].UIGridLayout.HorizontalAlignment = "Center"

	for i, v in pairs(game.Players.localPlayer.PlayerGui.Main[tier]:GetChildren()) do
		if v:IsA("ImageButton") then
			if v.Name == "Template" then
				v:Destroy()
			elseif v.Title.TextLabel.Text == tier then
				v.Draggable = false
				v.Selectable = false
				v.Active = false
			else
				v:Destroy()
			end
		end
	end
	
	game.Players.localPlayer.PlayerGui.Main[tier].UIGridLayout.FillDirectionMaxCells = _G.row
	local co = (#game.Players.localPlayer.PlayerGui.Main[tier]:GetChildren()-1)/game.Players.localPlayer.PlayerGui.Main[tier].UIGridLayout.FillDirectionMaxCells

	if game.Players.localPlayer.PlayerGui.Main[tier].UIGridLayout.FillDirectionMaxCells <= 1 then
		cpcpRare.Size = UDim2.new(0, 106*(#game.Players.localPlayer.PlayerGui.Main[tier]:GetChildren()-1), 0, 116*game.Players.localPlayer.PlayerGui.Main[tier].UIGridLayout.FillDirectionMaxCells)
	else
		cpcpRare.Size = UDim2.new(0, 108*math.ceil(co), 0, 116*game.Players.localPlayer.PlayerGui.Main[tier].UIGridLayout.FillDirectionMaxCells)
	end
	
end


ImagesSection2:AddToggle({
	Name = "Inventory Uncommon",
	Value = false,
	Callback = function(t, o)
		if t then
			goodinventory("Uncommon")
   		else
			if game.Players.localPlayer.PlayerGui.Main:FindFirstChild("Uncommon") then
				game.Players.localPlayer.PlayerGui.Main:FindFirstChild("Uncommon"):Destroy()
			end
		end
	end
})

ImagesSection2:AddToggle({
	Name = "Inventory Common",
	Value = false,
	Callback = function(t, o)
		if t then
			goodinventory("Common")
   		else
			if game.Players.localPlayer.PlayerGui.Main:FindFirstChild("Common") then
				game.Players.localPlayer.PlayerGui.Main:FindFirstChild("Common"):Destroy()
			end
		end
	end
})


ImagesSection2:AddToggle({
	Name = "Inventory Rare",
	Value = false,
	Callback = function(t, o)
		if t then
			goodinventory("Rare")
   		else
			if game.Players.localPlayer.PlayerGui.Main:FindFirstChild("Rare") then
				game.Players.localPlayer.PlayerGui.Main:FindFirstChild("Rare"):Destroy()
			end
		end
	end
})

ImagesSection2:AddToggle({
	Name = "Inventory Legendary",
	Value = false,
	Callback = function(t, o)
		if t then
			goodinventory("Legendary")
   		else
			if game.Players.localPlayer.PlayerGui.Main:FindFirstChild("Legendary") then
				game.Players.localPlayer.PlayerGui.Main:FindFirstChild("Legendary"):Destroy()
			end
		end
	end
})

ImagesSection2:AddToggle({
	Name = "Inventory Mythical",
	Value = false,
	Callback = function(t, o)
		if t then
			goodinventory("Mythical")
   		else
			if game.Players.localPlayer.PlayerGui.Main:FindFirstChild("Mythical") then
				game.Players.localPlayer.PlayerGui.Main:FindFirstChild("Mythical"):Destroy()
			end
		end
	end
})


]]
ImagesSection2:AddToggle({
	Name = "Inventory Fruit",
	Value = false,
	Callback = function(t, o)
		if t then
			goodfruit()
   		else
			if game.Players.localPlayer.PlayerGui.Main:FindFirstChild("invfood") then
				game.Players.localPlayer.PlayerGui.Main:FindFirstChild("invfood"):Destroy()
			end
		end
	end
})




function getinven()
    pcall(function()
        game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition = Vector2.new(0, 1000000)
        local sixx = game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition.Y
    	game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition = Vector2.new(0, 0)
    	local scoll = 1
    	
        if not game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("inv") then
            local invframe = game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:Clone()
            invframe.Name = "inv"
            invframe.Draggable = true
            invframe.Active = true
            invframe.Size = UDim2.new(0, 350, 0, 350)
            invframe:ClearAllChildren()
            invframe.Parent = game:GetService("Players").LocalPlayer.PlayerGui.Main
            local lay1 = game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame.UIPadding:Clone()
            local lay2 = game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame.UIGridLayout:Clone()
            lay2.FillDirection = "Vertical"
            lay1.Parent = invframe
            lay2.Parent = invframe
        end
    
    	repeat wait()
			for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do
				game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition= Vector2.new(0, scoll)
			   if v:FindFirstChild("ItemName") then
					if  v:FindFirstChild("ItemName") and (v:FindFirstChild("ItemLine2").Text == "Sword" or v:FindFirstChild("ItemLine2").Text == "Gun") then
						local cpcpRare = v:Clone()
						cpcpRare.Name = v.ItemName.Text
						if not game:GetService("Players").LocalPlayer.PlayerGui.Main.inv:FindFirstChild(v.ItemName.Text) then
							cpcpRare.Parent = game:GetService("Players").LocalPlayer.PlayerGui.Main.inv
						end
						--print(i,v.ItemName.Text)
					end
			   end
			end
		--[[
    	for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do
    	   if v:FindFirstChild("ItemName") then
    
    		 if tonumber(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition.Y) < tonumber(sixx) then
    			   game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition= Vector2.new(0, scoll)
                    for i2, v2 in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do
                    	if v2:FindFirstChild("ItemName") and (v2:FindFirstChild("ItemLine2").Text == "Sword" or v2:FindFirstChild("ItemLine2").Text == "Gun") then
                            local cpcpRare = v2:Clone()
                            cpcpRare.Name = v2.ItemName.Text
                            if not game:GetService("Players").LocalPlayer.PlayerGui.Main.inv:FindFirstChild(v2.ItemName.Text) then
                                cpcpRare.Parent = game:GetService("Players").LocalPlayer.PlayerGui.Main.inv
                            end
                    	end
                    end
    		   end
    	   end
    	end
		]]
    	scoll = scoll + 532
        until tonumber(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition.Y) == sixx

    end)
end


function Getaccess()
    pcall(function()
        game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition = Vector2.new(0, 1000000)
        local sixx = game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition.Y
    	game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition = Vector2.new(0, 0)
    	local scoll = 1
    	
        if not game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("access") then
            local invframe = game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:Clone()
            invframe.Name = "access"
            invframe.Draggable = true
            invframe.Active = true
            invframe.Size = UDim2.new(0, 350, 0, 350)
            invframe:ClearAllChildren()
            invframe.Parent = game:GetService("Players").LocalPlayer.PlayerGui.Main
            local lay1 = game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame.UIPadding:Clone()
            local lay2 = game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame.UIGridLayout:Clone()
            lay2.FillDirection = "Vertical"
            lay1.Parent = invframe
            lay2.Parent = invframe
        end
    
    	repeat wait()
			for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do
				game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition= Vector2.new(0, scoll)
			   if v:FindFirstChild("ItemName") then
					if  v:FindFirstChild("ItemName") and v:FindFirstChild("ItemLine2").Text == "Accessory"  then
						local cpcpRare = v:Clone()
						cpcpRare.Name = v.ItemName.Text
						if not game:GetService("Players").LocalPlayer.PlayerGui.Main.access:FindFirstChild(v.ItemName.Text) then
							cpcpRare.Parent = game:GetService("Players").LocalPlayer.PlayerGui.Main.access
						end
						--print(i,v.ItemName.Text)
					end
			   end
			end
		--[[
    	for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do
    	   if v:FindFirstChild("ItemName") then
    
    		 if tonumber(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition.Y) < tonumber(sixx) then
    			   game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition= Vector2.new(0, scoll)
                    for i2, v2 in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do
                    	if v2:FindFirstChild("ItemName") and (v2:FindFirstChild("ItemLine2").Text == "Accessory") then
                            local cpcpRare = v2:Clone()
                            cpcpRare.Name = v2.ItemName.Text
                            if not game:GetService("Players").LocalPlayer.PlayerGui.Main.access:FindFirstChild(v2.ItemName.Text) then
                                cpcpRare.Parent = game:GetService("Players").LocalPlayer.PlayerGui.Main.access
                            end
                    	end
                    end
    		   end
    	   end
    	end
		]]
    	scoll = scoll + 532
        until tonumber(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition.Y) == sixx

    end)
end
--and v2.BackgroundShadow.BackgroundColor3 == Color3.fromRGB(238, 47, 50)  purplr 213, 43, 228 blue 92, 140, 211 hhh 140, 82, 255  uncom 179, 179, 179


ImagesSection2:AddToggle({
	Name = "Inventory Weapon",
	Value = false,
	Callback = function(t, o)
		if t then
			getinven()
   		else
			pcall(function()
			if game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("inv") then
				game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("inv"):Destroy()
			end
		end)
		end
	end
})

ImagesSection2:AddToggle({
	Name = "Inventory Accessory",
	Value = false,
	Callback = function(t, o)
		if t then
			Getaccess()
   		else
			pcall(function()
				if game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("access") then
					game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("access"):Destroy()
				end
			end)
		end
	end
})




game.Players.localPlayer.PlayerGui.Main.Inventory.Selectable = true
game.Players.localPlayer.PlayerGui.Main.Inventory.Active = true
game.Players.localPlayer.PlayerGui.Main.Inventory.Draggable = true

game:GetService("Players").localPlayer.PlayerGui.Main.AwakeningToggler.Selectable = true
game:GetService("Players").localPlayer.PlayerGui.Main.AwakeningToggler.Active = true
game:GetService("Players").localPlayer.PlayerGui.Main.AwakeningToggler.Draggable = true

game:GetService("Players").localPlayer.PlayerGui.Main.Colors.Selectable = true
game:GetService("Players").localPlayer.PlayerGui.Main.Colors.Active = true
game:GetService("Players").localPlayer.PlayerGui.Main.Colors.Draggable = true

game:GetService("Players").localPlayer.PlayerGui.Main.Titles.Selectable = true
game:GetService("Players").localPlayer.PlayerGui.Main.Titles.Active = true
game:GetService("Players").localPlayer.PlayerGui.Main.Titles.Draggable = true

game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Selectable = true
game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Active = true
game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Draggable = true


OguiSection:AddButton({
	Name = "Open Awakening", 
	Callback = function()
		game:GetService("Players").localPlayer.PlayerGui.Main.AwakeningToggler.Visible = true
	end
})
OguiSection:AddButton({
	Name = "Open Buso Color", 
	Callback = function()
		game:GetService("Players").localPlayer.PlayerGui.Main.Colors.Visible =true
	end
})
OguiSection:AddButton({
	Name = "Open Titles", 
	Callback = function()
		game:GetService("Players").localPlayer.PlayerGui.Main.Titles.Visible =true
	end
})

textSection:AddToggle({
	Name = "Msg 1",
	Value = false,
	Callback = function(t, o)
		
		if t then
			game.Players.localPlayer.PlayerGui.godroot.msg.msg1.Visible = true
   		else
			game.Players.localPlayer.PlayerGui.godroot.msg.msg1.Visible = false
		end
	end
})
textSection:AddTextbox({
	Name = "Msg 1",
	Value = "",
	Placeholder = "msg",
	Type = "String",
	Callback = function(t,o)
		game.Players.localPlayer.PlayerGui.godroot.msg.msg1.Text = t
	end
})

textSection:AddToggle({
	Name = "Msg 2",
	Value = false,
	Callback = function(t, o)
		
		if t then
			game.Players.localPlayer.PlayerGui.godroot.msg.msg2.Visible = true
   		else
			game.Players.localPlayer.PlayerGui.godroot.msg.msg2.Visible = false
		end
	end
})
textSection:AddTextbox({
	Name = "Msg 2",
	Value = "",
	Placeholder = "msg",
	Type = "String",
	Callback = function(t,o)
		game.Players.localPlayer.PlayerGui.godroot.msg.msg2.Text = t
	end
})

textSection:AddToggle({
	Name = "Msg 3",
	Value = false,
	Callback = function(t, o)
		
		if t then
			game.Players.localPlayer.PlayerGui.godroot.msg.msg3.Visible = true
   		else
			game.Players.localPlayer.PlayerGui.godroot.msg.msg3.Visible = false
		end
	end
})
textSection:AddTextbox({
	Name = "Msg 3",
	Value = "",
	Placeholder = "msg",
	Type = "String",
	Callback = function(t,o)
		game.Players.localPlayer.PlayerGui.godroot.msg.msg3.Text = t
	end
})

textSection:AddToggle({
	Name = "Msg 4",
	Value = false,
	Callback = function(t, o)
		
		if t then
			game.Players.localPlayer.PlayerGui.godroot.msg.msg4.Visible = true
   		else
			game.Players.localPlayer.PlayerGui.godroot.msg.msg4.Visible = false
		end
	end
})
textSection:AddTextbox({
	Name = "Msg 4",
	Value = "",
	Placeholder = "msg",
	Type = "String",
	Callback = function(t,o)
		game.Players.localPlayer.PlayerGui.godroot.msg.msg4.Text = t
	end
})

textSection:AddToggle({
	Name = "Msg 5",
	Value = false,
	Callback = function(t, o)
		
		if t then
			game.Players.localPlayer.PlayerGui.godroot.msg.msg5.Visible = true
   		else
			game.Players.localPlayer.PlayerGui.godroot.msg.msg5.Visible = false
		end
	end
})
textSection:AddTextbox({
	Name = "Msg 5",
	Value = "",
	Placeholder = "msg",
	Type = "String",
	Callback = function(t,o)
		game.Players.localPlayer.PlayerGui.godroot.msg.msg5.Text = t
	end
})



GamePassSection:AddToggle({Name = "Img Dark blade",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.boot.darkblade.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.boot.darkblade.Visible = false
	end
end})

GamePassSection:AddToggle({Name = "Img X2 Money",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.boot.money.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.boot.money.Visible = false
	end
end})

GamePassSection:AddToggle({Name = "Img X2 BossDrop",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.boot.drop.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.boot.drop.Visible = false
	end
end})

GamePassSection:AddToggle({Name = "Img Fast Boat",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.boot.boat.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.boot.boat.Visible = false
	end
end})

GamePassSection:AddToggle({Name = "Img X2 Mastery",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.boot.mastery.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.boot.mastery.Visible = false
	end
end})

GamePassSection:AddToggle({Name = "Img Fruit Notify",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.boot.fruit.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.boot.fruit.Visible = false
	end
end})

OCombatSection:AddToggle({Name = "Img God human",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.combat.godhuman.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.combat.godhuman.Visible = false
	end
end})

OCombatSection:AddToggle({Name = "Img Superhuman",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.combat.superhuman.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.combat.superhuman.Visible = false
	end
end})

OCombatSection:AddToggle({Name = "Img Sharkman",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.combat.sharkman.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.combat.sharkman.Visible = false
	end
end})

OCombatSection:AddToggle({Name = "Img Karate",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.combat.karate.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.combat.karate.Visible = false
	end
end})

OCombatSection:AddToggle({Name = "Img Electro",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.combat.electro.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.combat.electro.Visible = false
	end
end})

OCombatSection:AddToggle({Name = "Img Electric claw",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.combat.elecclaw.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.combat.elecclaw.Visible = false
	end
end})

OCombatSection:AddToggle({Name = "Img Dragon talon",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.combat.talon.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.combat.talon.Visible = false
	end
end})

OCombatSection:AddToggle({Name = "Img Dragon claw",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.combat.dragonclaw.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.combat.dragonclaw.Visible = false
	end
end})

OCombatSection:AddToggle({Name = "Img Death step",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.combat.deathstep.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.combat.deathstep.Visible = false
	end
end})

OCombatSection:AddToggle({Name = "Img Black leg",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.combat.blackleg.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.combat.blackleg.Visible = false
	end
end})

ImagesSection:AddToggle({Name = "Img Bomb Fruit",
    Value = false,
    Callback = function(t, o)
	if t then
		game.Players.localPlayer.PlayerGui.godroot.fruit.bomb.Visible = true
    else
		game.Players.localPlayer.PlayerGui.godroot.fruit.bomb.Visible = false
	end
end})

ImagesSection:AddToggle({Name = "Img Spike Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.spike.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.spike.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Chop Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.chop.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.chop.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Smoke Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.smoke.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.smoke.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Flame Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.flame.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.flame.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Ice Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.ice.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.ice.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Sand Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.sand.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.sand.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Dark Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.dark.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.dark.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Light Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.light.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.light.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Rubber Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.gum.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.gum.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Barrier Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.barrier.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.barrier.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Magma Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.magma.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.magma.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Quake Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.quake.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.quake.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Buddha Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.budda.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.budda.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img String Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.string.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.string.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Phoenix Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.pheonix.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.pheonix.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Rumble Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.rumble.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.rumble.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Paw Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.paw.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.paw.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Gravity Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.gravity.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.gravity.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Dough Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.dough.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.dough.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Control Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.control.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.control.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Dragon Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.dragon.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.dragon.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Kilo Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.kilo.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.kilo.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Spin Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.spin.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.spin.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Falcon Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.falcon.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.falcon.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Diamond Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.diamond.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.diamond.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Love Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.love.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.love.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Door Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.door.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.door.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Venom Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.venom.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.venom.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Shadow Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.shadow.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.shadow.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Revive Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.revive.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.revive.Visible = false
		end
end})

ImagesSection:AddToggle({Name = "Img Soul Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.soul.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.soul.Visible = false
		end
end})
ImagesSection:AddToggle({Name = "Img Leopard Fruit",
    Value = false,
    Callback = function(t, o)
		if t then
			game.Players.localPlayer.PlayerGui.godroot.fruit.Leopard.Visible = true
		else
			game.Players.localPlayer.PlayerGui.godroot.fruit.Leopard.Visible = false
		end
end})


for i, e in pairs(game:GetService("Workspace").Map:GetDescendants()) do
	if e:IsA("Seat") then e:Destroy() end  --e:IsA("ColorCorrectionEffect") or
end

lightof = Instance.new('ColorCorrectionEffect', game:GetService("Lighting"))
lightof.Name = "godlol"
lightof.Brightness = 0
game:GetService("Lighting").godlol.Enabled = true

FarmSection:AddToggle({Name = "Auto Rejoin (For Game Kick)",
	Flag = "Auto_Rejoin",
    Value = _G.Autorejoin,
    Callback = function(t, o)
   	 _G.Autorejoin = t
	savenaja()
    end
})


function GetMaterial(matname)
	for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
		if type(v) == "table" then
			if v.Type == "Material" then
				if v.Name == matname then
					return tonumber(v.Count)
				end
			end
		end
	end
	return 0
end

function GetWeaponInventory(Weaponname)
	for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
		if type(v) == "table" then
			if v.Type == "Sword" then
				if v.Name == Weaponname then
					return true
				end
			end
		end
	end
	return false
end

function GetFruitInventory(Weaponname)
	for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
		if type(v) == "table" then
			if v.Type == "Blox Fruit" then
				if v.Name == Weaponname then
					return true
				end
			end
		end
	end
	return false
end

spawn(function()
	while wait() do
		local GUI = game.CoreGui.RobloxPromptGui.promptOverlay:FindFirstChild("ErrorPrompt")
		if GUI then
			if _G.Autorejoin and GUI.TitleFrame.ErrorTitle.Text == "Disconnected" then
				local ts = game:GetService("TeleportService")
				local p = game:GetService("Players").LocalPlayer
				ts:Teleport(game.PlaceId, p)
			end

		end
	end
end)
	
allcode = {
    "2BILLION", "UPD15", "TantaiGaming", "Axiore", "Sub2Daigrock",
    "SUB2NOOBMASTER123", "Sub2OfficialNoobie", "UPD14", "StrawHatMaine",
    "THEGREATACE", "SUB2GAMERROBOT_EXP1", "bluxxy", "Sub2Fer999", "Enyu_is_Pro", "Magicbus", "kittgaming",
	"GAMERROBOT_YT"
}

FarmSection:AddToggle({Name = "Server Hop",
	Flag = "ServerHop",
    Value = _G.ServerHop,
    Callback = function(t, o)
   	 _G.ServerHop = t
	savenaja()
    end
})

FarmSection:AddToggle({Name = "Server Hop Now!!",
	Flag = "ServerHop_Now",
    Value = _G.ServerHopNow,
    Callback = function(t, o)
   	 _G.ServerHopNow = t
	savenaja()
    end
})


FarmSection:AddToggle({Name = "Auto 1-Max 1Click",
	Flag = "Kaiton",
    Value = _G.clickto,
    Callback = function(t, o)
		_G.clickto = t
		if _G.clickto then
				_G.AutoFarm = true
				_G.Kaitan  = true
				_G.AutoFarm = true
				_G.Superhuman_Full = true
				_G.AutoNewworld = true
				_G.AutoSuperhuman = true
				_G.AutoSaber = true
				_G.AutoStatSet1 = true
				--_G.BlackScreen = true
				_G.LegendarySword = true
				_G.AutoThirdworld = true
				_G.AutoBuyExpX2 = true
				_G.Randomfruit = true
				--_G.ServerHop = t
				_G.FPSBOOT = true
				openfac = true
				if _G.AutoFarm then
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
					pcall(function()
						local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
						local g = game
						local w = g.Workspace
						local l = g.Lighting
						local t = w.Terrain
						t.WaterWaveSize = 0
						t.WaterWaveSpeed = 0
						t.WaterReflectance = 0
						t.WaterTransparency = 0
						l.GlobalShadows = false
						l.FogEnd = 9e9
						l.Brightness = 0
						settings().Rendering.QualityLevel = "Level01"
						for i, v in pairs(g:GetDescendants()) do
							if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or
								v:IsA("TrussPart") then
								v.Material = "Plastic"
								v.Reflectance = 0
							elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
								v.Transparency = 1
							elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
								v.Lifetime = NumberRange.new(0)
							elseif v:IsA("Explosion") then
								v.BlastPressure = 1
								v.BlastRadius = 1
							elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or
								v:IsA("Sparkles") then
								v.Enabled = false
							elseif v:IsA("MeshPart") then
								v.Material = "Plastic"
								v.Reflectance = 0
								v.TextureID = 10385902758728957
							end
						end
						for i, e in pairs(l:GetChildren()) do
							if e:IsA("BlurEffect") or e:IsA("SunRaysEffect")  or e:IsA("BloomEffect") or
								e:IsA("DepthOfFieldEffect") then e.Enabled = false end -- or e:IsA("ColorCorrectionEffect")
						end
					end)
				else
		   
				end
				for i = 1, #allcode do
					game.ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Redeem"):InvokeServer(allcode[i]);
				end
			
		else
			pcall(function()
				_G.KillAura = false
				_G.AutoRaid = false
				_G.AutoFarm = false
				_G.Kaitan  = false
				_G.AutoFarm = false
				_G.Superhuman_Full = false
				_G.AutoNewworld = false
				_G.AutoSuperhuman = false
				_G.AutoSaber = false
				_G.AutoStatSet1 = false
				--_G.BlackScreen = false
				_G.LegendarySword = false
				_G.AutoThirdworld = false
				_G.AutoBuyExpX2 = false
				_G.Randomfruit = false
				--_G.ServerHop = t
				_G.FPSBOOT = false
				openfac = false
				pcall(function()
					_G.tweennew:Cancel()
				end)
			end)  
		end
		--if _G.BlackScreen then
            --game:GetService("Lighting").godlol.Brightness = -100
        --else
            --game:GetService("Lighting").godlol.Brightness = 0
        --end
		savenaja()
    end
})

FarmSection:AddToggle({Name = "Auto-Farm Level",
	Flag = "Auto_FarmLv",
    Value = _G.AutoFarm,
    Callback = function(t, o)
    _G.AutoFarm = t
	openfac = t
    if _G.AutoFarm then
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
    else
        pcall(function()
             _G.tweennew:Cancel()
        end)   
    end
	savenaja()
    end
})
if OldWorld then
	FarmSection:AddToggle({Name = "📌 Addon PVP Quest (lv < 300)",
		Flag = "Auto_pvpquest",
		Value = false,
		Callback = function(t, o)
		_G.kuypvpq = t
			pcall(function()
				_G.tweennew:Cancel()
			end)   
		savenaja()
		end
	})
end
FarmSection:AddToggle({
    Name = "Auto Superhuman  (Multi)",
	Flag = "Superhuman",
	Value = _G.AutoSuperhuman,
    Callback = function(t, o)
        _G.AutoSuperhuman = t
		savenaja()
    end
})
if  newworld  or sea3world then
	OtherSection:AddToggle({
		Name = "📦 Auto Material (God human) 📦",
		Flag = "Godhuman",
		Callback = function(t, o)
				_G.autoMaterial = t
				if not _G.autoMaterial then
					pcall(function()
						_G.tweennew:Cancel()
					end)
				end
			savenaja()
		end
	})
	OtherSection:AddToggle({
		Name = "Auto Farm Ken + Rejoin",
		Flag = "Ken_rejoin",
		Value = _G.AutoFarmken,
		Callback = function(t, o)
				_G.AutoFarmken = t
				if not t then
					pcall(function()
						_G.tweennew:Cancel()
					end)
				end
			savenaja()
		end
	})
end
if OldWorld then
    FarmSection:AddToggle({
        Name = "Auto Second World  (Multi)",
		Flag = "SecondWorld",
        Value = _G.AutoNewworld,
        Callback = function(t, o)
            _G.AutoNewworld = t
            if  _G.AutoNewworld then
            else
                pcall(function()
                    _G.tweennew:Cancel()
                end)    
            end
			savenaja()
        end
    })

    FarmSection:AddToggle({
        Name = "Auto Saber  (Multi)",
		Flag = "Saber",
        Value = _G.AutoSaber,
        Callback = function(t, o)
            if OldWorld then
                _G.AutoSaber = t
                if not  _G.AutoSaber then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                    if openfac then
                        _G.AutoFarm = true
                    end
                end
            end
			savenaja()
        end
    })


    OtherSection:AddToggle({
        Name = "Auto Pole V1  (Single)",
		Flag = "Polev1",
        Value = _G.AutoPole,
        Callback = function(t, o)
            if OldWorld then
                _G.AutoPole = t
                if not _G.AutoPole then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })
    


end
if newworld then

    FarmSection:AddToggle({
        Name = "Auto Third World  (Multi)",
		Flag = "Thirdworld",
        Value = _G.AutoThirdworld,
        Callback = function(t, o)
            _G.AutoThirdworld = t
            if not _G.AutoThirdworld then
                pcall(function()
                   _G.tweennew:Cancel()
                end)    
            end
			savenaja()
        end
    })
	OtherSection:AddToggle({
        Name = "Auto Law Raid  (Single)",
		Flag = "Order_boss",
        Value = false,
        Callback = function(t, o)
            if newworld then
                _G.Lawraid = t
                if not _G.Lawraid then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })
    OtherSection:AddToggle({
        Name = "Auto Flower 3 Color  (Single)",
		Flag = "Flower3",
        Value = _G.dokmind,
        Callback = function(t, o)
            if newworld then
                _G.dokmind = t
                if not _G.dokmind then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })
    OtherSection:AddToggle({
        Name = "Auto Rengoku  (Single)",
		Flag = "Rengoku",
        Callback = function(t, o)
            if newworld then
                _G.AutoRengoku = t
                if not _G.AutoRengoku then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })
    OtherSection:AddToggle({
        Name = "Auto Ectoplasm  (Single)",
		Flag = "Ectoplasm",
        Callback = function(t, o)
            if newworld then
                _G.AutoEs = t
                if not _G.AutoEs then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

    OtherSection:AddToggle({
        Name = "Auto Library Key  (Single)",
		Flag = "Library_Key",
        Value = _G.AutoLibraryKey,
        Callback = function(t, o)
            if newworld then
                _G.AutoLibraryKey = t
                if not _G.AutoLibraryKey then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

    OtherSection:AddToggle({
        Name = "Auto Water Key  (Single)",
		Flag = "Water_key",
        Value = _G.AutoWater,
        Callback = function(t, o)
            if newworld then
                _G.AutoWater = t
                if not  _G.AutoWater then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

    OtherSection:AddToggle({
        Name = "Auto Bartilo Quest  (Single)",
		Flag = "Bartilo_quest",
        Callback = function(t, o)
            if newworld then
                _G.Bartiloquest = t
                if _G.Bartiloquest then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                else
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

	

end

if sea3world then
    FarmSection:AddToggle({
        Name = "Auto Elite Hunter  (Multi)",
		Flag = "Elite_hunter",
        Value = _G.AutoEliteBoss,
        Callback = function(t, o)
            if sea3world then
                _G.AutoEliteBoss = t
                if  _G.AutoEliteBoss then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                else
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })
	OtherSection:AddToggle({
        Name = "Auto Tushita Scroll [Beta Bug]",
		Flag = "Tushita_scroll",
        Callback = function(t, o)
            if sea3world then
                _G.cdkp1 = t
                if not _G.cdkp1 then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

	OtherSection:AddToggle({
        Name = "Auto Yama Scroll [Beta Bug]",
		Flag = "Yama_scroll",
        Callback = function(t, o)
            if sea3world then
                _G.cdkp2 = t
                if not _G.cdkp2 then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

	OtherSection:AddToggle({
        Name = "🍫 Auto Farm Cocoa 🍫",
		Flag = "Cocoa",
        Callback = function(t, o)
            if sea3world then
                _G.AutoCocoa = t
                if not _G.AutoCocoa then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })
	OtherSection:AddToggle({
        Name = "🍩 Auto Unlock Dough Riad 🍩",
		Flag = "Unlock_dough",
        Callback = function(t, o)
            if sea3world then
                _G.UnlockRiad = t
                if not _G.UnlockRiad then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })
	OtherSection:AddToggle({
        Name = "🍷 Auto God's Chalice 🍷",
		Flag = "God_chalice",
        Callback = function(t, o)
            if sea3world then
                _G.GodChalice = t
                if not _G.GodChalice then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })
	enemie = OtherSection:AddLabel({Text =""})
    OtherSection:AddToggle({
        Name = "👑 Auto Cake Prince Boss 👑",
		Flag = "Cake_prince",
        Callback = function(t, o)
            if sea3world then
                _G.AutoPrince = t
                if not _G.AutoPrince then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

    OtherSection:AddToggle({
        Name = "🧛‍♂️ Auto Soul Reaper Boss 🧛‍♂️",
		Flag = "Soul_reaper",
        Callback = function(t, o)
            if sea3world then
                _G.AutoReper = t
                if not _G.AutoReper then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

    OtherSection:AddToggle({
        Name = "🦴 Auto Farm Bones 🦴",
		Flag = "Farm_bones",
        Callback = function(t, o)
            if sea3world then
                _G.AutoBones = t
                if not _G.AutoBones then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

	

    OtherSection:AddToggle({
        Name = "Auto Rip_Indra (Single)",
        Value = _G.AutoTushita,
		Flag = "Rip_indra",
        Callback = function(t, o)
            if sea3world then
                _G.AutoTushita = t
				_G.checkup = true
                if not t then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })
	OtherSection:AddToggle({
        Name = "Auto Tushita (Single)",
        Value = _G.AutoTushita2,
		Flag = "AutoTushita",
        Callback = function(t, o)
            if sea3world then
                _G.AutoTushita2 = t
				_G.checkup100 = true
                if not t then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

    OtherSection:AddToggle({
        Name = "Auto Yama Sword  (Single)",
		Flag = "Yama",
        Value = _G.AutoYama,
        Callback = function(t, o)
            if sea3world then
                _G.AutoYama = t
				
                if not _G.AutoYama then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

    OtherSection:AddToggle({
        Name = "Auto Canvander Sword  (Single)",
		Flag = "Canvander",
        Value = _G.CanvanderSword,
        Callback = function(t, o)
            if sea3world then
                _G.CanvanderSword = t
                if not _G.CanvanderSword then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

    OtherSection:AddToggle({
        Name = "Auto Buddy Sword  (Single)",
		Flag = "Buddy",
        Value = _G.BuddySword,
        Callback = function(t, o)
            if sea3world then
                _G.BuddySword = t
                if not _G.BuddySword then
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

    OtherSection:AddToggle({
        Name = "Auto Rainbow Haki  (Single)",
		Flag = "Rainbow",
        Callback = function(t, o)
            if sea3world then
                _G.AutoRainbow = t
                if _G.AutoRainbow then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                else
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })

    OtherSection:AddToggle({
        Name = "Auto Musketeer Hat  (Single)",
		Flag = "Musketeer",
        Callback = function(t, o)
            if sea3world then
                _G.AutoMusketeer = t
                if _G.AutoMusketeer then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                    tp(-12443.2246, 332.403961, -7673.03906, 0.994821548, -8.22384791e-08, 0.101637013, 7.49311511e-08, 1, 7.57140626e-08, -0.101637013, -6.77062033e-08, 0.994821548)
                    wait(1.5)
                else
                    pcall(function()
                        _G.tweennew:Cancel()
                    end)
                end
            end
			savenaja()
        end
    })


end




weapon = {}
weaponfruit = {}
weaponGun = {}
function EquipWeapon(ToolSe)
    if game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) then
        local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
        wait(0.1)
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
    end
end
function r()
    
end
for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        table.insert(weapon, v.Name)
        if v:IsA("Tool") and v.ToolTip == "Melee" then
         
        end
        if v:IsA("Tool") and v.ToolTip == "Blox Fruit" then
            table.insert(weaponfruit, v.Name)
        end
        if v:IsA("Tool") and v.ToolTip == "Gun" then
            table.insert(weaponGun, v.Name)
        end
    end
end

for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
    if v:IsA("Tool") then
        table.insert(weapon, v.Name)
        if v:IsA("Tool") and v.ToolTip == "Melee" then
           
        end
        if v:IsA("Tool") and v.ToolTip == "Blox Fruit" then
            table.insert(weaponfruit, v.Name)
        end
        if v:IsA("Tool") and v.ToolTip == "Gun" then
            table.insert(weaponGun, v.Name)
        end
    end
end

WeaponSection:AddDropdown({
    Name = "Select Weapon",
	Flag = "Main_weapon",
    List  = function()
        weapon = {}
		table.insert(weapon, '')
        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") then
                table.insert(weapon, v.Name)
            end
        end
        
        for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if v:IsA("Tool") then
                table.insert(weapon, v.Name)
            end
        end
		
        return weapon
    end,
    Callback = function(t, o)
        _G.SelectWeapon = t
		--print(_G.SelectWeapon)
        SelectWeaponOld = o
		savenaja()
    end
})

WeaponSection:AddTextbox({
	Name = "Fake Level",
	Flag = "Fake_level",
	Min = 0,
	Placeholder = "0",
	Type = "number",
	Callback = function(t,o)
		game:GetService("Players").LocalPlayer.Data.Level.Value = t
	end
})
kencheckz = WeaponSection:AddLabel({Text = "Ken Haki "..game:GetService("Players").LocalPlayer.VisionRadius.Value})

--WeaponSection:AddLabel({name = "-"})

BoneSection:AddToggle({
    Name = "Auto Random Surprise",
	Flag = "Random_surprise",
    Value = _G.RandomSurprise,
    Callback = function(t, o)
        _G.RandomSurprise = t
		savenaja()
    end
})
spawn(function()
    while wait(1) do
        if _G.RandomSurprise then
            wait()
            if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones", "Check") >= 50 then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones", "Buy", 1, 1)
            end

        end
    end
end)
BoneSection:AddButton({
    Name = "Random Surprise",
    Callback = function()
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones", "Buy", 1, 1)
end})

BoneSection:AddButton({
    Name = "Stats Refund",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones", "Buy", 1, 2)
end})

BoneSection:AddButton({
    Name = "Race Reroll",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones", "Buy", 1, 3)
end})

allcode = {
    "2BILLION", "UPD15", "TantaiGaming", "Axiore", "Sub2Daigrock",
    "SUB2NOOBMASTER123", "Sub2OfficialNoobie", "UPD14", "StrawHatMaine",
    "THEGREATACE", "SUB2GAMERROBOT_EXP1", "bluxxy", "Sub2Fer999", "Enyu_is_Pro", "Magicbus", "kittgaming",
	"GAMERROBOT_YT"
}
SettingSection:AddButton({
    Name = "Redeem All Code",
    Callback = function()
        for i = 1, #allcode do
            game.ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Redeem"):InvokeServer(allcode[i]);
        end
end})
SettingSection:AddButton({
    Name = "FPS Boost",
    Callback = function()
        local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
    local g = game
    local w = g.Workspace
    local l = g.Lighting
    local t = w.Terrain
    t.WaterWaveSize = 0
    t.WaterWaveSpeed = 0
    t.WaterReflectance = 0
    t.WaterTransparency = 0
    l.GlobalShadows = false
    l.FogEnd = 9e9
    l.Brightness = 0
    settings().Rendering.QualityLevel = "Level01"
    for i, v in pairs(g:GetDescendants()) do
        if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or
            v:IsA("TrussPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or
            v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 10385902758728957
	    elseif v:IsA("Seat") then
            v.Destroy()
        end
    end
	

    for i, e in pairs(l:GetChildren()) do
        if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or
             e:IsA("BloomEffect") or
            e:IsA("DepthOfFieldEffect") then e.Enabled = false end  --e:IsA("ColorCorrectionEffect") or
    end
end})

SettingSection:AddToggle({
    Name = "Server Time Gui & Elite Gui",
	Flag = "Ui_notify",
    Value = true,
    Callback = function(t, o)
    _G.Dutime = t
    if _G.Dutime then
        game:GetService("Players").LocalPlayer.PlayerGui.Main.test.Visible = true
        game:GetService("Players").LocalPlayer.PlayerGui.Main.TextLabel.Visible = true
        game:GetService("Players").LocalPlayer.PlayerGui.Main.boty.Visible = true

    else
        game:GetService("Players").LocalPlayer.PlayerGui.Main.TextLabel.Visible = false
        game:GetService("Players").LocalPlayer.PlayerGui.Main.test.Visible = false
  		game:GetService("Players").LocalPlayer.PlayerGui.Main.boty.Visible = false

    end
	savenaja()
end})
spawn(function()
    while true do wait()
		if _G.Dutime then
        wait(5)
		kencheckz:Set("Ken Haki "..string.gsub(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk","Status"), "%X.+", ""))
        game:GetService("Players").LocalPlayer.PlayerGui.Main.test.Text = "Elite Hunter = " ..game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter","Progress")
        game:GetService("RunService").RenderStepped:Wait()
		end
    end
end)

 
local CombatFramework = require(game:GetService("Players").LocalPlayer.PlayerScripts:WaitForChild("CombatFramework"))
local CombatFrameworkR = getupvalues(CombatFramework)[2]
local RigController = require(game:GetService("Players")["LocalPlayer"].PlayerScripts.CombatFramework.RigController)
local RigControllerR = getupvalues(RigController)[2]
local realbhit = require(game.ReplicatedStorage.CombatFramework.RigLib)
local cooldownfastattack = tick()



function CurrentWeapon()
	local ac = CombatFrameworkR.activeController
	local ret = ac.blades[1]
	if not ret then return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name end
	pcall(function()
		while ret.Parent~=game.Players.LocalPlayer.Character do ret=ret.Parent end
	end)
	if not ret then return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name end
	return ret
end

function getAllBladeHitsPlayers(Sizes)
	local Hits = {}
	local Client = game.Players.LocalPlayer
	local Characters = game:GetService("Workspace").Characters:GetChildren()
	for i=1,#Characters do local v = Characters[i]
		local Human = v:FindFirstChildOfClass("Humanoid")
		if v.Name ~= game.Players.LocalPlayer.Name and Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes+5 then
			table.insert(Hits,Human.RootPart)
		end
	end
	return Hits
end

function getAllBladeHits(Sizes)
	local Hits = {}
	local Client = game.Players.LocalPlayer
	local Enemies = game:GetService("Workspace").Enemies:GetChildren()
	for i=1,#Enemies do local v = Enemies[i]
		local Human = v:FindFirstChildOfClass("Humanoid")
		if Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes+5 then
			table.insert(Hits,Human.RootPart)
		end
	end
	return Hits
end

function AttackFunction()
	local ac = CombatFrameworkR.activeController
	if ac and ac.equipped then
		for indexincrement = 1, 1 do
			local bladehit = getAllBladeHits(60)
			if #bladehit > 0 then
				local AcAttack8 = debug.getupvalue(ac.attack, 5)
				local AcAttack9 = debug.getupvalue(ac.attack, 6)
				local AcAttack7 = debug.getupvalue(ac.attack, 4)
				local AcAttack10 = debug.getupvalue(ac.attack, 7)
				local NumberAc12 = (AcAttack8 * 798405 + AcAttack7 * 727595) % AcAttack9
				local NumberAc13 = AcAttack7 * 798405
				(function()
					NumberAc12 = (NumberAc12 * AcAttack9 + NumberAc13) % 1099511627776
					AcAttack8 = math.floor(NumberAc12 / AcAttack9)
					AcAttack7 = NumberAc12 - AcAttack8 * AcAttack9
				end)()
				AcAttack10 = AcAttack10 + 1
				debug.setupvalue(ac.attack, 5, AcAttack8)
				debug.setupvalue(ac.attack, 6, AcAttack9)
				debug.setupvalue(ac.attack, 4, AcAttack7)
				debug.setupvalue(ac.attack, 7, AcAttack10)
				for k, v in pairs(ac.animator.anims.basic) do
					v:Play(0.01,0.01,0.01)
				end                 
				if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and ac.blades and ac.blades[1] then 
					game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("weaponChange",tostring(CurrentWeapon()))
					game.ReplicatedStorage.Remotes.Validator:FireServer(math.floor(NumberAc12 / 1099511627776 * 16777215), AcAttack10)
					game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", bladehit, 2, "") 
				end
			end
		end
	end
end

function AttackPlayers()
	local ac = CombatFrameworkR.activeController
	if ac and ac.equipped then
		for indexincrement = 1, 1 do
			local bladehit = getAllBladeHitsPlayers(60)
			if #bladehit > 0 then
				local AcAttack8 = debug.getupvalue(ac.attack, 5)
				local AcAttack9 = debug.getupvalue(ac.attack, 6)
				local AcAttack7 = debug.getupvalue(ac.attack, 4)
				local AcAttack10 = debug.getupvalue(ac.attack, 7)
				local NumberAc12 = (AcAttack8 * 798405 + AcAttack7 * 727595) % AcAttack9
				local NumberAc13 = AcAttack7 * 798405
				(function()
					NumberAc12 = (NumberAc12 * AcAttack9 + NumberAc13) % 1099511627776
					AcAttack8 = math.floor(NumberAc12 / AcAttack9)
					AcAttack7 = NumberAc12 - AcAttack8 * AcAttack9
				end)()
				AcAttack10 = AcAttack10 + 1
				debug.setupvalue(ac.attack, 5, AcAttack8)
				debug.setupvalue(ac.attack, 6, AcAttack9)
				debug.setupvalue(ac.attack, 4, AcAttack7)
				debug.setupvalue(ac.attack, 7, AcAttack10)
				for k, v in pairs(ac.animator.anims.basic) do
					v:Play(0.01,0.01,0.01)
				end                 
				if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and ac.blades and ac.blades[1] then 
					game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("weaponChange",tostring(CurrentWeapon()))
					game.ReplicatedStorage.Remotes.Validator:FireServer(math.floor(NumberAc12 / 1099511627776 * 16777215), AcAttack10)
					game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", bladehit, 2, "") 
				end
			end
		end
	end
end

--[[
SettingSection:AddToggle({
    Name = "Fast Attack Mode",
	Flag = "Fasttack",
    Value = true,
    Callback = function(t, o)
    _G.FastAttackMode = t
	_G.FastAttackMode1 = t
	savenaja()
end})
]]
SettingSection:AddToggle({
    Name = "Bypass tp",
	Flag = "Bypass_tp",
    Value = true,
    Callback = function(t, o)
    _G.bypasstp = t
	savenaja()
end})
SettingSection:AddToggle({
    Name = "Fast Attack X2 (Warning Kick)",
	Flag = "Fasttackv2",
    Value = true,
    Callback = function(t, o)
    _G.SuperFastAttackMode = t
	_G.SuperFastAttackMode1 = t
	savenaja()
end})


SettingSection:AddToggle({
    Name = "White Screen",
	Flag = "White_screen",
    Value = _G.WhiteScreen,
    Callback = function(t, o)
        _G.WhiteScreen = t
        if _G.WhiteScreen then
            game:GetService("Lighting").godlol.Brightness = 100
        else
            game:GetService("Lighting").godlol.Brightness = 0
        end
		savenaja()
end})

SettingSection:AddToggle({
    Name = "Black Screen",
	Flag = "Black_screen",
    Value = _G.BlackScreen,
    Callback = function(t, o)
        _G.BlackScreen = t
        if _G.BlackScreen then
            game:GetService("Lighting").godlol.Brightness = -100
        else
            game:GetService("Lighting").godlol.Brightness = 0
        end
		savenaja()
end})

SettingSection:AddToggle({
    Name = "Hide HitBox",
	Flag = "Hitbox",
    Value = true,
    Callback = function(t, o)
        hit = t
		savenaja()
end})

SettingSection:AddToggle({
    Name = "Bring Mob",
	Flag = "Bring_mob",
    Value = true,
    Callback = function(t, o)
        bring = t
		savenaja()
end})

SettingSection:AddToggle({
    Name = "Auto Ken",
	Flag = "Autoken",
    Callback = function(t, o)
        kenhaki = t
		savenaja()
end})

local stopken = true
spawn(function()
    while wait(1) do
        if kenhaki or _G.AutoFarmken then
            local virtualUser = game:GetService('VirtualUser')
            virtualUser:CaptureController()
            pcall(function()
                if not game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("TextLabel") then
                    pcall(function()
                        virtualUser:SetKeyDown('e')
                        -- wait(2)
                        virtualUser:SetKeyUp('e')                     
                        if _G.AutoFarmken  then --and _G.ServerHop
                           
                            repeat
                                wait(1)
                                if newworld and stopken then
									game:GetService("Players").LocalPlayer.Character.Humanoid:UnequipTools()
                                    if game.Workspace.Enemies:FindFirstChild("Water Fighter [Lv. 1450]") then

                                        tp(game.Workspace.Enemies:FindFirstChild("Water Fighter [Lv. 1450]").HumanoidRootPart.CFrame * CFrame.new(1, 0, 0))
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")

                                    else
                                        --tp(game.ReplicatedStorage:FindFirstChild("Water Fighter [Lv. 1450]").HumanoidRootPart.CFrame * CFrame.new(1, 0, 0))
										local subname = string.gsub("Water Fighter [Lv. 1450]", "%p", "")
										local realname = string.gsub(subname, "%s+Lv %d+.+", "")
										if game.ReplicatedStorage:FindFirstChild("Water Fighter [Lv. 1450]") then
											tp(game.ReplicatedStorage:FindFirstChild("Water Fighter [Lv. 1450]").HumanoidRootPart.CFrame * CFrame.new(1, 0, 0))

										elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Water Fighter [Lv. 1450]") then
											tp(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Water Fighter [Lv. 1450]"].CFrame * CFrame.new(1, 0, 0))
											
										elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
											tp(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(1, 0, 0))
										end
                                    end
                                elseif sea3world and stopken then
									game:GetService("Players").LocalPlayer.Character.Humanoid:UnequipTools()
                                    if game.Workspace.Enemies:FindFirstChild("Mythological Pirate [Lv. 1850]") then

                                        tp(game.Workspace.Enemies:FindFirstChild("Mythological Pirate [Lv. 1850]").HumanoidRootPart.CFrame * CFrame.new(1, 0, 0))
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")

                                    else

										local subname = string.gsub("Mythological Pirate [Lv. 1850]", "%p", "")
										local realname = string.gsub(subname, "%s+Lv %d+.+", "")
										if game.ReplicatedStorage:FindFirstChild("Mythological Pirate [Lv. 1850]") then
											tp(game.ReplicatedStorage:FindFirstChild("Mythological Pirate [Lv. 1850]").HumanoidRootPart.CFrame * CFrame.new(1, 0, 0))

										elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Mythological Pirate [Lv. 1850]") then
											tp(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Mythological Pirate [Lv. 1850]"].CFrame * CFrame.new(1, 0, 0))

										elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
											tp(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(1, 0, 0))
										end
                                        --tp(game.ReplicatedStorage:FindFirstChild("Mythological Pirate [Lv. 1850]").HumanoidRootPart.CFrame * CFrame.new(1, 0, 0))
                                    
									end
                                end
                            until not stopken or not game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("TextLabel")
                            stopken = false
                            if newworld then
                                --tp(CFrame.new(-380.411011, 72.8180008, 303.237))
                                --Hopey()
								local ts = game:GetService("TeleportService")
								local p = game:GetService("Players").LocalPlayer
								ts:Teleport(game.PlaceId, p)
                            elseif sea3world then
                                --tp(CFrame.new(-12554.9443, 337.194092,-7501.44727))
                                --Hopey()
								local ts = game:GetService("TeleportService")
								local p = game:GetService("Players").LocalPlayer
								ts:Teleport(game.PlaceId, p)
                            end
                            _G.tweennew.Completed:Wait()
                        end
                    end)
                end
            end)
        end
    end
end)
--[[
SettingSection:AddToggle({
    Name = "Mob Invisible",
    Value = _G.Invisible,
    Callback = function(t, o)
        _G.Invisible = t
		savenaja()
end})
]]
SettingSection:AddSlider({
    Name = "Distance",
	Flag = "Distance",
    Value = 25,
    Min = 0,
    Max = 70,
    Textbox = true,
    Callback = function(t, o)
        Instantnum = t
		savenaja()
    end
})

SettingSection:AddToggle({
    Name = "Mastery Skill Z",
    Value = true,
    Callback = function(t, o)
        SkillZ = t
end})
SettingSection:AddToggle({
    Name = "Mastery Skill X",
    Value = true,
    Callback = function(t, o)
        SkillX = t
end})
SettingSection:AddToggle({
    Name = "Mastery Skill C",
    Value = true,
    Callback = function(t, o)
        SkillC = t
end})
SettingSection:AddToggle({
    Name = "Mastery Skill V",
    Value = true,
    Callback = function(t, o)
        SkillV = t
end})


function autobuso()
    pcall(function()
        if not game.Players.LocalPlayer.Character:FindFirstChild("HasBuso") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
        end
        if OldWorld and _G.AutoNewworld and game.Players.localPlayer.Data.Level.Value >= 700 and
            not game.Players.LocalPlayer.Character:FindFirstChild("HasBuso") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
        end
    end)
end

function CheckQuest()
    local MyLevel = game.Players.localPlayer.Data.Level.Value
    if OldWorld then
        if MyLevel == 1 or MyLevel <= 9 then -- Bandit
            Nmob = "Bandit [Lv. 5]"
            NaemQuest = "BanditQuest1"
            LevelQuest = 1
            NameMon = "Bandit"
            CFrameQuest = CFrame.new(1061.66699, 16.5166187, 1544.52905)
	    --[[
        elseif MyLevel == 10 or MyLevel <= 14 then -- Monkey
            Nmob = "Monkey [Lv. 14]"
            NaemQuest = "JungleQuest"
            LevelQuest = 1
            NameMon = "Monkey"
            CFrameQuest = CFrame.new(-1604.12012, 36.8521118, 154.23732)
        elseif MyLevel == 15 or MyLevel <= 29 then -- Gorilla
            Nmob = "Gorilla [Lv. 20]"
            NaemQuest = "JungleQuest"
            LevelQuest = 2
            NameMon = "Gorilla"
            CFrameQuest = CFrame.new(-1604.12012, 36.8521118, 154.23732)
        elseif MyLevel == 30 or MyLevel <= 39 then -- Pirate
            Nmob = "Pirate [Lv. 35]"
            NaemQuest = "BuggyQuest1"
            LevelQuest = 1
            NameMon = "Pirates"
            CFrameQuest = CFrame.new(-1139.59717, 4.75205183, 3825.16211)
        elseif MyLevel == 40 or MyLevel <= 59 then -- Brute
            Nmob = "Brute [Lv. 45]"
            NaemQuest = "BuggyQuest1"
            LevelQuest = 2
            NameMon = "Brute"
            CFrameQuest = CFrame.new(-1139.59717, 4.75205183, 3825.16211)
        elseif MyLevel == 60 or MyLevel <= 74 then -- Desert Bandit
            Nmob = "Desert Bandit [Lv. 60]"
            NaemQuest = "DesertQuest"
            LevelQuest = 1
            NameMon = "Desert Bandit"
            CFrameQuest = CFrame.new(897.031128, 6.43846416, 4388.97168)
        elseif MyLevel == 75 or MyLevel <= 89 then -- Desert Officre
            Nmob = "Desert Officer [Lv. 70]"
            NaemQuest = "DesertQuest"
            LevelQuest = 2
            NameMon = "Desert Officer"
            CFrameQuest = CFrame.new(897.031128, 6.43846416, 4388.97168)
        elseif MyLevel == 90 or MyLevel <= 99 then -- Snow Bandits
            Nmob = "Snow Bandit [Lv. 90]"
            NaemQuest = "SnowQuest"
            LevelQuest = 1
            NameMon = "Snow Bandits"
            CFrameQuest = CFrame.new(1384.14001, 87.272789, -1297.06482)
			]]
		elseif MyLevel <= 99 then
			Nmob = "Shanda [Lv. 475]"
            NameMon = "ROOTHUB"
			game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible = true
			game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text = "ROOTHUB"
			--CFrameQuest = CFrame.new(-1604.12012, 36.8521118, 154.23732)
			CFrameQuest = CFrame.new(-7863.63672, 5545.49316, -379.826324)
        elseif MyLevel == 100 or MyLevel <= 119 then -- Snowman
            Nmob = "Snowman [Lv. 100]"
            NaemQuest = "SnowQuest"
            LevelQuest = 2
            NameMon = "Snowman"
            CFrameQuest = CFrame.new(1384.14001, 87.272789, -1297.06482)
        elseif MyLevel == 120 or MyLevel <= 149 then -- Chief Petty Officer
            Nmob = "Chief Petty Officer [Lv. 120]"
            NaemQuest = "MarineQuest2"
            LevelQuest = 1
            NameMon = "Chief Petty Officer"
            CFrameQuest = CFrame.new(-5035.0835, 28.6520386, 4325.29443)
			
		
        elseif MyLevel == 150 or MyLevel <= 174 then -- Sky Bandit
            Nmob = "Sky Bandit [Lv. 150]"
            NaemQuest = "SkyQuest"
            LevelQuest = 1
            NameMon = "Sky Bandit"
            CFrameQuest = CFrame.new(-4841.83447, 717.669617, -2623.96436)
        elseif MyLevel == 175 or MyLevel <= 189 then -- Dark Master
            Nmob = "Dark Master [Lv. 175]"
            NaemQuest = "SkyQuest"
            LevelQuest = 2
            NameMon = "Dark Master"
            CFrameQuest = CFrame.new(-4841.83447, 717.669617, -2623.96436)
        elseif MyLevel == 190 or MyLevel <= 209 then -- Dark Master
            Nmob = "Prisoner [Lv. 190]"
            NaemQuest = "PrisonerQuest"
            LevelQuest = 1
            NameMon = "Prisoners"
            CFrameQuest = CFrame.new(5309.00977, 1.65508568, 473.637543, -0.903921723, 1.23837429e-08, 0.427697957, 1.33110456e-08, 1, -8.2207452e-10, -0.427697957, 4.95001595e-09, -0.903921723)
        elseif MyLevel == 210 or MyLevel <= 249 then -- Dark Master
            Nmob = "Dangerous Prisoner [Lv. 210]"
            NaemQuest = "PrisonerQuest"
            LevelQuest = 2
            NameMon = "Dangerous Prisoners"
            CFrameQuest = CFrame.new(5309.00977, 1.65508568, 473.637543, -0.903921723, 1.23837429e-08, 0.427697957, 1.33110456e-08, 1, -8.2207452e-10, -0.427697957, 4.95001595e-09, -0.903921723)
        elseif MyLevel == 250 or MyLevel <= 274 then -- Toga Warrior
            Nmob = "Toga Warrior [Lv. 250]"
            NaemQuest = "ColosseumQuest"
            LevelQuest = 1
            NameMon = "Toga Warrior"
            CFrameQuest = CFrame.new(-1576.11743, 7.38933945, -2983.30762)
        elseif MyLevel == 275 or MyLevel <= 299 then -- Gladiato
            Nmob = "Gladiator [Lv. 275]"
            NaemQuest = "ColosseumQuest"
            LevelQuest = 2
            NameMon = "Gladiato"
            CFrameQuest = CFrame.new(-1576.11743, 7.38933945, -2983.30762)
        elseif MyLevel == 300 or MyLevel <= 324 then -- Military Soldier
            Nmob = "Military Soldier [Lv. 300]"
            NaemQuest = "MagmaQuest"
            LevelQuest = 1
            NameMon = "Military Soldier"
            CFrameQuest = CFrame.new(-5316.55859, 12.2370615, 8517.2998)
        elseif MyLevel == 325 or MyLevel <= 374 then -- Military Spy
            Nmob = "Military Spy [Lv. 325]"
            NaemQuest = "MagmaQuest"
            LevelQuest = 2
            NameMon = "Military Spy"
            CFrameQuest = CFrame.new(-5316.55859, 12.2370615, 8517.2998)
        elseif MyLevel == 375 or MyLevel <= 399 then -- Fishman Warrior
            Nmob = "Fishman Warrior [Lv. 375]"
            NaemQuest = "FishmanQuest"
            LevelQuest = 1
            NameMon = "Fishman Warrior"
            CFrameQuest = CFrame.new(61122.5625, 18.4716396, 1568.16504)
        elseif MyLevel == 400 or MyLevel <= 449 then -- Fishman Commando
            Nmob = "Fishman Commando [Lv. 400]"
            NaemQuest = "FishmanQuest"
            LevelQuest = 2
            NameMon = "Fishman Commando"
            CFrameQuest = CFrame.new(61122.5625, 18.4716396, 1568.16504)
        elseif MyLevel == 450 or MyLevel <= 474 then -- God's Guards
            Nmob = "God's Guard [Lv. 450]"
            NaemQuest = "SkyExp1Quest"
            LevelQuest = 1
            NameMon = "God's Guards"
            CFrameQuest = CFrame.new(-4721.71436, 845.277161, -1954.20105)
        elseif MyLevel == 475 or MyLevel <= 524 then -- Shandas
            Nmob = "Shanda [Lv. 475]"
            NaemQuest = "SkyExp1Quest"
            LevelQuest = 2
            NameMon = "Shandas"
            CFrameQuest = CFrame.new(-7863.63672, 5545.49316, -379.826324)
        elseif MyLevel == 525 or MyLevel <= 549 then -- Royal Squad
            Nmob = "Royal Squad [Lv. 525]"
            NaemQuest = "SkyExp2Quest"
            LevelQuest = 1
            NameMon = "Royal Squad"
            CFrameQuest = CFrame.new(-7902.66895, 5635.96387, -1411.71802)
        elseif MyLevel == 550 or MyLevel <= 624 then -- Royal Soldier
            Nmob = "Royal Soldier [Lv. 550]"
            NaemQuest = "SkyExp2Quest"
            LevelQuest = 2
            NameMon = "Royal Soldier"
            CFrameQuest = CFrame.new(-7902.66895, 5635.96387, -1411.71802)
        elseif MyLevel == 625 or MyLevel <= 649 then -- Galley Pirate
            Nmob = "Galley Pirate [Lv. 625]"
            NaemQuest = "FountainQuest"
            LevelQuest = 1
            NameMon = "Galley Pirate"
            CFrameQuest = CFrame.new(5254.60156, 38.5011406, 4049.69678)
        elseif MyLevel >= 650 then -- Galley Captain
            Nmob = "Galley Captain [Lv. 650]"
            NaemQuest = "FountainQuest"
            LevelQuest = 2
            NameMon = "Galley Captain"
            CFrameQuest = CFrame.new(5254.60156, 38.5011406, 4049.69678)
        end
    end
    if newworld then
        if MyLevel == 700 or MyLevel <= 724 then -- Raider [Lv. 700]
            Nmob = "Raider [Lv. 700]"
            NaemQuest = "Area1Quest"
            LevelQuest = 1
            NameMon = "Raider"
            CFrameQuest = CFrame.new(-424.080078, 73.0055847, 1836.91589, 0.253544956, -1.42165932e-08, 0.967323601,
                -6.00147771e-08, 1, 3.04272909e-08, -0.967323601, -6.5768397e-08, 0.253544956)
        elseif MyLevel == 725 or MyLevel <= 774 then -- Mercenary [Lv. 725]
            Nmob = "Mercenary [Lv. 725]"
            NaemQuest = "Area1Quest"
            LevelQuest = 2
            NameMon = "Mercenary"
            CFrameQuest = CFrame.new(-424.080078, 73.0055847, 1836.91589, 0.253544956, -1.42165932e-08, 0.967323601,
                -6.00147771e-08, 1, 3.04272909e-08, -0.967323601, -6.5768397e-08, 0.253544956)
        elseif MyLevel == 775 or MyLevel <= 799 then -- Swan Pirate [Lv. 775]
            Nmob = "Swan Pirate [Lv. 775]"
            NaemQuest = "Area2Quest"
            LevelQuest = 1
            NameMon = "Swan Pirate"
            CFrameQuest = CFrame.new(632.698608, 73.1055908, 918.666321, -0.0319722369, 8.96074881e-10, -0.999488771,
                1.36326533e-10, 1, 8.92172336e-10, 0.999488771, -1.07732087e-10, -0.0319722369)
            elseif MyLevel == 800 or MyLevel <= 874 then -- Factory Staff [Lv. 800]
			Nmob = "Factory Staff [Lv. 800]"
			NaemQuest = "Area2Quest"
			LevelQuest = 2
			NameMon = "Factory Staff"
			CFrameQuest = CFrame.new(632.698608, 73.1055908, 918.666321, -0.0319722369, 8.96074881e-10, -0.999488771, 1.36326533e-10, 1, 8.92172336e-10, 0.999488771, -1.07732087e-10, -0.0319722369)
        elseif MyLevel == 875 or MyLevel <= 899 then -- Marine Lieutenant [Lv. 875]
            Nmob = "Marine Lieutenant [Lv. 875]"
            NaemQuest = "MarineQuest3"
            LevelQuest = 1
            NameMon = "Marine Lieutenant"
            CFrameQuest = CFrame.new(-2442.65015, 73.0511475, -3219.11523, -0.873540044, 4.2329841e-08, -0.486752301,
                5.64383384e-08, 1, -1.43220786e-08, 0.486752301, -3.99823996e-08, -0.873540044)
        elseif MyLevel == 900 or MyLevel <= 949 then -- Marine Captain [Lv. 900]
            Nmob = "Marine Captain [Lv. 900]"
            NaemQuest = "MarineQuest3"
            LevelQuest = 2
            NameMon = "Marine Captain"
            CFrameQuest = CFrame.new(-2442.65015, 73.0511475, -3219.11523, -0.873540044, 4.2329841e-08, -0.486752301,
                5.64383384e-08, 1, -1.43220786e-08, 0.486752301, -3.99823996e-08, -0.873540044)
        elseif MyLevel == 950 or MyLevel <= 974 then -- Zombie [Lv. 950]
            Nmob = "Zombie [Lv. 950]"
            NaemQuest = "ZombieQuest"
            LevelQuest = 1
            NameMon = "Zombie"
            CFrameQuest = CFrame.new(-5492.79395, 48.5151672, -793.710571, 0.321800292, -6.24695815e-08, 0.946807742,
                4.05616092e-08, 1, 5.21931227e-08, -0.946807742, 2.16082796e-08, 0.321800292)
        elseif MyLevel == 975 or MyLevel <= 999 then -- Vampire [Lv. 975]
            Nmob = "Vampire [Lv. 975]"
            NaemQuest = "ZombieQuest"
            LevelQuest = 2
            NameMon = "Vampire"
            CFrameQuest = CFrame.new(-5492.79395, 48.5151672, -793.710571, 0.321800292, -6.24695815e-08, 0.946807742,
                4.05616092e-08, 1, 5.21931227e-08, -0.946807742, 2.16082796e-08, 0.321800292)
        elseif MyLevel == 1000 or MyLevel <= 1049 then -- Snow Trooper [Lv. 1000] **
            Nmob = "Snow Trooper [Lv. 1000]"
            NaemQuest = "SnowMountainQuest"
            LevelQuest = 1
            NameMon = "Snow Trooper"
            CFrameQuest = CFrame.new(604.964966, 401.457062, -5371.69287, 0.353063971, 1.89520435e-08, -0.935599446,
                -5.81846002e-08, 1, -1.70033754e-09, 0.935599446, 5.50377841e-08, 0.353063971)
        elseif MyLevel == 1050 or MyLevel <= 1099 then -- Winter Warrior [Lv. 1050]
            Nmob = "Winter Warrior [Lv. 1050]"
            NaemQuest = "SnowMountainQuest"
            LevelQuest = 2
            NameMon = "Winter Warrior"
            CFrameQuest = CFrame.new(604.964966, 401.457062, -5371.69287, 0.353063971, 1.89520435e-08, -0.935599446,
                -5.81846002e-08, 1, -1.70033754e-09, 0.935599446, 5.50377841e-08, 0.353063971)
        elseif MyLevel == 1100 or MyLevel <= 1124 then -- Lab Subordinate [Lv. 1100]
            Nmob = "Lab Subordinate [Lv. 1100]"
            NaemQuest = "IceSideQuest"
            LevelQuest = 1
            NameMon = "Lab Subordinate"
            CFrameQuest = CFrame.new(-6060.10693, 15.9868021, -4904.7876, -0.411000341, -5.06538868e-07, 0.91163528,
                1.26306062e-07, 1, 6.12581289e-07, -0.91163528, 3.66916197e-07, -0.411000341)
        elseif MyLevel == 1125 or MyLevel <= 1174 then -- Horned Warrior [Lv. 1125]
            Nmob = "Horned Warrior [Lv. 1125]"
            NaemQuest = "IceSideQuest"
            LevelQuest = 2
            NameMon = "Horned Warrior"
            CFrameQuest = CFrame.new(-6060.10693, 15.9868021, -4904.7876, -0.411000341, -5.06538868e-07, 0.91163528,
                1.26306062e-07, 1, 6.12581289e-07, -0.91163528, 3.66916197e-07, -0.411000341)
        elseif MyLevel == 1175 or MyLevel <= 1199 then -- Magma Ninja [Lv. 1175]
            Nmob = "Magma Ninja [Lv. 1175]"
            NaemQuest = "FireSideQuest"
            LevelQuest = 1
            NameMon = "Magma Ninja"
            CFrameQuest = CFrame.new(-5431.09473, 15.9868021, -5296.53223, 0.831796765, 1.15322464e-07, -0.555080295,
                -1.10814341e-07, 1, 4.17010995e-08, 0.555080295, 2.68240168e-08, 0.831796765)
        elseif MyLevel == 1200 or MyLevel <= 1249 then -- Lava Pirate [Lv. 1200]
            Nmob = "Lava Pirate [Lv. 1200]"
            NaemQuest = "FireSideQuest"
            LevelQuest = 2
            NameMon = "Lava Pirate"
            CFrameQuest = CFrame.new(-5431.09473, 15.9868021, -5296.53223, 0.831796765, 1.15322464e-07, -0.555080295,
                -1.10814341e-07, 1, 4.17010995e-08, 0.555080295, 2.68240168e-08, 0.831796765)
        elseif MyLevel == 1250 or MyLevel <= 1274 then -- Ship Deckhand [Lv. 1250]
            Nmob = "Ship Deckhand [Lv. 1250]"
            NaemQuest = "ShipQuest1"
            LevelQuest = 1
            NameMon = "Ship Deckhand"
            CFrameQuest = CFrame.new(1037.80127, 125.092171, 32911.6016, -0.244533166, -0, -0.969640911, -0, 1.00000012,
                -0, 0.96964103, 0, -0.244533136)
        elseif MyLevel == 1275 or MyLevel <= 1299 then -- Ship Engineer [Lv. 1275]
            Nmob = "Ship Engineer [Lv. 1275]"
            NaemQuest = "ShipQuest1"
            LevelQuest = 2
            NameMon = "Ship Engineer"
            CFrameQuest = CFrame.new(1037.80127, 125.092171, 32911.6016, -0.244533166, -0, -0.969640911, -0, 1.00000012,
                -0, 0.96964103, 0, -0.244533136)
        elseif MyLevel == 1300 or MyLevel <= 1324 then -- Ship Steward [Lv. 1300]
            Nmob = "Ship Steward [Lv. 1300]"
            NaemQuest = "ShipQuest2"
            LevelQuest = 1
            NameMon = "Ship Steward"
            CFrameQuest = CFrame.new(968.80957, 125.092171, 33244.125, -0.869560242, 1.51905191e-08, -0.493826836,
                1.44108379e-08, 1, 5.38534195e-09, 0.493826836, -2.43357912e-09, -0.869560242)
        elseif MyLevel == 1325 or MyLevel <= 1349 then -- Ship Officer [Lv. 1325]
            Nmob = "Ship Officer [Lv. 1325]"
            NaemQuest = "ShipQuest2"
            LevelQuest = 2
            NameMon = "Ship Officer"
            CFrameQuest = CFrame.new(968.80957, 125.092171, 33244.125, -0.869560242, 1.51905191e-08, -0.493826836,
                1.44108379e-08, 1, 5.38534195e-09, 0.493826836, -2.43357912e-09, -0.869560242)
        elseif MyLevel == 1350 or MyLevel <= 1374 then -- Arctic Warrior [Lv. 1350]
            Nmob = "Arctic Warrior [Lv. 1350]"
            NaemQuest = "FrostQuest"
            LevelQuest = 1
            NameMon = "Arctic Warrior"
            CFrameQuest = CFrame.new(5669.43506, 28.2117786, -6482.60107, 0.888092756, 1.02705066e-07, 0.459664226,
                -6.20391774e-08, 1, -1.03572376e-07, -0.459664226, 6.34646895e-08, 0.888092756)
        elseif MyLevel == 1375 or MyLevel <= 1424 then -- Snow Lurker [Lv. 1375]
            Nmob = "Snow Lurker [Lv. 1375]"
            NaemQuest = "FrostQuest"
            LevelQuest = 2
            NameMon = "Snow Lurker"
            CFrameQuest = CFrame.new(5669.43506, 28.2117786, -6482.60107, 0.888092756, 1.02705066e-07, 0.459664226,
                -6.20391774e-08, 1, -1.03572376e-07, -0.459664226, 6.34646895e-08, 0.888092756)
        elseif MyLevel == 1425 or MyLevel <= 1449 then -- Sea Soldier [Lv. 1425]
            Nmob = "Sea Soldier [Lv. 1425]"
            NaemQuest = "ForgottenQuest"
            LevelQuest = 1
            NameMon = "Sea Soldier"
            CFrameQuest = CFrame.new(-3052.99097, 236.881363, -10148.1943, -0.997911751, 4.42321983e-08, 0.064591676,
                4.90968759e-08, 1, 7.37270085e-08, -0.064591676, 7.67442998e-08, -0.997911751)
        elseif MyLevel >= 1450 then -- Water Fighter [Lv. 1450]
            Nmob = "Water Fighter [Lv. 1450]"
            NaemQuest = "ForgottenQuest"
            LevelQuest = 2
            NameMon = "Water Fighter"
            CFrameQuest = CFrame.new(-3052.99097, 236.881363, -10148.1943, -0.997911751, 4.42321983e-08, 0.064591676,
                4.90968759e-08, 1, 7.37270085e-08, -0.064591676, 7.67442998e-08, -0.997911751)
        end
    end

    if sea3world then
        if MyLevel == 1500 or MyLevel <= 1524 then
            Nmob = "Pirate Millionaire [Lv. 1500]"
            NaemQuest = "PiratePortQuest"
            LevelQuest = 1
            NameMon = "Pirate Millionaires"
            CFrameQuest = CFrame.new(-290.522095, 43.8190117, 5579.83252, -0.905972421, 1.20471855e-08, 0.423336715,
                1.73612058e-08, 1, 8.69659544e-09, -0.423336715, 1.52285118e-08, -0.905972421)
        elseif MyLevel == 1525 or MyLevel <= 1574 then
            Nmob = "Pistol Billionaire [Lv. 1525]"
            NaemQuest = "PiratePortQuest"
            LevelQuest = 2
            NameMon = "Pistol Billionaires"
            CFrameQuest = CFrame.new(-290.522095, 43.8190117, 5579.83252, -0.905972421, 1.20471855e-08, 0.423336715,
                1.73612058e-08, 1, 8.69659544e-09, -0.423336715, 1.52285118e-08, -0.905972421)
        elseif MyLevel == 1575 or MyLevel <= 1599 then
            Nmob = "Dragon Crew Warrior [Lv. 1575]"
            NaemQuest = "AmazonQuest"
            LevelQuest = 1
            NameMon = "Dragon Crew Warriors"
            CFrameQuest = CFrame.new(5829.56689, 51.3771553, -1100.4342, -0.555404484, 3.56743008e-08, 0.831580341,
                -1.3416549e-09, 1, -4.3795481e-08, -0.831580341, -2.54399009e-08, -0.555404484)
        elseif MyLevel == 1600 or MyLevel <= 1624 then
            Nmob = "Dragon Crew Archer [Lv. 1600]"
            NaemQuest = "AmazonQuest"
            LevelQuest = 2
            NameMon = "Dragon Crew Archers"
            CFrameQuest = CFrame.new(5829.56689, 51.3771553, -1100.4342, -0.555404484, 3.56743008e-08, 0.831580341,
                -1.3416549e-09, 1, -4.3795481e-08, -0.831580341, -2.54399009e-08, -0.555404484)
        elseif MyLevel == 1625 or MyLevel <= 1649 then
            Nmob = "Female Islander [Lv. 1625]"
            NaemQuest = "AmazonQuest2"
            LevelQuest = 1
            NameMon = "Female Islanders"
            CFrameQuest = CFrame.new(5448.25195, 603.015747, 749.316284, -0.540603459, 9.97177807e-08, -0.84127754,
                -2.56367318e-08, 1, 1.35005493e-07, 0.84127754, 9.45520426e-08, -0.540603459)
        elseif MyLevel == 1650 or MyLevel <= 1699 then
            Nmob = "Giant Islander [Lv. 1650]"
            NaemQuest = "AmazonQuest2"
            LevelQuest = 2
            NameMon = "Giant Islanders"
            CFrameQuest = CFrame.new(5448.25195, 603.015747, 749.316284, -0.540603459, 9.97177807e-08, -0.84127754,
                -2.56367318e-08, 1, 1.35005493e-07, 0.84127754, 9.45520426e-08, -0.540603459)
        elseif MyLevel == 1700 or MyLevel <= 1724 then
            Nmob = "Marine Commodore [Lv. 1700]"
            NaemQuest = "MarineTreeIsland"
            LevelQuest = 1
            NameMon = "Marine Commodores"
            CFrameQuest = CFrame.new(2177.75317, 28.7312393, -6739.44824, 0.119195633, -3.65753605e-09, -0.992870808,
                2.10418127e-09, 1, -3.43118867e-09, 0.992870808, -1.68019754e-09, 0.119195633)
        elseif MyLevel == 1725 or MyLevel <= 1774 then
            Nmob = "Marine Rear Admiral [Lv. 1725]"
            NaemQuest = "MarineTreeIsland"
            LevelQuest = 2
            NameMon = "Marine Rear Admirals"
            CFrameQuest = CFrame.new(2177.75317, 28.7312393, -6739.44824, 0.119195633, -3.65753605e-09, -0.992870808,
                2.10418127e-09, 1, -3.43118867e-09, 0.992870808, -1.68019754e-09, 0.119195633)
        elseif MyLevel == 1775 or MyLevel <= 1799 then
            Nmob = "Fishman Raider [Lv. 1775]"
            NaemQuest = "DeepForestIsland3"
            LevelQuest = 1
            NameMon = "Fishman Raiders"
            CFrameQuest = CFrame.new(-10584.6865, 331.788452, -8759.07031, 0.892230332, -7.94446393e-08, 0.451580614,
                6.76428513e-08, 1, 4.22773603e-08, -0.451580614, -7.17494375e-09, 0.892230332)
        elseif MyLevel == 1800 or MyLevel <= 1824 then
            Nmob = "Fishman Captain [Lv. 1800]"
            NaemQuest = "DeepForestIsland3"
            LevelQuest = 2
            NameMon = "Fishman Captains"
            CFrameQuest = CFrame.new(-10584.6865, 331.788452, -8759.07031, 0.892230332, -7.94446393e-08, 0.451580614,
                6.76428513e-08, 1, 4.22773603e-08, -0.451580614, -7.17494375e-09, 0.892230332)
        elseif MyLevel == 1825 or MyLevel <= 1849 then
            Nmob = "Forest Pirate [Lv. 1825]"
            NaemQuest = "DeepForestIsland"
            LevelQuest = 1
            NameMon = "Forest Pirates"
            CFrameQuest = CFrame.new(-13233.0879, 332.403961, -7629.69922, -0.997619152, 0, 0.0689643472, 0, 1, 0,
                -0.0689643472, 0, -0.997619152)
        elseif MyLevel == 1850 or MyLevel <= 1899 then
            Nmob = "Mythological Pirate [Lv. 1850]"
            NaemQuest = "DeepForestIsland"
            LevelQuest = 2
            NameMon = "Mythological Pirates"
            CFrameQuest = CFrame.new(-13233.0879, 332.403961, -7629.69922, -0.997619152, 0, 0.0689643472, 0, 1, 0,
                -0.0689643472, 0, -0.997619152)
        elseif MyLevel == 1900 or MyLevel <= 1924 then
            Nmob = "Jungle Pirate [Lv. 1900]"
            NaemQuest = "DeepForestIsland2"
            LevelQuest = 1
            NameMon = "Jungle Pirates"
            CFrameQuest = CFrame.new(-12682.2275, 390.886566, -9901.95215, 0.902961195, -4.32517382e-08, -0.42972213,
                2.69718825e-08, 1, -4.39753371e-08, 0.42972213, 2.81176096e-08, 0.902961195)
        elseif MyLevel == 1925 or MyLevel <= 1974 then
            Nmob = "Musketeer Pirate [Lv. 1925]"
            NaemQuest = "DeepForestIsland2"
            LevelQuest = 2
            NameMon = "Musketeer Pirates"
            CFrameQuest = CFrame.new(-12682.2275, 390.886566, -9901.95215, 0.902961195, -4.32517382e-08, -0.42972213,
                2.69718825e-08, 1, -4.39753371e-08, 0.42972213, 2.81176096e-08, 0.902961195)
        elseif MyLevel == 1975 or MyLevel <= 1999 then
            Nmob = "Reborn Skeleton [Lv. 1975]"
            NaemQuest = "HauntedQuest1"
            LevelQuest = 1
            NameMon = "Reborn Skeletons"
            CFrameQuest = CFrame.new(-9481.05859, 142.132584, 5565.21924, -0.670383453, -4.45647856e-08, -0.742014825,
                -1.63075811e-08, 1, -4.5325848e-08, 0.742014825, -1.82852329e-08, -0.670383453)
        elseif MyLevel == 2000 or MyLevel <= 2024 then
            Nmob = "Living Zombie [Lv. 2000]"
            NaemQuest = "HauntedQuest1"
            LevelQuest = 2
            NameMon = "Living Zombies"
            CFrameQuest = CFrame.new(-9481.05859, 142.132584, 5565.21924, -0.670383453, -4.45647856e-08, -0.742014825,
                -1.63075811e-08, 1, -4.5325848e-08, 0.742014825, -1.82852329e-08, -0.670383453)

        elseif MyLevel == 2025 or MyLevel <= 2049 then
            Nmob = "Demonic Soul [Lv. 2025]"
            NaemQuest = "HauntedQuest2"
            LevelQuest = 1
            NameMon = "Demonic Souls"
            CFrameQuest = CFrame.new(-9515.70605, 172.132584, 6080.24414, 0.848375142, -2.02569179e-08, 0.529395521,
                5.7551599e-08, 1, -5.39642393e-08, -0.529395521, 7.62494778e-08, 0.848375142)

        elseif MyLevel == 2050 or MyLevel <= 2074 then
            Nmob = "Posessed Mummy [Lv. 2050]"
            NaemQuest = "HauntedQuest2"
            LevelQuest = 2
            NameMon = "Posessed Mummys"
            CFrameQuest = CFrame.new(-9515.70605, 172.132584, 6080.24414, 0.848375142, -2.02569179e-08, 0.529395521,
                5.7551599e-08, 1, -5.39642393e-08, -0.529395521, 7.62494778e-08, 0.848375142)

        elseif MyLevel == 2075 or MyLevel <= 2099 then
            Nmob = "Peanut Scout [Lv. 2075]"
            NaemQuest = "NutsIslandQuest"
            LevelQuest = 1
            NameMon = "Peanut Scouts"
            CFrameQuest = CFrame.new(-2104.04175, 38.1318932, -10194.3213, -0.0152436299, 2.01015542e-08, 0.999883831,
                -7.25532801e-10, 1, -2.01149515e-08, -0.999883831, -1.03207343e-09, -0.0152436299)

        elseif MyLevel == 2100 or MyLevel <= 2124 then
            Nmob = "Peanut President [Lv. 2100]"
            NaemQuest = "NutsIslandQuest"
            LevelQuest = 2
            NameMon = "Peanut Presidents"
            CFrameQuest = CFrame.new(-2104.04175, 38.1318932, -10194.3213, -0.0152436299, 2.01015542e-08, 0.999883831,
                -7.25532801e-10, 1, -2.01149515e-08, -0.999883831, -1.03207343e-09, -0.0152436299)
        elseif MyLevel == 2125 or MyLevel <= 2149 then
            Nmob = "Ice Cream Chef [Lv. 2125]"
            NaemQuest = "IceCreamIslandQuest"
            LevelQuest = 1
            NameMon = "Ice Cream Chefs"
            CFrameQuest = CFrame.new(-822.312927, 65.8472519, -10965.8652, 0.705142975, -2.69522857e-08, -0.709065139,
                4.11038759e-09, 1, -3.39233637e-08, 0.709065139, 2.10062883e-08, 0.705142975)

        elseif MyLevel == 2150 or MyLevel <= 2199 then
            Nmob = "Ice Cream Commander [Lv. 2150]"
            NaemQuest = "IceCreamIslandQuest"
            LevelQuest = 2
            NameMon = "Ice Cream Commanders"
            CFrameQuest = CFrame.new(-822.312927, 65.8472519, -10965.8652, 0.705142975, -2.69522857e-08, -0.709065139,
                4.11038759e-09, 1, -3.39233637e-08, 0.709065139, 2.10062883e-08, 0.705142975)
        elseif MyLevel == 2200 or MyLevel <= 2224 then
            Nmob = "Cookie Crafter [Lv. 2200]"
            NaemQuest = "CakeQuest1"
            LevelQuest = 1
            NameMon = "Cookie Crafters"
            CFrameQuest = CFrame.new(-2022.0304, 37.8240204, -12028.8926, 0.685595036, 4.75647539e-08, 0.727983117, -1.61531921e-09, 1, -6.38164508e-08, -0.727983117, 4.25763176e-08, 0.685595036)
        elseif MyLevel == 2225 or MyLevel <= 2249 then
            Nmob = "Cake Guard [Lv. 2225]"
            NaemQuest = "CakeQuest1"
            LevelQuest = 2
            NameMon = "Cake Guards"
            CFrameQuest = CFrame.new(-2022.0304, 37.8240204, -12028.8926, 0.685595036, 4.75647539e-08, 0.727983117, -1.61531921e-09, 1, -6.38164508e-08, -0.727983117, 4.25763176e-08, 0.685595036)            
        elseif MyLevel == 2250 or MyLevel <= 2274 then
            Nmob = "Baking Staff [Lv. 2250]"
            NaemQuest = "CakeQuest2"
            LevelQuest = 1
            NameMon = "Baking Staff"
            CFrameQuest = CFrame.new(-1930.15417, 37.8239365, -12842.9336, -0.738056183, 0, 0.674739242, 0, 1, 0, -0.674739242, 0, -0.738056183)            
        elseif MyLevel == 2275 or MyLevel <= 2299 then
            Nmob = "Head Baker [Lv. 2275]"
            NaemQuest = "CakeQuest2"
            LevelQuest = 2
            NameMon = "Head Baker"
            CFrameQuest = CFrame.new(-1930.15417, 37.8239365, -12842.9336, -0.738056183, 0, 0.674739242, 0, 1, 0, -0.674739242, 0, -0.738056183)
            CFrameMon = CFrame.new(-9624.46191, 65.6218338, 6077.31006, 0.437087119, 5.18225427e-08, -0.899419188,
                1.96163334e-08, 1, 6.71506584e-08, 0.899419188, -4.69939927e-08, 0.437087119)
            CFramewarp = CFrame.new()
		elseif MyLevel == 3000 or MyLevel <= 2324 then
			Nmob = "Cocoa Warrior [Lv. 2300]"
			NaemQuest = "ChocQuest1"
			LevelQuest = 1
			NameMon = "Cocoa Warrior"
			CFrameQuest = CFrame.new(234.351395, 24.7600651, -12197.5293, 0.747417986, -5.08907334e-08, 0.664354086, 6.26141698e-08, 1, 6.15902795e-09, -0.664354086, 3.69946136e-08, 0.747417986)
			CFrameMon = CFrame.new(-9624.46191, 65.6218338, 6077.31006, 0.437087119, 5.18225427e-08, -0.899419188,
				1.96163334e-08, 1, 6.71506584e-08, 0.899419188, -4.69939927e-08, 0.437087119)
			CFramewarp = CFrame.new()
		elseif MyLevel == 2325 or MyLevel <= 2349 then
			Nmob = "Chocolate Bar Battler [Lv. 2325]"
			NaemQuest = "ChocQuest1"
			LevelQuest = 2
			NameMon = "Chocolate Bar Battler"
			CFrameQuest = CFrame.new(234.351395, 24.7600651, -12197.5293, 0.747417986, -5.08907334e-08, 0.664354086, 6.26141698e-08, 1, 6.15902795e-09, -0.664354086, 3.69946136e-08, 0.747417986)
			CFrameMon = CFrame.new(-9624.46191, 65.6218338, 6077.31006, 0.437087119, 5.18225427e-08, -0.899419188,
				1.96163334e-08, 1, 6.71506584e-08, 0.899419188, -4.69939927e-08, 0.437087119)
			CFramewarp = CFrame.new()
		elseif MyLevel == 2350 or MyLevel <= 2374 then
			Nmob = "Sweet Thief [Lv. 2350]"
			NaemQuest = "ChocQuest2"
			LevelQuest = 1
			NameMon = "Sweet Thief"
			CFrameQuest = CFrame.new(147.564835, 24.8196297, -12775.6914, 0.642941117, -7.10906667e-09, -0.765915632, 6.08081185e-09, 1, -4.17730472e-09, 0.765915632, -1.97162775e-09, 0.642941117)
			CFrameMon = CFrame.new(-9624.46191, 65.6218338, 6077.31006, 0.437087119, 5.18225427e-08, -0.899419188,
				1.96163334e-08, 1, 6.71506584e-08, 0.899419188, -4.69939927e-08, 0.437087119)
			CFramewarp = CFrame.new()
		elseif MyLevel == 2375 or MyLevel <= 9999 then
			Nmob = "Candy Rebel [Lv. 2375]"
			NaemQuest = "ChocQuest2"
			LevelQuest = 2
			NameMon = "Candy Rebel"
			CFrameQuest = CFrame.new(147.564835, 24.8196297, -12775.6914, 0.642941117, -7.10906667e-09, -0.765915632, 6.08081185e-09, 1, -4.17730472e-09, 0.765915632, -1.97162775e-09, 0.642941117)
			CFrameMon = CFrame.new(-9624.46191, 65.6218338, 6077.31006, 0.437087119, 5.18225427e-08, -0.899419188,
				1.96163334e-08, 1, 6.71506584e-08, 0.899419188, -4.69939927e-08, 0.437087119)
			CFramewarp = CFrame.new()
		end
    end
end

function ripsad()
    if game.Workspace.Enemies:FindFirstChild("rip_indra [Lv. 1500] [Boss]") then
        local mobs = game.Workspace.Enemies:GetChildren()
        for i = 1, #mobs do
            local v = mobs[i]
            if v.Name == "rip_indra [Lv. 1500] [Boss]" and v:IsA("Model") and v:FindFirstChild("Humanoid") and
                v.Humanoid.Health > 0 then
                return v
            end
        end
    elseif not game.Workspace.Enemies:FindFirstChild("rip_indra [Lv. 1500] [Boss]") then
        --standup.CFrame = game.ReplicatedStorage:FindFirstChild("rip_indra [Lv. 1500] [Boss]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
        --tp(standup.CFrame * CFrame.new(0, 4, 0))
		--local subname = string.gsub("rip_indra [Lv. 1500] [Boss]", "%p", "")
		--local realname = string.gsub(subname, "%s+Lv %d+.+", "")
		if game.ReplicatedStorage:FindFirstChild("rip_indra [Lv. 1500] [Boss]") then
			standup.CFrame = game.ReplicatedStorage:FindFirstChild("rip_indra [Lv. 1500] [Boss]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
			tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("rip_indra [Lv. 1500]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["rip_indra [Lv. 1500]"].CFrame * CFrame.new(0, Instantnum, 0)
			tp(standup.CFrame * CFrame.new(0, 4, 0))
		end
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoThirdworld1 and newworld then
            local MyLevel = game.Players.localPlayer.Data.Level.Value
            if MyLevel >= 1500 and newworld then
                _G.AutoSaber = false
                _G.AutoFarm = false
                a3sea = "true"
                wait(0.5)
                if a3sea == "true" then
                   -- tp(CFrame.new(-1924.14844, 12.6760674, 1739.13135, -0.67253083, 5.11622282e-08, 0.740069091, -1.96399288e-08, 1, -8.69792913e-08, -0.740069091, -7.30311598e-08, -0.67253083))
                    _G.tweennew.Completed:Wait()
                    wait(.1)
                    if _G.AutoThirdworld1 then
                        local args = {
                            [1] = "ZQuestProgress",
                            [2] = "Check"
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                        local args1 = {
                            [1] = "ZQuestProgress",
                            [2] = "Begin"
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args1))
                    end
                    wait(4)
                    a3sea = "gg"
                end
                if _G.AutoThirdworld1 and game.Workspace.Enemies:FindFirstChild("rip_indra [Lv. 1500] [Boss]") then
                    CheckBoss = true
                    for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
                        if CheckBoss and v:IsA("Model") and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 and v.Name == "rip_indra [Lv. 1500] [Boss]" then
                            repeat
                                game:GetService("RunService").RenderStepped:Wait()
                                pcall(function()
                                    autobuso()
                                    EquipWeapon(_G.SelectWeapon)
                                    if hit then
                                        v.HumanoidRootPart.Transparency = 1
                                    else
                                        v.HumanoidRootPart.Transparency = 0.75
                                    end
                                    v.Humanoid.JumpPower = 0
                                    v.Humanoid.WalkSpeed = 0
                                    v.HumanoidRootPart.CanCollide = false
                                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                    standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 20, 2)
                                    tp(standup.CFrame * CFrame.new(0, 4, 0))
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
									game:GetService'VirtualUser':CaptureController()
									game:GetService'VirtualUser':Button1Down(Vector2.new(0, 0))
                                end)
                            until not CheckBoss or not v.Parent or v.Humanoid.Health <= 0 or _G.AutoThirdworld1 == false or _G.AutoThirdworld == false
                        end
                    end
                    CheckBoss = false
                    wait(0.5)
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
                else
					local args = {
						[1] = "ZQuestProgress",
						[2] = "Check"
					}
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
					local args1 = {
						[1] = "ZQuestProgress",
						[2] = "Begin"
					}
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args1))
					--[[
					if game.ReplicatedStorage:FindFirstChild("rip_indra [Lv. 1500] [Boss]") then
						standup.CFrame = game.ReplicatedStorage:FindFirstChild("rip_indra [Lv. 1500] [Boss]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
						tpwait(standup.CFrame * CFrame.new(0, 4, 0))
					elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("rip_indra") then
						standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["rip_indra"].CFrame * CFrame.new(0, Instantnum, 0)
						tpwait(standup.CFrame * CFrame.new(0, 4, 0))
					end
					]]               
				end
            end
        end
    end
end)

function Admiral()
    if game.Workspace.Enemies:FindFirstChild("Ice Admiral [Lv. 700] [Boss]") then
        local mobs = game.Workspace.Enemies:GetChildren()
        for i = 1, #mobs do
            local v = mobs[i]
            if v.Name == "Ice Admiral [Lv. 700] [Boss]" and v:IsA("Model") and v:FindFirstChild("Humanoid") and
                v.Humanoid.Health > 0 then
                return v
            end
        end
    else
        --tp(CFrame.new(1347.7124, 37.3751602, -1325.6488))
		local subname = string.gsub("Ice Admiral [Lv. 700] [Boss]", "%p", "")
    	local realname = string.gsub(subname, "%s+Lv %d+.+", "")
		if game.ReplicatedStorage:FindFirstChild("Ice Admiral [Lv. 700] [Boss]") then
			standup.CFrame = game.ReplicatedStorage:FindFirstChild("Ice Admiral [Lv. 700] [Boss]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
			tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ice Admiral [Lv. 700]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ice Admiral [Lv. 700]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))

		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))

		end
    end
end

function GOnewworld()
    local MyLevel = game.Players.localPlayer.Data.Level.Value
    if MyLevel >= 700 and OldWorld then
        _G.AutoFarm = false
        _G.AutoFarmwarp = false
        --_G.FastAttackMode = false
        _G.AutoSaber = false
		_G.kuypvpq = false
        if game.Workspace.Map.Ice.Door.Transparency == 0 then
            tpwait(CFrame.new(4849.29883, 5.65138149, 719.611877))
            wait(0.5)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Detective")
            wait(.4)
            EquipWeapon("Key")
            tpwait(CFrame.new(1348.0155, 37.3493576, -1326.42493, 0.535281897, 5.91172693e-08, 0.844673455, 1.01135322e-08, 1, -7.63974057e-08, -0.844673455, 4.94367818e-08, 0.535281897))
			tpwait(CFrame.new(1348.0155, 37.3493576, -1326.42493, 0.535281897, 5.91172693e-08, 0.844673455, 1.01135322e-08, 1, -7.63974057e-08, -0.844673455, 4.94367818e-08, 0.535281897))
            --game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1347.7124, 37.3751602, -1325.6488)
            wait(0.5)
        elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Detective") == 2 then
            wait(0.5)
            tpwait(CFrame.new(-1166.23743, 7.65220165, 1728.36487))
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
        elseif game.Workspace.Map.Ice.Door.Transparency == 1 then
            pcall(function()
                EquipWeapon(_G.SelectWeapon)
                autobuso()
                local v = Admiral()
                if hit then
                    v.HumanoidRootPart.Transparency = 1
                else
                    v.HumanoidRootPart.Transparency = 0.75
                end
                v.HumanoidRootPart.CanCollide = false
                v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                pcall(function()
                    standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                    tp(standup.CFrame * CFrame.new(0, 4, 0))
                end)
				game:GetService'VirtualUser':CaptureController()
            	game:GetService'VirtualUser':Button1Down(Vector2.new(0, 0))
            end)
        end
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoNewworld and OldWorld then
            GOnewworld()
        end
    end
end)

standup = Instance.new('Part', workspace)
standup.Size = Vector3.new(10, 0, 10)
standup.Anchored = true
standup.Material = "Neon"
standup.Transparency = 1
local LocalPlayer = game:GetService("Players").LocalPlayer

function enemy()
    CheckQuest()
    if game.Workspace.Enemies:FindFirstChild(Nmob) then
        nahee = true
        for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
            if  v.Parent and v.Name == Nmob and v:IsA("Model") and
                v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                return v
            end
        end
    elseif not game.Workspace.Enemies:FindFirstChild(Nmob) then
        CheckQuest()
        if Nmob == "Fishman Warrior [Lv. 375]" or Nmob == "Fishman Commando [Lv. 400]" then
            if (game:GetService("Workspace").Map.TeleportSpawn.Exit.Position -  game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 50000 then
                pcall(function()
					_G.tweennew:Cancel()
				end)
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.TeleportSpawn.Entrance.CFrame
                wait(3)
            else
				local subname = string.gsub(Nmob, "%p", "")
				local realname = string.gsub(subname, "%s+Lv %d+.+", "")
				if game.ReplicatedStorage:FindFirstChild(Nmob) then
					standup.CFrame = game.ReplicatedStorage:FindFirstChild(Nmob).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(Nmob) then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[Nmob].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))

				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				end
                --standup.CFrame = game.ReplicatedStorage:FindFirstChild(Nmob).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                --tp(standup.CFrame * CFrame.new(0, 4, 0))
            end
		elseif Nmob == "Shanda [Lv. 475]"  then
				if (game:GetService("Workspace").Map.SkyArea2.PathwayHouse.EntrancePoint.Position -  game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 500 then
					wait(1)
					pcall(function()
						_G.tweennew:Cancel()
					end)
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.SkyArea1.PathwayTemple.Entrance.CFrame
					wait(3)
				else
					local subname = string.gsub(Nmob, "%p", "")
					local realname = string.gsub(subname, "%s+Lv %d+.+", "")
					if game.ReplicatedStorage:FindFirstChild(Nmob) then
						standup.CFrame = game.ReplicatedStorage:FindFirstChild(Nmob).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
						tp(standup.CFrame * CFrame.new(0, 4, 0))
					elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(Nmob) then
						standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[Nmob].CFrame * CFrame.new(0, Instantnum, 0)
						tp(standup.CFrame * CFrame.new(0, 4, 0))
	
					elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
						standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
						tp(standup.CFrame * CFrame.new(0, 4, 0))
					end
					--standup.CFrame = game.ReplicatedStorage:FindFirstChild(Nmob).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
					--tp(standup.CFrame * CFrame.new(0, 4, 0))
				end
        elseif Nmob == "Ship Deckhand [Lv. 1250]" or Nmob == "Ship Engineer [Lv. 1275]" or Nmob == "Ship Steward [Lv. 1300]" or Nmob == "Ship Officer [Lv. 1325]" then
            if (game:GetService("Workspace").Map.GhostShipInterior.Teleport.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 20000 then
                pcall(function()
					_G.tweennew:Cancel()
				end)
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.GhostShip.Teleport.CFrame
                wait(3)
            else
				local subname = string.gsub(Nmob, "%p", "")
				local realname = string.gsub(subname, "%s+Lv %d+.+", "")
				if game.ReplicatedStorage:FindFirstChild(Nmob) then
					standup.CFrame = game.ReplicatedStorage:FindFirstChild(Nmob).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(Nmob) then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[Nmob].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				end
                --standup.CFrame = game.ReplicatedStorage:FindFirstChild(Nmob).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                --tp(standup.CFrame * CFrame.new(0, 4, 0))
            end
        else
			local subname = string.gsub(Nmob, "%p", "")
			local realname = string.gsub(subname, "%s+Lv %d+.+", "")
			if game.ReplicatedStorage:FindFirstChild(Nmob) then
				standup.CFrame = game.ReplicatedStorage:FindFirstChild(Nmob).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(Nmob) then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[Nmob].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			end
			--standup.CFrame = game.ReplicatedStorage:FindFirstChild(Nmob).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
			--tp(standup.CFrame * CFrame.new(0, 4, 0))
        end
    end
end

function autofarm()
    if LocalPlayer.PlayerGui.Main.Quest.Visible == false then
        pcall(function()
			_G.bringmob = false
			pcall(function()
				game.Players.LocalPlayer.Character.Humanoid.Sit = false
			end)
			CheckQuest()
			if Nmob == "Fishman Warrior [Lv. 375]" or Nmob == "Fishman Commando [Lv. 400]" then
				if (game:GetService("Workspace").Map.TeleportSpawn.Exit.Position -
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 50000 then
					wait(1)
					pcall(function()
						_G.tweennew:Cancel()
					end)
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.TeleportSpawn.Entrance.CFrame
					wait(3)
				else
					tp(CFrameQuest)
				end
			elseif Nmob == "Shanda [Lv. 475]" then
				if (game:GetService("Workspace").Map.SkyArea2.PathwayHouse.EntrancePoint.Position -
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 500 then
					pcall(function()
						_G.tweennew:Cancel()
					end)
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.SkyArea1.PathwayTemple.Entrance.CFrame
					wait(3)
				else
					tp(CFrameQuest)
				end
			elseif Nmob == "Ship Officer [Lv. 1325]" or Nmob == "Ship Deckhand [Lv. 1250]" or Nmob ==
				"Ship Engineer [Lv. 1275]" or Nmob == "Ship Steward [Lv. 1300]" then
				if (game:GetService("Workspace").Map.GhostShipInterior.Teleport.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 20000 then
					pcall(function()
						_G.tweennew:Cancel()
					end)
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.GhostShip.Teleport.CFrame
					wait(3)
				else
					tp(CFrameQuest)
				end
			else
				if OldWorld and (game:GetService("Workspace").Map.TeleportSpawn.Exit.Position -
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 30000 then
					pcall(function()
						_G.tweennew:Cancel()
					end)
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.TeleportSpawn.Exit.CFrame
					wait(3)
				elseif newworld and (game:GetService("Workspace").Map.GhostShipInterior.Teleport.Position -
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 15000 then
					pcall(function()
						_G.tweennew:Cancel()
					end)
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.GhostShipInterior.Teleport.CFrame
					wait(3)
				else
					tp(CFrameQuest)
				end    
			end
			CheckQuest()
			if (CFrameQuest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10 then 
				wait(1.1)
				CheckQuest()
				if  game:GetService("Players").LocalPlayer.Character.Humanoid.Health > 0 and _G.AutoFarm and (CFrameQuest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10  then
					pcall(function()
						game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
						game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", NaemQuest, LevelQuest)
					end)
				else
					tp(CFrameQuest)
				end
			end
   		end)
    elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
        CheckQuest()
        if string.find(LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, NameMon) then
            pcall(function()
                EquipWeapon(_G.SelectWeapon)
                autobuso()
                if game.Players.LocalPlayer.Character:FindFirstChild("Black Leg") and game.Players.LocalPlayer.Character:FindFirstChild("Black Leg").Level.Value >= 150 and game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[_G.SelectWeapon].V.Title.TextColor3 == Color3.fromRGB(255, 255, 255) then
                    local vim = game:service('VirtualInputManager')
                     vim:SendKeyEvent(true, "V", false, game)
                     vim:SendKeyEvent(false, "V", false, game)
                end
                pcall(function()
                    local v = enemy()
					if v.Humanoid:FindFirstChild("Animator") then
						v.Humanoid.Animator:Destroy()
					 end
                    _G.PosMon = v.HumanoidRootPart.CFrame
                    _G.bringmob = true
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.HumanoidRootPart.CanCollide = false
                    standup.CFrame = v.HumanoidRootPart.CFrame + v.HumanoidRootPart.CFrame.lookVector * -25
					tp(standup.CFrame * CFrame.new(0, 25, 0))
                end)
            end)
        else
            _G.bringmob = false
			
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
			game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible = false
            wait(1)
        end
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoFarm then
            autofarm()
        end
    end
end)

function ppqest()
	local args = {
		[1] = "PlayerHunter"
	}
	local gg = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
	return tostring(gg)
end


function pvpquest()
	if openfac and tonumber(game.Players.localPlayer.Data.Level.Value) >= 60 and  tonumber(game.Players.localPlayer.Data.Level.Value) <= 100 then
		_G.AutoFarm = false
		_G.bringmob = false

		if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text == "ROOTHUB" or not string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestReward.Title.Text, "50,000,000") or game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
			wait(.5)
			ppqest()
			--ppqest()
			tp(CFrame.new(-5232.21582, 8.59026527, 8441.30371))
		elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestReward.Title.Text, "50,000,000") and game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then	
			pcall(function()
				--print(gg)
				--local dd = string.gsub(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Defeat ", "")
				--local gg = string.gsub(dd, "%s%(0/1%)", "")
				for i, v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
					local dd = string.gsub(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Defeat ", "")
					local gg = string.gsub(dd, "%s%(0/1%)", "")	
					if  v.Name == tostring(gg) and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0  then
						_G.onNextq = false
						repeat
							task.wait()
							--_G.SuperFastAttackMode = true
							pcall(function()
								local dd = string.gsub(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Defeat ", "")
								local gg = string.gsub(dd, "%s%(0/1%)", "")			
								EquipWeapon(_G.SelectWeapon)
								if game:GetService("Players").LocalPlayer.PlayerGui.Main.Settings.Notify.Visible  == true then
									game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EnablePvp")
								end
								autobuso()
								_G.SuperFastAttackMode = false
								--v.HumanoidRootPart.Size = Vector3.new(50, 50, 50)
								standup.CFrame = v.HumanoidRootPart.CFrame 
								--game:GetService'VirtualUser':Button1Down(Vector2.new(0, 0))   + v.HumanoidRootPart.CFrame.lookVector * -7
								--game:GetService'VirtualUser':ClickButton1(Vector2.new(851, 158), game:GetService("Workspace").Camera.CFrame)
								tp(v.HumanoidRootPart.CFrame + v.HumanoidRootPart.CFrame.lookVector * -25)
								if (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 100 then
									if game:GetService("Players").LocalPlayer.PlayerGui.Main.SafeZone.Visible == true then
										ppqest()
									else
										_G.onNextq = true
									end	
								end
								--game:GetService("Players")[v.Name].Data.Level.Value < 60 or
							end)		
						until game:GetService("Players")[v.Name].Data.Level.Value < 20 or _G.AutoFarm or (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 20000 or _G.Nextq or not string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, v.Name) or v.Humanoid.Health > 1500  or not _G.kuypvpq or v.Humanoid.Health <= 0 or game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false
						ppqest()
						_G.Nextq = false
						_G.onNextq = false
					end
				end
			end)
		end
	elseif tonumber(game.Players.localPlayer.Data.Level.Value) >= 300 then
		_G.SuperFastAttackMode = true
		--[[
		if _G.SuperFastAttackMode1 then
			_G.SuperFastAttackMode = true
		else
			_G.SuperFastAttackMode = false
		end
		]]
		--if _G.FastAttackMode1 then
		--	_G.FastAttackMode = true
		--else
		--	_G.FastAttackMode = false
		--end
		_G.bringmob = false
		_G.kuypvpq = false
		if openfac then
		_G.AutoFarm = true
		end
	end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.kuypvpq then
			pcall(function()
            	pvpquest()
			end)
        end
    end
end)
_G.Nextq = false
spawn(function()
	while wait(1) do
		if _G.onNextq then
			wait(10)
			pcall(function()
				_G.Nextq = true
				_G.onNextq = false
			end)
		end
	end
end)

standup1 = Instance.new('Part', workspace)
standup1.Size = Vector3.new(15, 0, 15)
standup1.Anchored = true
standup1.Transparency = 1
local function gamekiller()
    while true do
        local fucku = 1
    end
end
_G.Superfastcheck = false
game:GetService("RunService").Stepped:connect(function()
	--[[
	if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text == "ROOTHUB" then
			_G.SuperFastAttackMode = true
	else
		if _G.SuperFastAttackMode1 then
			_G.SuperFastAttackMode = true
		else
			_G.SuperFastAttackMode = false
		end
	end

	
	for i, v in pairs(game.CoreGui:GetChildren()) do
        if v:FindFirstChild("PropertiesFrame") then
            if v:FindFirstChild("ExplorerPanel") then
                if v:FindFirstChild("SideMenu") then
                    warn("DarkDex Detected")
                    wait(0.2)
                    gamekiller()
                end
            end
        end
    end
	
	]]

	
    pcall(function()
		settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
        settings().Physics.AllowSleep = false
        if sethiddenproperty then
            sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",math.huge)
			
        end 
        sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",math.huge)
        if setscriptable then
            setscriptable(game.Players.LocalPlayer, "SimulationRadius", true)
            game.Players.LocalPlayer.SimulationRadius = math.huge
        end
    end)
end)


coroutine.wrap(function()
	while task.wait(.1) do
		local ac = CombatFrameworkR.activeController
		if ac and ac.equipped then
			if _G.SuperFastAttackMode then
				AttackFunction()
				if tick() - cooldownfastattack > 1.5 then wait(.01) cooldownfastattack = tick() end
			else
				AttackPlayers()
				if tick() - cooldownfastattack > 1.5 then wait(.01) cooldownfastattack = tick() end
			end
		end
	end
end)()

--[[
spawn(function()
	while wait(.5) do
		pcall(function()
			if _G.FastAttackMode and not _G.SuperFastAttackMode then
				repeat wait(0.3)
					pcall(function()
						AttackFunction()
					end)
				until not _G.FastAttackMode or _G.SuperFastAttackMode
			end
		end)
	end
end)
spawn(function()
	while wait(.5) do
		pcall(function()
			if _G.SuperFastAttackMode then
				repeat wait(.1)
					pcall(function()
						AttackFunction()
					end)
				until not _G.SuperFastAttackMode
			end
		end)
	end
end)

game:GetService('RunService').Stepped:connect(function()
		if  _G.kuypvpq or _G.dokmind or _G.AutoTushita2 or _G.AutoSaber or AutoFarmMaster or AutoFarmgun or _G.cdkp2 or _G.cdkp1 or _G.UnlockRiad or _G.autoMaterial or _G.GodChalice or _G.AutoCocoa or _G.AutoPrince or _G.AutoRainbow or _G.AutoThirdworld1 or _G.AutoCandies or _G.AutoCandiesWarp or _G.AutoBonesWarp or _G.AutoFarmwarp or
        _G.BuddySword or _G.AutoNewworld or _G.AutoReper or _G.AutoBones or _G.AutoFarm or _G.CanvanderSword or
        _G.AutoLongma or _G.AutoTushita or _G.AutoMusketeer or _G.AutoAllBossnoQuest or _G.AutoYama or
        _G.AutoEliteBoss or _G.AutoThirdworld or ATFM or _G.CombatAll or _G.AutoAllBoss or _G.AutoDonSwan or
        FramBoss or _G.Bartiloquest or _G.AutoWater or _G.AutoLibraryKey or
        _G.AutoPole or _G.AutoEs or _G.AutoRengoku then  
        pcall(function()		
			getupvalues(CombatFramework)[2]['activeController'].hitboxMagnitude = 80
			if _G.FastAttackMode then
						getupvalues(CombatFramework)[2]['activeController'].timeToNextAttack = 0
						getupvalues(CombatFramework)[2]['activeController'].timeToNextBlock = 0
						getupvalues(CombatFramework)[2]['activeController'].increment = 3
						
			elseif _G.SuperFastAttackMode then
				
			else				
               game:GetService'VirtualUser':CaptureController()
           	   game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
			end
			
        end)
		else
			_G.bringmob = false
		end

end)
]]
local CombatFramework = require(game:GetService("Players").LocalPlayer.PlayerScripts.CombatFramework)
game:GetService("RunService").RenderStepped:connect(function()
	pcall(function()
		if  _G.Lawraid or _G.kuypvpq or _G.dokmind or _G.AutoTushita2 or _G.AutoSaber or AutoFarmMaster or AutoFarmgun or _G.cdkp2 or _G.cdkp1 or _G.UnlockRiad or _G.autoMaterial or _G.GodChalice or _G.AutoCocoa or _G.AutoPrince or _G.AutoRainbow or _G.AutoThirdworld1 or _G.AutoCandies or _G.AutoCandiesWarp or _G.AutoBonesWarp or _G.AutoFarmwarp or
        _G.BuddySword or _G.AutoNewworld or _G.AutoReper or _G.AutoBones or _G.AutoFarm or _G.CanvanderSword or
        _G.AutoLongma or _G.AutoTushita or _G.AutoMusketeer or _G.AutoAllBossnoQuest or _G.AutoYama or
        _G.AutoEliteBoss or _G.AutoThirdworld or ATFM or _G.CombatAll or _G.AutoAllBoss or _G.AutoDonSwan or
        FramBoss or _G.Bartiloquest or _G.AutoWater or _G.AutoLibraryKey or
        _G.AutoPole or _G.AutoEs or _G.AutoRengoku then  
			pcall(function()
				if _G.FastAttackMode then
					--game:GetService'VirtualUser':CaptureController()
					--game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
				elseif _G.SuperFastAttackMode then
				else		
					--getupvalues(CombatFramework)[2]['activeController'].attack(getupvalues(CombatFramework)[2]['activeController'])	
					game:GetService'VirtualUser':CaptureController()
					game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
				end
			end)
		else
			 _G.bringmob = false
		end
	end)
end)

--[[
game:GetService('RunService').Stepped:connect(function()
    if _G.cdkp1 or _G.UnlockRiad or _G.autoMaterial or _G.GodChalice or _G.AutoCocoa or _G.AutoPrince or _G.AutoRainbow or _G.AutoThirdworld1 or _G.AutoCandies or _G.AutoCandiesWarp or _G.AutoBonesWarp or _G.AutoFarmwarp or
        _G.BuddySword or _G.AutoNewworld or _G.AutoReper or _G.AutoBones or _G.AutoFarm or _G.CanvanderSword or
        _G.AutoLongma or _G.AutoTushita or _G.AutoMusketeer or _G.AutoAllBossnoQuest or _G.AutoYama or
        _G.AutoEliteBoss or _G.AutoThirdworld or ATFM or _G.CombatAll or _G.AutoAllBoss or _G.AutoDonSwan or
        FramBoss   or _G.Bartiloquest or _G.AutoWater or _G.AutoLibraryKey or
        _G.AutoPole or _G.AutoEs or _G.AutoRengoku then  
        pcall(function()	
			if _G.FastAttackMode then
				pcall(function()
					AttackNoCD()
				end)
			else	
                game:GetService'VirtualUser':CaptureController()
            	game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
			end
			
			--
			if _G.FastAttackMode then
				for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
					if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 100 then
						--getupvalues(CombatFramework)[2]['activeController']:attack()
						--game:GetService'VirtualUser':CaptureController()
            			--game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
					end
				end
			else	
                game:GetService'VirtualUser':CaptureController()
            	game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
			end
			
        end)
	else
		_G.bringmob = false
    end
end)
]]
game:GetService('RunService').Heartbeat:connect(function()
    local LocalPlayer = game:GetService("Players").LocalPlayer
    if _G.bringmob then
        pcall(function()
            for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                if v.Humanoid.Health > 0 and not string.find(v.Name, "Boss") then
                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                    --if syn then
                        if isnetworkowner(v.HumanoidRootPart) then
							sethiddenproperty(v.HumanoidRootPart,"NetworkIsSleeping",false)
                            if (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 350 then
                                if bring then
									v.Humanoid:ChangeState(10)
                                    v.HumanoidRootPart.CFrame = _G.PosMon
                                    v.Humanoid.JumpPower = 0
                                    v.Humanoid.WalkSpeed = 0
                                    v.HumanoidRootPart.CanCollide = false
                                    if v.Humanoid:FindFirstChild("Animator") then
                                       v.Humanoid.Animator:Destroy()
                                    end
									sethiddenproperty(game.Players.LocalPlayer, "MaximumSimulationRadius",  math.huge)
									sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius",  9e20)
                                 
                                end
                                if hit then
                                    v.HumanoidRootPart.Transparency = 1
                                else
                                    v.HumanoidRootPart.Transparency = 0.75
                                end
                            end
                        end
						--[[
                    else
                        if (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 350 then
                            if bring then
                                v.HumanoidRootPart.CFrame = _G.PosMon
                                v.Humanoid.JumpPower = 0
                                v.Humanoid.WalkSpeed = 0
                                v.HumanoidRootPart.CanCollide = false
                                if v.Humanoid:FindFirstChild("Animator") then
                                   v.Humanoid.Animator:Destroy()
                                end
                                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius",  math.huge)
                                v.Humanoid:ChangeState(11)
                            end
                            if hit then
                                v.HumanoidRootPart.Transparency = 1
                            else
                                v.HumanoidRootPart.Transparency = 0.75
                            end
                        end
                    end]]
                end
            end
        end)
    end
end)

_G.Nahee = true
spawn(function()
    while wait(.1) do
        if _G.Kaitan then
           -- game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = true
            wait()
            --local lvlop = game:GetService("Players")["LocalPlayer"].Data.Fragments.Value
           -- if lvlop < 1500 and newworld then
             --   game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Candies", "Buy", 2, 2)
          --  end  and game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible == true
            if _G.Nahee then
                wait(2)
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
						if v:IsA("Tool") then
                            pcall(function()
                                if v.Name == "Bomb Fruit" then
                                    if not GetFruitInventory("Bomb-Bomb") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Bomb-Bomb",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Spike Fruit" then
                                    if not GetFruitInventory("Spike-Spike") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Spike-Spike",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Chop Fruit" then
                                    if not GetFruitInventory("Chop-Chop") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Chop-Chop",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Spring Fruit" then
                                    if not GetFruitInventory("Spring-Spring") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Spring-Spring",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Smoke Fruit" then
                                    if not GetFruitInventory("Smoke-Smoke") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Smoke-Smoke",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Flame Fruit" then
                                    if not GetFruitInventory("Flame-Flame") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Flame-Flame",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Ice Fruit" then
                                    if not GetFruitInventory("Ice-Ice") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Ice-Ice",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Sand Fruit" then
                                    if not GetFruitInventory("Sand-Sand") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Sand-Sand",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Dark Fruit" then
                                    if not GetFruitInventory("Dark-Dark") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Dark-Dark",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Light Fruit" then
                                    if not GetFruitInventory("Light-Light") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Light-Light",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Rubber Fruit" then
                                    if not GetFruitInventory("Rubber-Rubber") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Rubber-Rubber",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Barrier Fruit" then
                                    if not GetFruitInventory("Barrier-Barrier") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Barrier-Barrier",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Magma Fruit" then
                                    if not GetFruitInventory("Magma-Magma") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Magma-Magma",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Quake Fruit" then
                                    if not GetFruitInventory("Quake-Quake") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Quake-Quake",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Human: Buddha Fruit" then
                                    if not GetFruitInventory("Human-Human: Buddha") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Human-Human: Buddha",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "String Fruit" then
                                    if not GetFruitInventory("String-String") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "String-String",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Bird: Phoenix Fruit" then
                                    if not GetFruitInventory("Bird-Bird: Phoenix") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Bird-Bird: Phoenix",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Rumble Fruit" then
                                    if not GetFruitInventory("Rumble-Rumble") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Rumble-Rumble",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Paw Fruit" then
                                    if not GetFruitInventory("Paw-Paw") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Paw-Paw",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Gravity Fruit" then
                                    if not GetFruitInventory("Gravity-Gravity") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Gravity-Gravity",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Dough Fruit" then
                                    if not GetFruitInventory("Dough-Dough") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Dough-Dough",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Control Fruit" then
                                    if not GetFruitInventory("Control-Control") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Control-Control",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Dragon Fruit" then
                                    if not GetFruitInventory("Dragon-Dragon") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Dragon-Dragon",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))

                                    end
                                elseif v.Name == "Kilo Fruit" then
                                    if not GetFruitInventory("Kilo-Kilo") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Kilo-Kilo",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))

                                    end
                                elseif v.Name == "Spin Fruit" then
                                    if not GetFruitInventory("Spin-Spin") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Spin-Spin",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))

                                    end
                                elseif v.Name == "Bird: Falcon Fruit" then
                                    if not GetFruitInventory("Bird-Bird: Falcon") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Bird-Bird: Falcon",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))

                                    end
                                elseif v.Name == "Diamond Fruit" then
                                    if not GetFruitInventory("Diamond-Diamond") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Diamond-Diamond",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))

                                    end
                                elseif v.Name == "Love Fruit" then
                                    if not GetFruitInventory("Love-Love") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Love-Love",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))


                                    end
                                elseif v.Name == "Door Fruit" then
                                    if not GetFruitInventory("Door-Door") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Door-Door",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))

                                    end
                                elseif v.Name == "Venom Fruit" then
                                    if not GetFruitInventory("Venom-Venom") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Venom-Venom",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))

                                    end
                                elseif v.Name == "Shadow Fruit" then
                                    if not GetFruitInventory("Shadow-Shadow") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
                                            "Shadow-Shadow",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))

                                    end
                                elseif v.Name == "Revive Fruit" then
                                    if not GetFruitInventory("Revive-Revive") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit", 
											"Revive-Revive",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end

                                elseif v.Name == "Soul Fruit" then
                                    if not GetFruitInventory("Soul-Soul") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
											"Soul-Soul",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
                                elseif v.Name == "Leopard Fruit" then
									if not GetFruitInventory("Soul-Soul") then
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit",
											"Leopard-Leopard",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                    end
									
								end
                            end)
                        end
                    end
                end)
            end
        end
    end
end)

--spawn(function() while wait(.1) do if _G.Invisible then invi() end end end)

--webhook
--[[
spawn(function()
    while wait() do
        pcall(function () 
            local Level = tonumber(game.Players.localPlayer.Data.Level.Value) + tonumber(_G.Notification_lv)
            if _G.AutoFarmwarp or _G.AutoFarm and _G.Openwebhook then
                repeat wait() until game.Players.localPlayer.Data.Level.Value >= Level
                local HttpServ = game:GetService('HttpService')
                local url = _G.Webhook
                local data = {
                    ["content"] = "",
                    ["embeds"] = {
                        {
                            ["title"] = "Root Hub - Notification",
                            ["description"] = info.Name,
                            ["type"] = "rich",
                            ["color"] = tonumber(0xAB0909),
                            ["fields"] = {
                                {
                                    ["name"] = "👨‍🎤Username👨‍🎤",
                                    ["value"] = "《 " ..Game.Players.LocalPlayer.Name .. " 》",
                                    ["inline"] = true
                                }, {
                                    ["name"] = "⚡Level⚡",
                                    ["value"] = "《 " ..
                                        game.Players.localPlayer.Data.Level.Value .. " 》",
                                    ["inline"] = true
                                }, {
                                    ["name"] = "🔆Weapons🔆",
                                    ["value"] = "《 " .. _G.SelectWeapon .." 》",
                                    ["inline"] = true
                                }
                            },
                            ["footer"] = {["text"] = os.date("%c")}
                        }
                    }
                }
                local newdata = HttpServ:JSONEncode(data)
                local headers = {["content-type"] = "application/json"}
                local request_payload = {
                    Url = url,
                    Body = newdata,
                    Method = "POST",
                    Headers = headers
                }
                http_request(request_payload)
            end
         end)
    end
end)
]]


--superhuman
function raidmelee()
    _G.Nahee = false
    _G.bringmob = false
    _G.Kaitan = false
    _G.ServerHop = false
    if game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible == false then 
        wait(2)
        game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = true 
    end
        
        if game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Bomb-Bomb") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Bomb-Bomb")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Spike-Spike") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Spike-Spike")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Chop-Chop") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Chop-Chop")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Spring-Spring") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Spring-Spring")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Smoke-Smoke") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Smoke-Smoke")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Flame-Flame") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Flame-Flame")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Ice-Ice") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Ice-Ice")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Sand-Sand") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Sand-Sand")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Dark-Dark") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Dark-Dark")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Light-Light") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Light-Light")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Rubber-Rubber") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Rubber-Rubber")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Barrier-Barrier") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Barrier-Barrier")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Magma-Magma") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Magma-Magma")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Kilo-Kilo") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Kilo-Kilo")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Spin-Spin") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Spin-Spin")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Bird-Bird: Falcon") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Bird-Bird: Falcon")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Diamond-Diamond") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Diamond-Diamond")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Love-Love") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Love-Love")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild("Revive-Revive") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Revive-Revive")
            game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false   
        end
        wait(2)
        _G.AutoFarm = false
        _G.RaidIs = "Ice"
        _G.KillAura = true
        _G.AutoRaid = true
end

function superhuman()
    if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman",true) == 3 then
        if game:GetService("Players").LocalPlayer.Character.Humanoid.Health > 0 and game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectro",true) ~= 1 and game:GetService("Players").LocalPlayer.Data.Beli.Value >= 500000 then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectro")
        elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health > 0 and (game.Players.LocalPlayer.Character:FindFirstChild("Electro") and tonumber(game.Players.LocalPlayer.Character:FindFirstChild("Electro").Level.Value) >= 300) or (game.Players.LocalPlayer.Backpack:FindFirstChild( "Electro") and tonumber(game.Players.LocalPlayer.Backpack:FindFirstChild("Electro").Level.Value) >= 300)  then
            if game:GetService("Players").LocalPlayer.Data.Beli.Value >= 150000 then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
            end
        elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health > 0 and (game.Players.LocalPlayer.Character:FindFirstChild("Black Leg") and tonumber(game.Players.LocalPlayer.Character:FindFirstChild("Black Leg").Level.Value) >= 300) or (game.Players.LocalPlayer.Backpack:FindFirstChild( "Black Leg") and tonumber(game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg").Level.Value) >= 300)  then
            if game:GetService("Players").LocalPlayer.Data.Beli.Value >= 750000 then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyFishmanKarate")
            end
        elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health > 0 and (game.Players.LocalPlayer.Character:FindFirstChild("Fishman Karate") and tonumber(game.Players.LocalPlayer.Character:FindFirstChild("Fishman Karate").Level.Value) >= 300) or (game.Players.LocalPlayer.Backpack:FindFirstChild( "Fishman Karate") and tonumber(game.Players.LocalPlayer.Backpack:FindFirstChild("Fishman Karate").Level.Value) >= 300)  then  
            if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "DragonClaw", "1") ~= 1 then
                if game.Players.LocalPlayer.Data.Fragments.Value < 1500 and game:GetService("Players").LocalPlayer.Data.Level.Value >= 1100 then
                    raidmelee()
                else
                    _G.KillAura = false
                    _G.AutoRaid = false
                    wait(2)
                    _G.ServerHop = true
					_G.ServerHop = true
                    _G.AutoFarm = true
                    _G.Nahee = true
                    _G.Kaitan = true
					game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "DragonClaw", "1")
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "DragonClaw", "2")
                end
			elseif not game.Players.LocalPlayer.Character:FindFirstChild("Dragon Claw") and not game.Players.LocalPlayer.Backpack:FindFirstChild("Dragon Claw") then
            	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "DragonClaw", "1")
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "DragonClaw", "2")
			end
        end
    elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman",true) == 0 then
		if game:GetService("Players").LocalPlayer.Data.Beli.Value >= 3000000 then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman")
		end
	else
		_G.AutoSuperhuman = false
    end
    
end


spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoSuperhuman then
            superhuman()
        end
    end
end)


if OldWorld then
    selectmob = {
        "Bandit [Lv. 5]", "Monkey [Lv. 14]", "Gorilla [Lv. 20]",
        "Pirate [Lv. 35]", "Brute [Lv. 45]", "Desert Bandit [Lv. 60]",
        "Desert Officer [Lv. 70]", "Snow Bandit [Lv. 90]",
        "Snowman [Lv. 100]", "Chief Petty Officer [Lv. 120]",
        "Sky Bandit [Lv. 150]", "Dark Master [Lv. 175]",
		"Prisoner [Lv. 190]", "Dangerous Prisoner [Lv. 210]",
		"Toga Warrior [Lv. 2250]", "Gladiator [Lv. 275]", "Military Soldier [Lv. 300]",
        "Military Spy [Lv. 330]", "Fishman Warrior [Lv. 375]",
		"Fishman Commando [Lv. 400]", "God's Guard [Lv. 450]",
        "Shanda [Lv. 475]", "Royal Squad [Lv. 525]",
		"Royal Soldier [Lv. 550]", "Galley Pirate [Lv. 625]",
		"Galley Pirate [Lv. 625]", "Galley Captain [Lv. 650]"
    }
end

if newworld then
    selectmob = {
        "Raider [Lv. 700]", "Mercenary [Lv. 725]",
		"Swan Pirate [Lv. 775]", "Factory Staff [Lv. 800]",
		"Marine Lieutenant [Lv. 875]", "Marine Captain [Lv. 900]", 
		"Zombie [Lv. 950]", "Vampire [Lv. 975]",
        "Snow Trooper [Lv. 1000]", "Winter Warrior [Lv. 1050]",
        "Lab Subordinate [Lv. 1100]", "Horned Warrior [Lv. 1125]",
        "Magma Ninja [Lv. 1175]", "Lava Pirate [Lv. 1200]",
        "Ship Deckhand [Lv. 1250]", "Ship Engineer [Lv. 1275]",
		"Ship Steward [Lv. 1300]", "Ship Officer [Lv. 1325]", "Arctic Warrior [Lv. 1350]",
        "Snow Lurker [Lv. 1375]", "Sea Soldier [Lv. 1425]",
        "Water Fighter [Lv. 1450]"
    }
end

if sea3world then
    selectmob = {
        "---","Pirate Millionaire [Lv. 1500]", "Ghost [Lv. 1500]", "Pistol Billionaire [Lv. 1525]",
        "Dragon Crew Warrior [Lv. 1575]", "Dragon Crew Archer [Lv. 1600]",
        "Female Islander [Lv. 1625]", "Giant Islander [Lv. 1650]",
        "Marine Commodore [Lv. 1700]", "Marine Rear Admiral [Lv. 1725]",
        "Fishman Raider [Lv. 1775]", "Fishman Captain [Lv. 1800]",
        "Forest Pirate [Lv. 1825]", "Mythological Pirate [Lv. 1850]",
        "Jungle Pirate [Lv. 1900]", "Musketeer Pirate [Lv. 1925]",
        "Reborn Skeleton [Lv. 1975]", "Living Zombie [Lv. 2000]",
        "Demonic Soul [Lv. 2025]", "Posessed Mummy [Lv. 2050]",
        "Peanut Scout [Lv. 2075]", "Peanut President [Lv. 2100]",
        "Ice Cream Chef [Lv. 2125]", "Ice Cream Commander [Lv. 2150]",
        "Cookie Crafter [Lv. 2200]","Cake Guard [Lv. 2225]",
        "Baking Staff [Lv. 2250]","Head Baker [Lv. 2275]",
		"Cocoa Warrior [Lv. 2300]","Chocolate Bar Battler [Lv. 2325]",
		"Sweet Thief [Lv. 2350]","Candy Rebel [Lv. 2375]"
    }
end

MasterySection:AddToggle({
	Name = "Auto Mastery Melee & Sword",
	Flag = "Mastery_malee",
	Callback = function(t, o)
		ATFM = t
  		  if not ATFM then
        	pcall(function()
            	_G.tweennew:Cancel()
       		end)
    	end
		savenaja()
	end
})

MasterySection:AddToggle({
	Name = "Auto Fruit Mastery",
	Flag = "Mastery_fruit",
	Callback = function(t, o)
		AutoFarmMaster = t
   		if not AutoFarmMaster then
        	pcall(function()
            	_G.tweennew:Cancel()
        	end)
    	end
		savenaja()
	end
})

MasterySection:AddToggle({
	Name = "Auto Gun Mastery",
	Flag = "Mastery_gun",
	Callback = function(t, o)
		AutoFarmgun = t
        if not AutoFarmgun then
            pcall(function()
                _G.tweennew:Cancel()
            end)
        end
		savenaja()
	end
})

MasterySection:AddDropdown({
    Name = "Select Mob",
	Flag = "Select_mob",
    List  = selectmob,
	Callback = function(t,o)
		SelectMob1 = t
		savenaja()
	end
})

MasterySection:AddDropdown({
    Name = "Select Melee Weapon",
	Flag = "Select_melee",
    List  = function()
        weapon = {}
		table.insert(weapon, '')
        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") then
                table.insert(weapon, v.Name)
            end
        end
        
        for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if v:IsA("Tool") then
                table.insert(weapon, v.Name)
            end
        end
        return weapon
    end,
    Callback = function(t, o)
		SelectWeaponmon = t
		savenaja()
    end
})

MasterySection:AddDropdown({
    Name = "Select Fruit",
	Flag = "Select_fruit",
    List  = function()
        weaponfruit = {}
		table.insert(weaponfruit, '')
        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") and v.ToolTip == "Blox Fruit" then
                table.insert(weaponfruit, v.Name)
            end
        end
        
        for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if v:IsA("Tool") and v.ToolTip == "Blox Fruit" then
                table.insert(weaponfruit, v.Name)
            end
        end
        return weaponfruit
    end,
    Callback = function(t, o)
		SelectWeaFruit = t
		savenaja()
    end
})

MasterySection:AddDropdown({
    Name = "Select Gun",
	Flag = "Select_gun",
    List  = function()
        weaponGun = {}
		table.insert(weaponGun, '')
        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") and v.ToolTip == "Gun" then
                table.insert(weaponGun, v.Name)
            end
        end
        
        for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if v:IsA("Tool") and v.ToolTip == "Gun" then
                table.insert(weaponGun, v.Name)
            end
        end
        return weaponGun
    end,
    Callback = function(t, o)
		SelectWeagun = t
		savenaja()
    end
})

MasterySection:AddSlider({
    Name = "Health",
	Flag = "Health",
    Value = 20,
    Min = 0,
    Max = 100,
    Textbox = true,
    Format = function(Value)
            return "Health " .. tostring(Value) .. " %"
    end,
	Callback = function(t,o)
		Healthde = t
		savenaja()
	end
})

local moblist = {
    "Bandit [Lv. 5]", "Monkey [Lv. 14]", "Gorilla [Lv. 20]",
    "Pirate [Lv. 35]", "Brute [Lv. 45]", "Desert Bandit [Lv. 60]",
    "Desert Officer [Lv. 70]", "Snow Bandit [Lv. 90]", "Snowman [Lv. 100]",
    "Chief Petty Officer [Lv. 120]", "Sky Bandit [Lv. 150]",
    "Toga Warrior [Lv. 225]", "Gladiator [Lv. 275]",
    "Military Soldier [Lv. 300]", "Military Spy [Lv. 330]",
    "God's Guard [Lv. 450]", "Shanda [Lv. 475]", "Galley Pirate [Lv. 625]"
}

local mobnewlist = {
    "Raider [Lv. 700]", "Swan Pirate [Lv. 775]", "Marine Captain [Lv. 900]",
    "Zombie [Lv. 950]", "Vampire [Lv. 975]", "Snow Trooper [Lv. 1000]",
    "Winter Warrior [Lv. 1050]", "Lab Subordinate [Lv. 1100]",
    "Horned Warrior [Lv. 1125]", "Magma Ninja [Lv. 1175]",
    "Lava Pirate [Lv. 1200]", "Ship Deckhand [Lv. 1250]",
    "Ship Engineer [Lv. 1275]", "Ship Officer [Lv. 1325]",
    "Arctic Warrior [Lv. 1350]", "Snow Lurker [Lv. 1375]",
    "Sea Soldier [Lv. 1425]", "Water Fighter [Lv. 1450]"
}

local mob3sea = {
    "Pirate Millionaire [Lv. 1500]", "Ghost [Lv. 1500]", "Pistol Billionaire [Lv. 1525]",
    "Dragon Crew Warrior [Lv. 1575]", "Dragon Crew Archer [Lv. 1600]",
    "Female Islander [Lv. 1625]", "Giant Islander [Lv. 1650]",
    "Marine Commodore [Lv. 1700]", "Marine Rear Admiral [Lv. 1725]",
    "Fishman Raider [Lv. 1775]", "Fishman Captain [Lv. 1800]",
    "Forest Pirate [Lv. 1825]", "Mythological Pirate [Lv. 1850]",
    "Jungle Pirate [Lv. 1900]", "Musketeer Pirate [Lv. 1925]",
    "Reborn Skeleton [Lv. 1975]", "Living Zombie [Lv. 2000]",
    "Demonic Soul [Lv. 2025]", "Posessed Mummy [Lv. 2050]",
    "Peanut Scout [Lv. 2075]", "Peanut President [Lv. 2100]",
    "Ice Cream Chef [Lv. 2125]", "Ice Cream Commander [Lv. 2150]",
    "Cookie Crafter [Lv. 2200]","Cake Guard [Lv. 2225]",
    "Baking Staff [Lv. 2250]","Head Baker [Lv. 2275]",
	"Cocoa Warrior [Lv. 2300]","Chocolate Bar Battler [Lv. 2325]",
	"Sweet Thief [Lv. 2350]","Candy Rebel [Lv. 2375]"
}

function FarmmonAuto()
    if game.Workspace.Enemies:FindFirstChild(SelectMob1) then
        local mobs = game.Workspace.Enemies:GetChildren()
        for i = 1, #mobs do
            local v = mobs[i]
            if v.Name == SelectMob1 and v:IsA("Model") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                return v
            end
        end
    elseif not game.Workspace.Enemies:FindFirstChild(SelectMob1) then
        --standup.CFrame = game.ReplicatedStorage:FindFirstChild(SelectMob1).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
        --tp(standup.CFrame * CFrame.new(0, 4, 0))
		local subname = string.gsub(SelectMob1, "%p", "")
    	local realname = string.gsub(subname, "%s+Lv %d+.+", "")
		if game.ReplicatedStorage:FindFirstChild(SelectMob1) then
			standup.CFrame = game.ReplicatedStorage:FindFirstChild(SelectMob1).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
			tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(SelectMob1) then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[SelectMob1].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		end
    end
end

function autofarmmon()
    if ATFM then
        pcall(function()
            local v = FarmmonAuto()
            EquipWeapon(SelectWeaponmon)
            autobuso()
            pcall(function()
                v.Humanoid.JumpPower = 0
                v.Humanoid.WalkSpeed = 0
                v.HumanoidRootPart.CanCollide = false
                v.Humanoid:ChangeState(14)
				v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                tp(standup.CFrame * CFrame.new(0, 4, 0))
				game:GetService'VirtualUser':CaptureController()
            	game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
           		 _G.PosMon = v.HumanoidRootPart.CFrame
                _G.bringmob = true
            end)
        end)
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if ATFM then autofarmmon() end
    end
end)


function autofarmgun()
    if AutoFarmgun then
        pcall(function()
            local v = FarmmonAuto()
            v.Humanoid.JumpPower = 0
            v.Humanoid.WalkSpeed = 0
            v.HumanoidRootPart.CanCollide = false
			v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
            v.Humanoid:ChangeState(14)
            HP = v.Humanoid.MaxHealth
            standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
			game:GetService'VirtualUser':CaptureController()
            game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
            shoot = "no"
            x = v.HumanoidRootPart.CFrame.X
            y = v.HumanoidRootPart.CFrame.Y
            z = v.HumanoidRootPart.CFrame.Z
            autobuso()
            if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > HP * Healthde / 100 then
                EquipWeapon(SelectWeaponmon)
                _G.bringmob = true
                _G.PosMon = v.HumanoidRootPart.CFrame
                sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius", math.huge)
            end
            if v.Humanoid.Health <= HP * Healthde / 100 and
                v:FindFirstChild("HumanoidRootPart") and
                v:FindFirstChild("Humanoid") then
                shoot = "yes"

                EquipWeapon(SelectWeagun)
				
                _G.bringmob = true
                _G.PosMon = v.HumanoidRootPart.CFrame
                local uui = v.HumanoidRootPart.Position
                if SkillZ and
                    game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[SelectWeagun].Z.Title.TextColor3 == Color3.fromRGB(255, 255, 255) then
                    game:GetService("Players").LocalPlayer.Character:FindFirstChild(SelectWeagun).RemoteEvent:FireServer(uui)
                    pcall(function()
                        game:GetService('VirtualUser'):SetKeyDown('z')
                        game:GetService('VirtualUser'):SetKeyUp('z')
                    end)
                    game:GetService("Players").LocalPlayer.Character:FindFirstChild(SelectWeagun).RemoteEvent:FireServer(false)
                    wait(.1)
                    game:GetService("Players").LocalPlayer.Character:FindFirstChild( SelectWeagun).RemoteEvent:FireServer(uui)

                end
                wait(.1)
                if SkillX and
                    game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[SelectWeagun].X.Title.TextColor3 == Color3.fromRGB(255, 255, 255) then
                    game:GetService("Players").LocalPlayer.Character:FindFirstChild(SelectWeagun).RemoteEvent:FireServer(uui)
                    pcall(function()
                        game:GetService('VirtualUser'):SetKeyDown('x')
                        game:GetService('VirtualUser'):SetKeyUp('x')
                    end)
                    game:GetService("Players").LocalPlayer.Character:FindFirstChild(SelectWeagun).RemoteEvent:FireServer(false)
                    game:GetService("Players").LocalPlayer.Character:FindFirstChild(SelectWeagun).RemoteEvent:FireServer(uui)
                end
            end
        end)
    end
end

local lp1 = game:GetService('Players').LocalPlayer
local mouse1 = lp1:GetMouse()
mouse1.Button1Down:Connect(function()
    if shoot == "yes" and AutoFarmgun and game.Players.LocalPlayer.Character:FindFirstChild(SelectWeagun).RemoteFunctionShoot then
        pcall(function()
            sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius", math.huge)
             game:GetService("Players").LocalPlayer.Character[SelectWeagun].RemoteFunctionShoot:InvokeServer(Vector3.new(x, y, z),game.Workspace.Enemies:FindFirstChild(SelectMob1).HumanoidRootPart)
        end)
    end
end)

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if AutoFarmgun then autofarmgun() end
    end
end)

function fruitfarmmas()
    if AutoFarmMaster then
        pcall(function()
            local v = FarmmonAuto()
            v.Humanoid.JumpPower = 0
            v.Humanoid.WalkSpeed = 0
            v.HumanoidRootPart.CanCollide = false
			v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
            v.Humanoid:ChangeState(14)
            HP = v.Humanoid.MaxHealth
            standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
			_G.bringmob = true
			_G.PosMon = v.HumanoidRootPart.CFrame
			game:GetService'VirtualUser':CaptureController()
            game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
            autobuso()
            if v.Humanoid.Health >= HP * Healthde / 100 then
                sakill = false
                EquipWeapon(SelectWeaponmon)

                sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius", math.huge)
            end
            if v.Humanoid.Health <= HP * Healthde / 100 then
                EquipWeapon(SelectWeaFruit)
                --    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                sakill = true
                pcall(function()
                    x = v.HumanoidRootPart.CFrame.X
                    y = v.HumanoidRootPart.CFrame.Y
                    z = v.HumanoidRootPart.CFrame.Z
                    uui = v.HumanoidRootPart.Position
					PositionSkillMasteryDevilFruit = v.HumanoidRootPart.Position

                end)
            end
        end)
    end
end

game:GetService("RunService").Heartbeat:Connect(function()
    pcall(function()
        if AutoFarmMaster and sakill and SkillZ and
            game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[SelectWeaFruit].Z.Title.TextColor3 == Color3.fromRGB(255, 255, 255) then
            --game:GetService("Players").LocalPlayer.Character[game.Players.LocalPlayer.Data.DevilFruit.Value].RemoteFunction:InvokeServer("Z",Vector3.new(0,0,0))
            local vim = game:service'VirtualInputManager'
            vim:SendKeyEvent(true, "Z", false, game)
			wait(1)
            vim:SendKeyEvent(false, "Z", false, game)
        end
        wait(.1)
        if AutoFarmMaster and sakill and SkillX and
            game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[SelectWeaFruit].X.Title.TextColor3 == Color3.fromRGB(255, 255, 255) then
            --game:GetService("Players").LocalPlayer.Character[game.Players.LocalPlayer.Data.DevilFruit.Value].RemoteFunction:InvokeServer("X",Vector3.new(0,0,0))
            local vim = game:service'VirtualInputManager'
            vim:SendKeyEvent(true, "X", false, game)
			wait(1)
            vim:SendKeyEvent(false, "X", false, game)
        end
        wait(.1)
        if AutoFarmMaster and sakill and SkillC and
            game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[SelectWeaFruit].C.Title.TextColor3 == Color3.fromRGB(255, 255, 255) then
            --game:GetService("Players").LocalPlayer.Character[game.Players.LocalPlayer.Data.DevilFruit.Value].RemoteFunction:InvokeServer("C",Vector3.new(0,0,0))
            local vim = game:service'VirtualInputManager'
            vim:SendKeyEvent(true, "C", false, game)
			wait(1)
            vim:SendKeyEvent(false, "C", false, game)
        end
        wait(.1)
        if AutoFarmMaster and sakill and SkillV and
            game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[SelectWeaFruit].V.Title.TextColor3 == Color3.fromRGB(255, 255, 255) then
            --game:GetService("Players").LocalPlayer.Character[game.Players.LocalPlayer.Data.DevilFruit.Value].RemoteFunction:InvokeServer("V",Vector3.new(0,0,0))
            local vim = game:service'VirtualInputManager'
            vim:SendKeyEvent(true, "V", false, game)
			wait(1)
            vim:SendKeyEvent(false, "V", false, game)
        end
    end)
end)

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if AutoFarmMaster then fruitfarmmas() end
    end
end)
spawn(function()
	local gg = getrawmetatable(game)
	local old = gg.__namecall
	setreadonly(gg,false)
	gg.__namecall = newcclosure(function(...)
		local method = getnamecallmethod()
		local args = {...}
		if tostring(method) == "FireServer" then
			if tostring(args[1]) == "RemoteEvent" then
				if tostring(args[2]) ~= "true" and tostring(args[2]) ~= "false" then
					if AutoFarmMaster then
						args[2] = PositionSkillMasteryDevilFruit
						return old(unpack(args))
					elseif _G.CombatAll then
						args[2] = PVPMasteryDevilFruit
						return old(unpack(args))
					elseif AimbotSkill then
						args[2] = lek1
						return old(unpack(args))
					elseif AimbotSkill2 then
						args[2] = lek2
						return old(unpack(args))
					end
				end
			end
		end
		return old(...)
	end)
end)

function CheckQuestBoss()
    if SelectBoss == "Diamond [Lv. 750] [Boss]" then
        MsBoss = "Diamond [Lv. 750] [Boss]"
        NaemQuestBoss = "Area1Quest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-424.080078, 73.0055847, 1836.91589)
        CFrameBoss = CFrame.new(-1736.26587, 198.627731, -236.412857)
    elseif SelectBoss == "Jeremy [Lv. 850] [Boss]" then
        MsBoss = "Jeremy [Lv. 850] [Boss]"
        NaemQuestBoss = "Area2Quest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(632.698608, 73.1055908, 918.666321)
        CFrameBoss = CFrame.new(2203.76953, 448.966034, 752.731079)
    elseif SelectBoss == "Order [Lv. 1250] [Raid Boss]" then
        MsBoss = "Order [Lv. 1250] [Raid Boss]"
        CFrameBoss = CFrame.new(-6225.06055, 27.9920139, -5083.57178)
    elseif SelectBoss == "Darkbeard [Lv. 1000] [Raid Boss]" then
        MsBoss = "Darkbeard [Lv. 1000] [Raid Boss]"
        CFrameBoss = CFrame.new(3807.0979, 11.7997465, -3452.19849)
    elseif SelectBoss == "Fajita [Lv. 925] [Boss]" then
        MsBoss = "Fajita [Lv. 925] [Boss]"
        NaemQuestBoss = "MarineQuest3"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-2442.65015, 73.0511475, -3219.11523)

        CFrameBoss = CFrame.new(-2297.40332, 115.449463, -3946.53833)
    elseif SelectBoss == "Don Swan [Lv. 1000] [Boss]" then
        MsBoss = "Don Swan [Lv. 1000] [Boss]"
        CFrameBoss = CFrame.new(2288.802, 15.1870775, 863.034607)
    elseif SelectBoss == "Smoke Admiral [Lv. 1150] [Boss]" then
        MsBoss = "Smoke Admiral [Lv. 1150] [Boss]"
        NaemQuestBoss = "IceSideQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-6059.96191, 15.9868021, -4904.7373)
        CFrameBoss = CFrame.new(-5115.72754, 23.7664986, -5338.2207)
    elseif SelectBoss == "Cursed Captain [Lv. 1325] [Raid Boss]" then
        MsBoss = "Cursed Captain [Lv. 1325] [Raid Boss]"
        CFrameBoss = CFrame.new(916.928589, 181.092773, 33422, -0.999505103)
    elseif SelectBoss == "Awakened Ice Admiral [Lv. 1400] [Boss]" then
        MsBoss = "Awakened Ice Admiral [Lv. 1400] [Boss]"
        NaemQuestBoss = "FrostQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(5669.33203, 28.2118053, -6481.55908)
        CFrameBoss = CFrame.new(6407.33936, 340.223785, -6892.521)
    elseif SelectBoss == "Tide Keeper [Lv. 1475] [Boss]" then
        MsBoss = "Tide Keeper [Lv. 1475] [Boss]"
        NaemQuestBoss = "ForgottenQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-3053.89648, 236.881363, -10148.2324)

        CFrameBoss = CFrame.new(-3570.18652, 123.328949, -11555.9072)
        -- Old World
    elseif SelectBoss == "Saber Expert [Lv. 200] [Boss]" then
        MsBoss = "Saber Expert [Lv. 200] [Boss]"
        CFrameBoss = CFrame.new(-1458.89502, 29.8870335, -50.633564)
    elseif SelectBoss == "The Gorilla King [Lv. 25] [Boss]" then
        MsBoss = "The Gorilla King [Lv. 25] [Boss]"
        NaemQuestBoss = "JungleQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-1604.12012, 36.8521118, 154.23732)

        CFrameBoss = CFrame.new(-1223.52808, 6.27936459, -502.292664)
    elseif SelectBoss == "The Saw [Lv. 100] [Boss]" then
        MsBoss = "The Saw [Lv. 100] [Boss]"
        CFrameBoss = CFrame.new(-666.853516, 15.6631079, 1648.69702)
    elseif SelectBoss == "Bobby [Lv. 55] [Boss]" then
        MsBoss = "Bobby [Lv. 55] [Boss]"
        NaemQuestBoss = "BuggyQuest1"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-1139.59717, 4.75205183, 3825.16211)

        CFrameBoss = CFrame.new(-1147.65173, 32.5966301, 4156.02588)
    elseif SelectBoss == "Yeti [Lv. 110] [Boss]" then
        MsBoss = "Yeti [Lv. 110] [Boss]"
        NaemQuestBoss = "SnowQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(1384.90247, 87.3078308, -1296.6825)

        CFrameBoss = CFrame.new(1221.7356, 138.046906, -1488.84082)
    elseif SelectBoss == "Mob Leader [Lv. 120] [Boss]" then
        MsBoss = "Mob Leader [Lv. 120] [Boss]"
        CFrameBoss = CFrame.new(-2848.59399, 7.4272871, 5342.44043)
        -- The Gorilla King [Lv. 25] [Boss]
    elseif SelectBoss == "Vice Admiral [Lv. 130] [Boss]" then
        MsBoss = "Vice Admiral [Lv. 130] [Boss]"
        NaemQuestBoss = "MarineQuest2"
        LevelQuestBoss = 2
        CFrameQuestBoss = CFrame.new(-5035.42285, 28.6520386, 4324.50293)

        CFrameBoss = CFrame.new(-5078.45898, 99.6520691, 4402.1665)
    elseif SelectBoss == "Warden [Lv. 175] [Boss]" then
        MsBoss = "Warden [Lv. 175] [Boss]"
        NaemQuestBoss = "ImpelQuest"
        LevelQuestBoss = 1
        CFrameQuestBoss = CFrame.new(4851.35059, 5.68744135, 743.251282)

        CFrameBoss = CFrame.new(5232.5625, 5.26856995, 747.506897)
    elseif SelectBoss == "Swan [Lv. 225] [Boss]" then
        MsBoss = "Swan [Lv. 225] [Boss]"
        NaemQuestBoss = "ImpelQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(4851.35059, 5.68744135, 743.251282)

        CFrameBoss = CFrame.new(5232.5625, 5.26856995, 747.506897)
    elseif SelectBoss == "Chief Warden [Lv. 200] [Boss]" then
        MsBoss = "Chief Warden [Lv. 200] [Boss]"
        NaemQuestBoss = "ImpelQuest"
        LevelQuestBoss = 2
        CFrameQuestBoss = CFrame.new(4851.35059, 5.68744135, 743.251282)

        CFrameBoss = CFrame.new(5232.5625, 5.26856995, 747.506897)
    elseif SelectBoss == "Flamingo [Lv. 225] [Boss]" then
        MsBoss = "Flamingo [Lv. 225] [Boss]"
        NaemQuestBoss = "ImpelQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(4851.35059, 5.68744135, 743.251282)

        CFrameBoss = CFrame.new(5232.5625, 5.26856995, 747.506897)
    elseif SelectBoss == "Magma Admiral [Lv. 350] [Boss]" then
        MsBoss = "Magma Admiral [Lv. 350] [Boss]"
        NaemQuestBoss = "MagmaQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-5317.07666, 12.2721891, 8517.41699)

        CFrameBoss = CFrame.new(-5530.12646, 22.8769703, 8859.91309)
    elseif SelectBoss == "Fishman Lord [Lv. 425] [Boss]" then
        MsBoss = "Fishman Lord [Lv. 425] [Boss]"
        NaemQuestBoss = "FishmanQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(61123.0859, 18.5066795, 1570.18018)

        CFrameBoss = CFrame.new(61351.7773, 31.0306778, 1113.31409)
    elseif SelectBoss == "Wysper [Lv. 500] [Boss]" then
        MsBoss = "Wysper [Lv. 500] [Boss]"
        NaemQuestBoss = "SkyExp1Quest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-7862.94629, 5545.52832, -379.833954)

        CFrameBoss = CFrame.new(-7925.48389, 5550.76074, -636.178345)
    elseif SelectBoss == "Thunder God [Lv. 575] [Boss]" then
        MsBoss = "Thunder God [Lv. 575] [Boss]"
        NaemQuestBoss = "SkyExp2Quest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-7902.78613, 5635.99902, -1411.98706)

        CFrameBoss = CFrame.new(-7917.53613, 5616.61377, -2277.78564)
    elseif SelectBoss == "Cyborg [Lv. 675] [Boss]" then
        MsBoss = "Cyborg [Lv. 675] [Boss]"
        NaemQuestBoss = "FountainQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(5253.54834, 38.5361786, 4050.45166)

        CFrameBoss = CFrame.new(6041.82813, 52.7112198, 3907.45142)

    elseif SelectBoss == "Stone [Lv. 1550] [Boss]" then
        MsBoss = "Stone [Lv. 1550] [Boss]"
        NaemQuestBoss = "PiratePortQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-290.522095, 43.8190117, 5579.83252)
        CFrameBoss = CFrame.new(-962.034302, 94.9098206, 6940.4209)

    elseif SelectBoss == "Kilo Admiral [Lv. 1750] [Boss]" then
        MsBoss = "Kilo Admiral [Lv. 1750] [Boss]"
        NaemQuestBoss = "MarineTreeIsland"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(2177.75317, 28.7312393, -6739.44824)
        CFrameBoss = CFrame.new(2696.65332, 423.560394, -7160.86475)

    elseif SelectBoss == "Beautiful Pirate [Lv. 1950] [Boss]" then
        MsBoss = "Beautiful Pirate [Lv. 1950] [Boss]"
        NaemQuestBoss = "DeepForestIsland2"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-12682.2275, 390.886566, -9901.95215)
        CFrameBoss = CFrame.new(5314.80518, 22.5622349, -116.379112)

    elseif SelectBoss == "Captain Elephant [Lv. 1875] [Boss]" then
        MsBoss = "Captain Elephant [Lv. 1875] [Boss]"
        NaemQuestBoss = "DeepForestIsland"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-13233.0879, 332.403961, -7629.69922)
        CFrameBoss = CFrame.new(-13567.4727, 361.712708, -8418.27441)

    elseif SelectBoss == "Island Empress [Lv. 1675] [Boss]" then
        MsBoss = "Island Empress [Lv. 1675] [Boss]"
        NaemQuestBoss = "AmazonQuest2"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(5448.25195, 603.015747, 749.316284)
        CFrameBoss = CFrame.new(5539.03076, 665.901917, 202.038727)

    elseif SelectBoss == "Longma [Lv. 2000] [Boss]" then
        MsBoss = "Longma [Lv. 2000] [Boss]"
        NaemQuestBoss = "AmazonQuest2"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(5448.25195, 603.015747, 749.316284)
        CFrameBoss = CFrame.new(-10171.7051, 406.981995, -9552.31738)

    elseif SelectBoss == "rip_indra True Form [Lv. 5000] [Raid Boss]" then
        MsBoss = "rip_indra True Form [Lv. 5000] [Raid Boss]"
        NaemQuestBoss = "AmazonQuest2"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(5448.25195, 603.015747, 749.316284)
        CFrameBoss = CFrame.new(-5332.30371, 423.985413, -2673.48218)

    elseif SelectBoss == "Soul Reaper [Lv. 2100] [Raid Boss]" then
        MsBoss = "Soul Reaper [Lv. 2100] [Raid Boss]"
        NaemQuestBoss = "AmazonQuest2"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(5448.25195, 603.015747, 749.316284)
        CFrameBoss = CFrame.new(-9499.01563, 315.925537, 6696.6416)

    elseif SelectBoss == "Cake Queen [Lv. 2175] [Boss]" then
        MsBoss = "Cake Queen [Lv. 2175] [Boss]"
        NaemQuestBoss = "IceCreamIslandQuest"
        LevelQuestBoss = 3
        CFrameQuestBoss = CFrame.new(-725.720886, 381.783478, -10977.2139)
        CFrameBoss = CFrame.new(-720.412231, 381.5914, -10999.8828)
    
    elseif SelectBoss == "Cake Prince [Lv. 2300] [Raid Boss]" then
        MsBoss = "Cake Prince [Lv. 2300] [Raid Boss]"
    end 
end

BossSection:AddDropdown({
    Name = "Select Boss",
	Flag = "Select_boss",
    List  = function()
        Boss = {}
		table.insert(Boss, '')
		for i, v in pairs(game.ReplicatedStorage:GetChildren()) do
			if string.find(v.Name, "Boss") then
				if v.Name == "Ice Admiral [Lv. 700] [Boss]" then
				else
					table.insert(Boss,v.Name)
				end
			end
		end
		for i, v in pairs(game.workspace.Enemies:GetChildren()) do
			if string.find(v.Name, "Boss") then
				if v.Name == "Ice Admiral [Lv. 700] [Boss]" then
				else
					table.insert(Boss,v.Name)
				end
			end
		end
        return Boss
    end,
    Callback = function(t, o)
		SelectBoss = t
		savenaja()
    end
})

BossSection:AddToggle({
	Name = "Auto All Boss (Quest)",
	Flag = "Allboss_quest",
	Value = _G.AutoAllBoss,
	Callback = function(t, o)
		_G.AutoAllBoss = t
    	if not _G.AutoAllBoss then
        	pcall(function()
            	_G.tweennew:Cancel()
        	end)
   		end
		savenaja()
	end
})

BossSection:AddToggle({
	Name = "Auto All Boss (No Quest)",
	Flag = "Allboss",
	Value = _G.AutoAllBossnoQuest,
	Callback = function(t, o)
		_G.AutoAllBossnoQuest = t
    	if not _G.AutoAllBossnoQuest then
        	pcall(function()
            	_G.tweennew:Cancel()
        	end)
   		end
		savenaja()
	end
})

BossSection:AddToggle({
	Name = "Auto Select Boss",
	Flag = "Auto_Boss",
	Callback = function(t, o)
		FramBoss = t
    	if not FramBoss then
        	pcall(function()
            	_G.tweennew:Cancel()
        	end)
   		end
	end
})

function FarmbossAuto()
    CheckQuestBoss()
    if game.Workspace.Enemies:FindFirstChild(SelectBoss) then
        local mobs = game.Workspace.Enemies:GetChildren()
        for i = 1, #mobs do
            local v = mobs[i]
            if v.Name == SelectBoss and v:IsA("Model") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                return v
            end
        end
    elseif not game.Workspace.Enemies:FindFirstChild(SelectBoss) then
       -- tp(game.ReplicatedStorage:FindFirstChild(SelectBoss).HumanoidRootPart.CFrame * CFrame.new(0, 15, 0))
		local subname = string.gsub(SelectBoss, "%p", "")
		local realname = string.gsub(subname, "%s+Lv %d+.+", "")
		if game.ReplicatedStorage:FindFirstChild(SelectBoss) then
			standup.CFrame = game.ReplicatedStorage:FindFirstChild(SelectBoss).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
			tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(SelectBoss) then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[SelectBoss].CFrame * CFrame.new(0, Instantnum, 0)
			tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
			tp(standup.CFrame * CFrame.new(0, 4, 0))
		end
    end
end

function AutoFramBoss()
    CheckQuestBoss()
    pcall(function()
        local v = FarmbossAuto()
        EquipWeapon(_G.SelectWeapon)
        autobuso()
        pcall(function()
                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 15, 2)
                tp(standup.CFrame * CFrame.new(0, 4, 0))
            if not v.HumanoidRootPart:FindFirstChild("fly") then
                local bv = Instance.new("BodyVelocity")
                bv.Parent = v.HumanoidRootPart
                bv.Name = "fly"
                bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bv.Velocity = Vector3.new(0, 0, 0)
            end
            v.HumanoidRootPart.CanCollide = false
            if hit then
                v.HumanoidRootPart.Transparency = 1
            else
                v.HumanoidRootPart.Transparency = 0.75
            end
            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
        end)
    end)
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if FramBoss then 
            pcall(function()
                AutoFramBoss() 
            end)
        end
    end
end)


-- Script generated by SimpleSpy - credits to exx#9394



function Autoallbossnope()
    for i, v in pairs(game.ReplicatedStorage:GetChildren()) do
        if _G.AutoAllBossnoQuest and string.find(v.Name, "Boss") then
            if v.Name == "Cake Prince [Lv. 2300] [Raid Boss]" or v.Name == "Order [Lv. 1250] [Raid Boss]" or v.Name == "rip_indra True Form [Lv. 5000] [Raid Boss]" or v.Name ==  "rip_indra [Lv. 1500] [Boss]" or v.Name == "Ice Admiral [Lv. 700] [Boss]" or v.Name =="Don Swan [Lv. 1000] [Boss]" or v.Name =="Longma [Lv. 2000] [Boss]" or v.Name =="Soul Reaper [Lv. 2100] [Raid Boss]" then
            else
                SelectBoss = v.Name
               -- print(SelectBoss)
                if game:GetService("Workspace").Enemies:FindFirstChild(SelectBoss) or game:GetService("ReplicatedStorage"):FindFirstChild(SelectBoss) then
                    CheckQuestBoss()
                    tp(CFrameBoss)
                    _G.tweennew.Completed:Wait()
                    if _G.AutoAllBossnoQuest and v:IsA("Model") and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 and v.Name == MsBoss then
                        repeat
                            game:GetService("RunService").RenderStepped:Wait()
                            pcall(function()
                                EquipWeapon(_G.SelectWeapon)
                                autobuso()
                                if hit then
                                    v.HumanoidRootPart.Transparency = 1
                                else
                                    v.HumanoidRootPart.Transparency = 0.75
                                end
                                if not v.HumanoidRootPart:FindFirstChild("fly") then
                                    local bv = Instance.new("BodyVelocity")
                                    bv.Parent = v.HumanoidRootPart
                                    bv.Name = "fly"
                                    bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                                    bv.Velocity = Vector3.new(0, 0, 0)
                                end
                                v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                v.HumanoidRootPart.CanCollide = false
                                    standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                                    tp(standup.CFrame * CFrame.new(0, 4, 0))
                            end)
                        until not _G.AutoAllBossnoQuest or not v.Parent or v.Humanoid.Health <= 0
                    end
                end
            end
        end
    end
    if _G.ServerHop and
    not game.Workspace.Enemies:FindFirstChild("Diamond [Lv. 750] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Diamond [Lv. 750] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Jeremy [Lv. 850] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Jeremy [Lv. 850] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Darkbeard [Lv. 1000] [Raid Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Darkbeard [Lv. 1000] [Raid Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Fajita [Lv. 925] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Fajita [Lv. 925] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Smoke Admiral [Lv. 1150] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Smoke Admiral [Lv. 1150] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Cursed Captain [Lv. 1325] [Raid Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Cursed Captain [Lv. 1325] [Raid Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Awakened Ice Admiral [Lv. 1400] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Awakened Ice Admiral [Lv. 1400] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Tide Keeper [Lv. 1475] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Tide Keeper [Lv. 1475] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Saber Expert [Lv. 200] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Saber Expert [Lv. 200] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("The Gorilla King [Lv. 25] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("The Gorilla King [Lv. 25] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("The Saw [Lv. 100] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("The Saw [Lv. 100] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Bobby [Lv. 55] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Bobby [Lv. 55] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Yeti [Lv. 110] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Yeti [Lv. 110] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Mob Leader [Lv. 120] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Mob Leader [Lv. 120] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Vice Admiral [Lv. 130] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Vice Admiral [Lv. 130] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Warden [Lv. 175] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Warden [Lv. 175] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Swan [Lv. 225] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Swan [Lv. 225] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Chief Warden [Lv. 200] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Chief Warden [Lv. 200] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Flamingo [Lv. 225] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Flamingo [Lv. 225] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Magma Admiral [Lv. 350] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Magma Admiral [Lv. 350] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Fishman Lord [Lv. 425] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Fishman Lord [Lv. 425] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Wysper [Lv. 500] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Wysper [Lv. 500] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Thunder God [Lv. 575] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Thunder God [Lv. 575] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Stone [Lv. 1550] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Stone [Lv. 1550] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Kilo Admiral [Lv. 1750] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Kilo Admiral [Lv. 1750] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Beautiful Pirate [Lv. 1950] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Beautiful Pirate [Lv. 1950] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Captain Elephant [Lv. 1875] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Captain Elephant [Lv. 1875] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Island Empress [Lv. 1675] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Island Empress [Lv. 1675] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") then 
            Hopey() 
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoAllBossnoQuest then 
            pcall(function()
                Autoallbossnope() 
            end)
        end
    end
end)

function Autoallboss()
    for i, v in pairs(game.ReplicatedStorage:GetChildren()) do
        if string.find(v.Name, "Boss") then
            if v.Name == "Cake Prince [Lv. 2300] [Raid Boss]" or v.Name == "Order [Lv. 1250] [Raid Boss]" or v.Name ==  "rip_indra [Lv. 1500] [Boss]" or v.Name == "Soul Reaper [Lv. 2100] [Raid Boss]" or v.Name == "rip_indra True Form [Lv. 5000] [Raid Boss]" or v.Name == "Ice Admiral [Lv. 700] [Boss]" or v.Name == "Don Swan [Lv. 1000] [Boss]" or v.Name == "Longma [Lv. 2000] [Boss]" then
            else
                SelectBoss = v.Name
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                    if game:GetService("Workspace").Enemies:FindFirstChild(SelectBoss) or game:GetService("ReplicatedStorage"):FindFirstChild(SelectBoss) then
                        if game.Players.LocalPlayer.PlayerGui.Main.Quest.Visible == false then
                            CheckQuestBoss()
                            tp(CFrameQuestBoss) 
                            _G.tweennew.Completed:Wait()
                                wait(1.1)
                                CheckQuestBoss()
                                if  _G.AutoAllBoss and (CFrameQuestBoss.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 20  then
                                    pcall(function()
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", NaemQuestBoss,LevelQuestBoss)
                                    end)
                                end
                        end  
                        wait(1)
                        if game.Players.LocalPlayer.PlayerGui.Main.Quest.Visible == true then
                            CheckQuestBoss()
                            if v:IsA("Model") and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 and v.Name == MsBoss then
                                tp(CFrameBoss)
                               _G.tweennew.Completed:Wait()
                                repeat
                                    game:GetService("RunService").RenderStepped:Wait()
                                    pcall(function()
                                        EquipWeapon(_G.SelectWeapon)
                                        autobuso()
                                        if hit then
                                            v.HumanoidRootPart.Transparency = 1
                                        else
                                            v.HumanoidRootPart.Transparency = 0.75
                                        end
                                        if not v.HumanoidRootPart:FindFirstChild("fly") then
                                            local bv = Instance.new("BodyVelocity")
                                            bv.Parent = v.HumanoidRootPart
                                            bv.Name = "fly"
                                            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                                            bv.Velocity = Vector3.new(0, 0, 0)
                                        end
                                        v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                        v.HumanoidRootPart.CanCollide = false
                                            standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                                            tp(standup.CFrame * CFrame.new(0, 4, 0))
                                    end)
                                until not _G.AutoAllBoss or not v.Parent or v.Humanoid.Health <= 0 or game.Players.LocalPlayer.PlayerGui.Main.Quest.Visible == false
                            end
                        end
                    end
            end
        end
    end
    if _G.ServerHop and
    not game.Workspace.Enemies:FindFirstChild("Diamond [Lv. 750] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Diamond [Lv. 750] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Jeremy [Lv. 850] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Jeremy [Lv. 850] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Darkbeard [Lv. 1000] [Raid Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Darkbeard [Lv. 1000] [Raid Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Fajita [Lv. 925] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Fajita [Lv. 925] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Smoke Admiral [Lv. 1150] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Smoke Admiral [Lv. 1150] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Cursed Captain [Lv. 1325] [Raid Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Cursed Captain [Lv. 1325] [Raid Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Awakened Ice Admiral [Lv. 1400] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Awakened Ice Admiral [Lv. 1400] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Tide Keeper [Lv. 1475] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Tide Keeper [Lv. 1475] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Saber Expert [Lv. 200] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Saber Expert [Lv. 200] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("The Gorilla King [Lv. 25] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("The Gorilla King [Lv. 25] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("The Saw [Lv. 100] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("The Saw [Lv. 100] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Bobby [Lv. 55] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Bobby [Lv. 55] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Yeti [Lv. 110] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Yeti [Lv. 110] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Mob Leader [Lv. 120] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Mob Leader [Lv. 120] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Vice Admiral [Lv. 130] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Vice Admiral [Lv. 130] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Warden [Lv. 175] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Warden [Lv. 175] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Swan [Lv. 225] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Swan [Lv. 225] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Chief Warden [Lv. 200] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Chief Warden [Lv. 200] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Flamingo [Lv. 225] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Flamingo [Lv. 225] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Magma Admiral [Lv. 350] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Magma Admiral [Lv. 350] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Fishman Lord [Lv. 425] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Fishman Lord [Lv. 425] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Wysper [Lv. 500] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Wysper [Lv. 500] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Thunder God [Lv. 575] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Thunder God [Lv. 575] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Stone [Lv. 1550] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Stone [Lv. 1550] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Kilo Admiral [Lv. 1750] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Kilo Admiral [Lv. 1750] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Beautiful Pirate [Lv. 1950] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Beautiful Pirate [Lv. 1950] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Captain Elephant [Lv. 1875] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Captain Elephant [Lv. 1875] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Island Empress [Lv. 1675] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Island Empress [Lv. 1675] [Boss]") and
    not game.Workspace.Enemies:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") and
    not game.ReplicatedStorage:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") then 
            Hopey() 
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoAllBoss then
            pcall(function ()
                Autoallboss() 
            end) 
        end
    end
end)

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoRengoku then
            if game.Players.LocalPlayer.Backpack:FindFirstChild("Hidden Key") or game.Players.LocalPlayer.Character:FindFirstChild("Hidden Key") then
                EquipWeapon("Hidden Key")
                tp(CFrame.new(6572.96045, 296.654755, -6965.03564, 0.95960629, 3.72261333e-08, 0.281346381, -6.30819414e-08, 1, 8.28433997e-08, -0.281346381, -9.72449214e-08, 0.95960629))
            elseif game.Workspace.Enemies:FindFirstChild("Snow Lurker [Lv. 1375]") then
                for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
                    if v.Name == "Snow Lurker [Lv. 1375]" and v:FindFirstChild("HumanoidRootPart") and
                        v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                        repeat
                            game:GetService("RunService").RenderStepped:Wait()
                            pcall(function()
                            EquipWeapon(_G.SelectWeapon)
                            autobuso()
                            standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                            tp(standup.CFrame * CFrame.new(0, 4, 0))
                            _G.PosMon = v.HumanoidRootPart.CFrame
                            _G.bringmob = true
                            end)
                        until v.Humanoid.Health <= 0 or game.Players.LocalPlayer.Backpack:FindFirstChild("Hidden Key") or _G.AutoRengoku == false or not v.Parent
                        _G.bringmob = false
                    end
                end
            else
                pcall(function()
					local subname = string.gsub("Snow Lurker [Lv. 1375]", "%p", "")
					local realname = string.gsub(subname, "%s+Lv %d+.+", "")
					if game.ReplicatedStorage:FindFirstChild("Snow Lurker [Lv. 1375]") then
						standup.CFrame = game.ReplicatedStorage:FindFirstChild("Snow Lurker [Lv. 1375]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
						tp(standup.CFrame * CFrame.new(0, 4, 0))
					elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Snow Lurker [Lv. 1375]") then
						standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Snow Lurker [Lv. 1375]"].CFrame * CFrame.new(0, Instantnum, 0)
						tp(standup.CFrame * CFrame.new(0, 4, 0))
					elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
						standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
						tp(standup.CFrame * CFrame.new(0, 4, 0))
					end
                    --standup.CFrame =  game.ReplicatedStorage:FindFirstChild("Snow Lurker [Lv. 1375]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                    --tp(standup.CFrame * CFrame.new(0, 4, 0))
                end)
            end
        end
    end
end)


function lockmon(name)
    if game.Workspace.Enemies:FindFirstChild(name) then
        local mobs = game.Workspace.Enemies:GetChildren()
        for i = 1, #mobs do
            local v = mobs[i]
            if v.Name == name and v:IsA("Model") and
                v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                return v
            end
        end
    elseif not game:GetService("Workspace").Enemies:FindFirstChild(name) then
		local subname = string.gsub(name, "%p", "")
		local realname = string.gsub(subname, "%s+Lv %d+.+", "")
		if game.ReplicatedStorage:FindFirstChild(name) then
			standup.CFrame = game.ReplicatedStorage:FindFirstChild(name).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
			tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(name) then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[name].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		end
    end
end


function allcake()
    if game:GetService("Workspace").Enemies:FindFirstChild("Cookie Crafter [Lv. 2200]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Cake Guard [Lv. 2225]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Baking Staff [Lv. 2250]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Head Baker [Lv. 2275]") then
        local mobs = game.Workspace.Enemies:GetChildren()
        for i = 1, #mobs do
            local v = mobs[i]
            if (v.Name == "Cookie Crafter [Lv. 2200]" or v.Name == "Cake Guard [Lv. 2225]" or 
            v.Name == "Baking Staff [Lv. 2250]" or v.Name == "Head Baker [Lv. 2275]" and v:IsA("Model")) and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health >  0 then 
                    return v 
                end
        end
    elseif not game:GetService("Workspace").Enemies:FindFirstChild("Cookie Crafter [Lv. 2200]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Cake Guard [Lv. 2225]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Baking Staff [Lv. 2250]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Head Baker [Lv. 2275]") then

        if game.ReplicatedStorage:FindFirstChild("Cookie Crafter [Lv. 2200]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Cookie Crafter [Lv. 2200]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        elseif game.ReplicatedStorage:FindFirstChild("Cake Guard [Lv. 2225]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Cake Guard [Lv. 2225]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        elseif game.ReplicatedStorage:FindFirstChild("Baking Staff [Lv. 2250]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Baking Staff [Lv. 2250]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        elseif game.ReplicatedStorage:FindFirstChild("Head Baker [Lv. 2275]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Head Baker [Lv. 2275]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Cookie Crafter [Lv. 2200]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Cookie Crafter [Lv. 2200]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Cake Guard [Lv. 2225]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Cake Guard [Lv. 2225]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Baking Staff [Lv. 2250]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Baking Staff [Lv. 2250]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Head Baker [Lv. 2275]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Head Baker [Lv. 2275]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))

		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Cookie Crafter") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Cookie Crafter"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Cake Guard") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Cake Guard"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Baking Staff") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Baking Staff"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Head Baker") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Head Baker"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        end
    end
end



function CakePrince()
    pcall(function()
        if tonumber(string.match(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner",true),"%d+")) ~= nil then 
            pcall(function()
                autobuso()
                EquipWeapon(_G.SelectWeapon)
                local v = allcake()
                v.Humanoid.JumpPower = 0
                v.Humanoid.WalkSpeed = 0
                v.HumanoidRootPart.CanCollide = false
                Fnamecan = v.Name
                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                tp(standup.CFrame * CFrame.new(0, 4, 0))
                _G.PosMon = v.HumanoidRootPart.CFrame
                _G.bringmob = true
                cfrim = true
                enemie:Set("Enemies Kill : " ..tonumber(string.match(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner",true),"%d+")))
            end)
        else
            if cfrim then
            tpwait(-2137.9353, 70.0088654, -12320.2373, -0.00813538395, -2.21940422e-08, 0.999966919, -7.50123164e-08, 1, 2.15845013e-08, -0.999966919, -7.4834233e-08, -0.00813538395)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner")
            cfrim = false
            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,game:GetService("Workspace").Map.CakeLoaf.BigMirror.Main,0)
            wait(2)
            end
           -- tp(game:GetService("Workspace").Map.CakeLoaf.BigMirror.Main.CFrame)
            pcall(function()
                autobuso()
                EquipWeapon(_G.SelectWeapon)
                local v = lockmon("Cake Prince [Lv. 2300] [Raid Boss]")
                if not v.HumanoidRootPart:FindFirstChild("fly") then
                    local bv = Instance.new("BodyVelocity")
                    bv.Parent = v.HumanoidRootPart
                    bv.Name = "fly"
                    bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                    bv.Velocity = Vector3.new(0, 0, 0)
                end
                v.Humanoid.JumpPower = 0
                v.Humanoid.WalkSpeed = 0
                v.HumanoidRootPart.CanCollide = false
                v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                Fnamecan = v.Name
                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                tp(standup.CFrame * CFrame.new(0, 4, 0))
            end)
        end 
    end)
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoPrince then 
            CakePrince() 
        end
    end
end)

function allcocoa()
    if game:GetService("Workspace").Enemies:FindFirstChild("Cocoa Warrior [Lv. 2300]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Chocolate Bar Battler [Lv. 2325]")  then
        local mobs = game.Workspace.Enemies:GetChildren()
        for i = 1, #mobs do
            local v = mobs[i]
            if (v.Name == "Cocoa Warrior [Lv. 2300]" or v.Name == "Chocolate Bar Battler [Lv. 2325]"  and v:IsA("Model")) and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health >  0 then 
                    return v 
                end
        end
    elseif not game:GetService("Workspace").Enemies:FindFirstChild("Cocoa Warrior [Lv. 2300]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Chocolate Bar Battler [Lv. 2325]")  then
	
        if game.ReplicatedStorage:FindFirstChild("Cocoa Warrior [Lv. 2300]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Cocoa Warrior [Lv. 2300]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        elseif game.ReplicatedStorage:FindFirstChild("Chocolate Bar Battler [Lv. 2325]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Chocolate Bar Battler [Lv. 2325]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Cocoa Warrior [Lv. 2300]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Cocoa Warrior [Lv. 2300]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Chocolate Bar Battler [Lv. 2325]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Chocolate Bar Battler [Lv. 2325]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))

		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Cocoa Warrior") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Cocoa Warrior"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Chocolate Bar Battler") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Chocolate Bar Battler"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        end
    end
end

function AutoCocoa()
    pcall(function()
        autobuso()
        EquipWeapon(_G.SelectWeapon)
        local v = allcocoa()
        v.Humanoid.JumpPower = 0
        v.Humanoid.WalkSpeed = 0
        v.HumanoidRootPart.CanCollide = false
        v.Humanoid:ChangeState(14)
        Fnamecan = v.Name
        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
        tp(standup.CFrame * CFrame.new(0, 4, 0))

        _G.PosMon = v.HumanoidRootPart.CFrame
        _G.bringmob = true
    end)
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoCocoa then 
            AutoCocoa() 
        end
    end
end)

function Checkmeta(name)
    game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition = Vector2.new(0, 1000000)
    local sixx = game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition.Y
	game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition = Vector2.new(0, 0)
	local scoll = 1
	
	repeat wait()
		for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do
			game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition= Vector2.new(0, scoll)
			if v:FindFirstChild("ItemName") then
				if  v:FindFirstChild("ItemName") and v.ItemName.Text == name then
					return tonumber(string.match(v.ItemLine1.Text,"%d+"))
				end
			end
		end
	--[[
	for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do
	   if v:FindFirstChild("ItemName") then
		   if v.ItemName.Text == name then
				return tonumber(string.match(v2.ItemLine1.Text,"%d+"))
		   elseif tonumber(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition.Y) < tonumber(sixx) then
			   game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition= Vector2.new(0, scoll)
                for i2, v2 in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do
                	if v2:FindFirstChild("ItemName") then
                		   if v2.ItemName.Text == name then
                			   return tonumber(string.match(v2.ItemLine1.Text,"%d+"))

                		   end
                	end
                end
		   end
	   end
	end
	]]
	scoll = scoll + 532
    until tonumber(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition.Y) == sixx
end
--[[
function Checkmeta(name)
	if  game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer:FindFirstChild("UIAspectRatioConstraint") then
		game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer:FindFirstChild("UIAspectRatioConstraint"):Destroy()
    end
	local scoll = 540
	for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.Frame:GetChildren()) do
		wait()
	   if v:FindFirstChild("ItemName") then
		   if v.ItemName.Text == name then
			  -- print(v,v.ItemName.Text, tonumber(string.match(v.ItemLine1.Text,"%d+")))
			   return tonumber(string.match(v.ItemLine1.Text,"%d+"))
			  
		   else
			   game:GetService("Players").LocalPlayer.PlayerGui.Main.InventoryContainer.Right.Content.ScrollingFrame.CanvasPosition= Vector2.new(0, scoll)
			   scoll = scoll * 2
		   end
	   end
   end
end
]]
Checkmeta("Conjured Cocoa")
Checkmeta("Dragon Scale")
Checkmeta("Fish Tail")
Checkmeta("Mystic Droplet")
Checkmeta("Magma Ore")
function autometa()
	if GetMaterial("Dragon Scale") == 0 or GetMaterial("Dragon Scale") < 10 then
		if not sea3world then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
		end
		pcall(function()
			EquipWeapon(_G.SelectWeapon)
			autobuso()
				local v = lockmon("Dragon Crew Archer [Lv. 1600]")
				v.Humanoid.JumpPower = 0
				v.Humanoid.WalkSpeed = 0
				v.HumanoidRootPart.CanCollide = false
				v.Humanoid:ChangeState(14)
				standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
				_G.PosMon = v.HumanoidRootPart.CFrame
				_G.bringmob = true
		end)
	elseif GetMaterial("Fish Tail") == 0 or GetMaterial("Fish Tail") < 20 then
		if not sea3world then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
		end
		pcall(function()
			EquipWeapon(_G.SelectWeapon)
			autobuso()
				local v = lockmon("Fishman Captain [Lv. 1800]")
				v.Humanoid.JumpPower = 0
				v.Humanoid.WalkSpeed = 0
				v.HumanoidRootPart.CanCollide = false
				v.Humanoid:ChangeState(14)
				standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
				_G.PosMon = v.HumanoidRootPart.CFrame
				_G.bringmob = true
		end)
	elseif GetMaterial("Mystic Droplet") == 0 or GetMaterial("Mystic Droplet") < 10 then
		if not newworld then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
		end
		pcall(function()
			EquipWeapon(_G.SelectWeapon)
			autobuso()
				local v = lockmon("Water Fighter [Lv. 1450]")
				v.Humanoid.JumpPower = 0
				v.Humanoid.WalkSpeed = 0
				v.HumanoidRootPart.CanCollide = false
				v.Humanoid:ChangeState(14)
				standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
				_G.PosMon = v.HumanoidRootPart.CFrame
				_G.bringmob = true
		end)
	elseif GetMaterial("Magma Ore") == 0 or GetMaterial("Magma Ore") < 20 then
		if not newworld then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
		end
		pcall(function()
			EquipWeapon(_G.SelectWeapon)
			autobuso()
				local v = lockmon("Lava Pirate [Lv. 1200]")
				v.Humanoid.JumpPower = 0
				v.Humanoid.WalkSpeed = 0
				v.HumanoidRootPart.CanCollide = false
				v.Humanoid:ChangeState(14)
				standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
				_G.PosMon = v.HumanoidRootPart.CFrame
				_G.bringmob = true
		end)
	else
		_G.autoMaterial = false
		if not sea3world then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
		end
	end

end


spawn(function()
	while game:GetService("RunService").RenderStepped:Wait() do
		if _G.autoMaterial then autometa() end
	end
end)

function allcandies()
    if game:GetService("Workspace").Enemies:FindFirstChild("Peanut Scout [Lv. 2075]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Peanut President [Lv. 2100]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Ice Cream Chef [Lv. 2125]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Ice Cream Commander [Lv. 2150]") then
        local mobs = game.Workspace.Enemies:GetChildren()
        for i = 1, #mobs do
            local v = mobs[i]
            if (v.Name == "Peanut Scout [Lv. 2075]" or v.Name == "Peanut President [Lv. 2100]" or 
            v.Name == "Ice Cream Chef [Lv. 2125]" or v.Name == "Ice Cream Commander [Lv. 2150]") and v:IsA("Model") and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health >  0 then 
                    return v 
            end
        end
    elseif not game:GetService("Workspace").Enemies:FindFirstChild("Peanut Scout [Lv. 2075]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Peanut President [Lv. 2100]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Ice Cream Chef [Lv. 2125]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Ice Cream Commander [Lv. 2150]") then

        if game.ReplicatedStorage:FindFirstChild("Peanut Scout [Lv. 2075]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Peanut Scout [Lv. 2075]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        elseif game.ReplicatedStorage:FindFirstChild("Peanut President [Lv. 2100]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Peanut President [Lv. 2100]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        elseif game.ReplicatedStorage:FindFirstChild("Ice Cream Chef [Lv. 2125]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Ice Cream Chef [Lv. 2125]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        elseif game.ReplicatedStorage:FindFirstChild("Ice Cream Commander [Lv. 2150]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Ice Cream Commander [Lv. 2150]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Peanut Scout [Lv. 2075]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Peanut Scout [Lv. 2075]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Peanut President [Lv. 2100]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Peanut President [Lv. 2100]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ice Cream Chef [Lv. 2125]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ice Cream Chef [Lv. 2125]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ice Cream Commander [Lv. 2150]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ice Cream Commander [Lv. 2150]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))

		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Peanut Scout") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Peanut Scout"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Peanut President") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Peanut President"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ice Cream Chef") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ice Cream Chef"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ice Cream Commander") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ice Cream Commander"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        end
    end
end

function AutoCandies()
    pcall(function()
        autobuso()
        EquipWeapon(_G.SelectWeapon)
        local v = allcandies()
        v.Humanoid.JumpPower = 0
        v.Humanoid.WalkSpeed = 0
        v.HumanoidRootPart.CanCollide = false
        v.Humanoid:ChangeState(14)
        Fnamecan = v.Name
        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
        tp(standup.CFrame * CFrame.new(0, 4, 0))
        _G.PosMon = v.HumanoidRootPart.CFrame
        _G.bringmob = true
    end)
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoCandies then 
            AutoCandies() 
        end
    end
end)


function allbones()
    CheckQuest()
    if game:GetService("Workspace").Enemies:FindFirstChild("Reborn Skeleton [Lv. 1975]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Living Zombie [Lv. 2000]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Demonic Soul [Lv. 2025]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Posessed Mummy [Lv. 2050]") then
        local mobs = game.Workspace.Enemies:GetChildren()
        for i = 1, #mobs do
            local v = mobs[i]
            if (v.Name == "Reborn Skeleton [Lv. 1975]" or v.Name == "Living Zombie [Lv. 2000]" or v.Name == "Demonic Soul [Lv. 2025]" or v.Name == "Posessed Mummy [Lv. 2050]" and v:IsA("Model") and
                v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart")) and v.Humanoid.Health > 0 then 
                    return v 
                end
        end
    elseif not game:GetService("Workspace").Enemies:FindFirstChild("Reborn Skeleton [Lv. 1975]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Living Zombie [Lv. 2000]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Demonic Soul [Lv. 2025]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Posessed Mummy [Lv. 2050]") then
        
        if game.ReplicatedStorage:FindFirstChild("Reborn Skeleton [Lv. 1975]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild( "Reborn Skeleton [Lv. 1975]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        elseif game.ReplicatedStorage:FindFirstChild("Living Zombie [Lv. 2000]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Living Zombie [Lv. 2000]").HumanoidRootPart.CFrame *  CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        elseif game.ReplicatedStorage:FindFirstChild("Demonic Soul [Lv. 2025]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Demonic Soul [Lv. 2025]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        elseif game.ReplicatedStorage:FindFirstChild("Posessed Mummy [Lv. 2050]") then
            standup.CFrame = game.ReplicatedStorage:FindFirstChild("Posessed Mummy [Lv. 2050]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Reborn Skeleton [Lv. 1975]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Reborn Skeleton [Lv. 1975]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Living Zombie [Lv. 2000]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Living Zombie [Lv. 2000]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Demonic Soul [Lv. 2025]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Demonic Soul [Lv. 2025]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Posessed Mummy [Lv. 2050]") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Posessed Mummy [Lv. 2050]"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))

		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Reborn Skeleton") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Reborn Skeleton"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Living Zombie") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Living Zombie"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Demonic Soul") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Demonic Soul"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Posessed Mummy") then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Posessed Mummy"].CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        end
    end
end

function AutoBones()
    pcall(function()
        autobuso()
        EquipWeapon(_G.SelectWeapon)
        local v = allbones()
        v.Humanoid.JumpPower = 0
        v.Humanoid.WalkSpeed = 0
        v.HumanoidRootPart.CanCollide = false
        v.Humanoid:ChangeState(14)
        Fname = v.Name
        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
        tp(standup.CFrame * CFrame.new(0, 4, 0))
        _G.PosMon = v.HumanoidRootPart.CFrame
        _G.bringmob = true
    end)
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoBones then AutoBones() end
    end
end)



function autoReper()
    
    if game.Workspace.Enemies:FindFirstChild("Soul Reaper [Lv. 2100] [Raid Boss]") or game.ReplicatedStorage:FindFirstChild("Soul Reaper [Lv. 2100] [Raid Boss]") then
        pcall(function()
            _G.bringmob = false
            EquipWeapon(_G.SelectWeapon)
            autobuso()
            pcall(function()
                local v = lockmon("Soul Reaper [Lv. 2100] [Raid Boss]")
                v.HumanoidRootPart.CanCollide = false
                v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                tp(standup.CFrame * CFrame.new(0, 4, 0))
            end)
        end)
    elseif game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence") or game.Players.LocalPlayer.Character:FindFirstChild("Hallow Essence") then
        --_G.bringmob = false
		EquipWeapon("Hallow Essence")
		wait(1)
		tpwait(CFrame.new(-8931.70703, 143.745667, 6060.06299, -0.972440302, -2.71509535e-08, 0.233152017, -2.79203309e-08, 1,  4.22463524e-13, -0.233152017, -6.50927046e-09,-0.972440302))
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-8931.70703, 143.745667, 6060.06299, -0.972440302, -2.71509535e-08, 0.233152017, -2.79203309e-08, 1,  4.22463524e-13, -0.233152017, -6.50927046e-09,-0.972440302)
    elseif not game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence") and not game.Players.LocalPlayer.Character:FindFirstChild("Hallow Essence") then
        pcall(function()
            autobuso()
            EquipWeapon(_G.SelectWeapon)
            local v = allbones()
            v.Humanoid.JumpPower = 0
            v.Humanoid.WalkSpeed = 0
            v.HumanoidRootPart.CanCollide = false
            v.Humanoid:ChangeState(14)
            Fname = v.Name
            standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
            _G.PosMon = v.HumanoidRootPart.CFrame
            _G.bringmob = true
        end)
    end
	if game:GetService("Players").LocalPlayer.Character.Humanoid.Health > 0 and game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones", "Check") >= 50 then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones", "Buy", 1, 1)
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoReper then autoReper() end
    end
end)


function allEcto()
    if game:GetService("Workspace").Enemies:FindFirstChild("Ship Officer [Lv. 1325]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Ship Engineer [Lv. 1275]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Ship Deckhand [Lv. 1250]") or
        game:GetService("Workspace").Enemies:FindFirstChild("Ship Steward [Lv. 1300]") then
        local mobs = game.Workspace.Enemies:GetChildren()
        for i = 1, #mobs do
            local v = mobs[i]
            if (v.Name == "Ship Officer [Lv. 1325]" or v.Name == "Ship Engineer [Lv. 1275]" or v.Name == "Ship Deckhand [Lv. 1250]" or v.Name == "Ship Steward [Lv. 1300]") and v:IsA("Model") and
                v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then 
                    return v 
                end
        end
    elseif not game:GetService("Workspace").Enemies:FindFirstChild("Ship Officer [Lv. 1325]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Ship Engineer [Lv. 1275]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Ship Deckhand [Lv. 1250]") or
        not game:GetService("Workspace").Enemies:FindFirstChild("Ship Steward [Lv. 1300]") then
            if (game:GetService("Workspace").Map.GhostShipInterior.Teleport.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 20000 then
                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.GhostShip.Teleport.CFrame
                wait(2)
                if game.ReplicatedStorage:FindFirstChild("Ship Officer [Lv. 1325]") then
                    standup.CFrame = game.ReplicatedStorage:FindFirstChild( "Ship Officer [Lv. 1325]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                    tp(standup.CFrame * CFrame.new(0, 4, 0))
                elseif game.ReplicatedStorage:FindFirstChild("Ship Engineer [Lv. 1275]") then
                    standup.CFrame = game.ReplicatedStorage:FindFirstChild("Ship Engineer [Lv. 1275]").HumanoidRootPart.CFrame *  CFrame.new(0, Instantnum, 0)
                    tp(standup.CFrame * CFrame.new(0, 4, 0))
                elseif game.ReplicatedStorage:FindFirstChild("Ship Deckhand [Lv. 1250]") then
                    standup.CFrame = game.ReplicatedStorage:FindFirstChild("Ship Deckhand [Lv. 1250]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                    tp(standup.CFrame * CFrame.new(0, 4, 0))
                elseif game.ReplicatedStorage:FindFirstChild("Ship Steward [Lv. 1300]") then
                    standup.CFrame = game.ReplicatedStorage:FindFirstChild("Ship Steward [Lv. 1300]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                    tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Officer [Lv. 1325]") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Officer [Lv. 1325]"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Engineer [Lv. 1275]") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Engineer [Lv. 1275]"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Deckhand [Lv. 1250]") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Deckhand [Lv. 1250]"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Steward [Lv. 1300]") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Steward [Lv. 1300]"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))

				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Officer") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Officer"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Engineer") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Engineer"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Deckhand") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Deckhand"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Steward") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Steward"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
                end
            else
                if game.ReplicatedStorage:FindFirstChild("Ship Officer [Lv. 1325]") then
                    standup.CFrame = game.ReplicatedStorage:FindFirstChild( "Ship Officer [Lv. 1325]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                    tp(standup.CFrame * CFrame.new(0, 4, 0))
                elseif game.ReplicatedStorage:FindFirstChild("Ship Engineer [Lv. 1275]") then
                    standup.CFrame = game.ReplicatedStorage:FindFirstChild("Ship Engineer [Lv. 1275]").HumanoidRootPart.CFrame *  CFrame.new(0, Instantnum, 0)
                    tp(standup.CFrame * CFrame.new(0, 4, 0))
                elseif game.ReplicatedStorage:FindFirstChild("Ship Deckhand [Lv. 1250]") then
                    standup.CFrame = game.ReplicatedStorage:FindFirstChild("Ship Deckhand [Lv. 1250]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                    tp(standup.CFrame * CFrame.new(0, 4, 0))
                elseif game.ReplicatedStorage:FindFirstChild("Ship Steward [Lv. 1300]") then
                    standup.CFrame = game.ReplicatedStorage:FindFirstChild("Ship Steward [Lv. 1300]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                    tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Officer [Lv. 1325]") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Officer [Lv. 1325]"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Engineer [Lv. 1275]") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Engineer [Lv. 1275]"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Deckhand [Lv. 1250]") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Deckhand [Lv. 1250]"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Steward [Lv. 1300]") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Steward [Lv. 1300]"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))

				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Officer") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Officer"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Engineer") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Engineer"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Deckhand") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Deckhand"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Ship Steward") then
					standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Ship Steward"].CFrame * CFrame.new(0, Instantnum, 0)
					tp(standup.CFrame * CFrame.new(0, 4, 0))
                end
            end
    end
end

function AutoEcto()
    pcall(function()
        EquipWeapon(_G.SelectWeapon)
        autobuso()
        local v = allEcto()
        v.Humanoid.JumpPower = 0
        v.Humanoid.WalkSpeed = 0
        v.HumanoidRootPart.CanCollide = false
        v.Humanoid:ChangeState(14)
        Fname = v.Name
        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
        tp(standup.CFrame * CFrame.new(0, 4, 0))
        _G.PosMon = v.HumanoidRootPart.CFrame
        _G.bringmob = true
    end)
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoEs then AutoEcto() end
        -- Magnet = false
    end
end)






function polev1farm()
    if not GetWeaponInventory("Pole (1st Form)") then
        pcall(function()
            EquipWeapon(_G.SelectWeapon)
            autobuso()
            local v = lockmon("Thunder God [Lv. 575] [Boss]")
            if hit then
                v.HumanoidRootPart.Transparency = 1
            else
                v.HumanoidRootPart.Transparency = 0.75
            end
            v.Humanoid.JumpPower = 0
            v.Humanoid.WalkSpeed = 0
            v.HumanoidRootPart.CanCollide = false
            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
            standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            tp(standup.CFrame * CFrame.new(0, 4, 0))
        end)
        if _G.ServerHop == true and
            not game.Workspace.Enemies:FindFirstChild("Thunder God [Lv. 575] [Boss]") and
            not game.ReplicatedStorage:FindFirstChild("Thunder God [Lv. 575] [Boss]") then
            Hopey()
        end  
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoPole then polev1farm() end
    end
end)


function CanvanderSword()
    if not GetWeaponInventory("Canvender") then
        pcall(function()
            local v = lockmon("Beautiful Pirate [Lv. 1950] [Boss]")
            EquipWeapon(_G.SelectWeapon)
            autobuso()
            if hit then
                v.HumanoidRootPart.Transparency = 1
            else
                v.HumanoidRootPart.Transparency = 0.75
            end
            v.Humanoid.JumpPower = 0
            v.Humanoid.WalkSpeed = 0
            v.HumanoidRootPart.CanCollide = false
            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
            pcall(function()
                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                tp(standup.CFrame * CFrame.new(0, 4, 0))
            end)
        end)
        if _G.ServerHop == true and
            not game.Workspace.Enemies:FindFirstChild("Beautiful Pirate [Lv. 1950] [Boss]") and
            not game.ReplicatedStorage:FindFirstChild("Beautiful Pirate [Lv. 1950] [Boss]") then
            Hopey()

        end
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.CanvanderSword then CanvanderSword() end
    end
end)



function BuddySword()
    if not GetWeaponInventory("Buddy Sword") then
        pcall(function()
            local v = lockmon("Cake Queen [Lv. 2175] [Boss]")
            EquipWeapon(_G.SelectWeapon)
            autobuso()
            if hit then
                v.HumanoidRootPart.Transparency = 1
            else
                v.HumanoidRootPart.Transparency = 0.75
            end
            v.Humanoid.JumpPower = 0
            v.Humanoid.WalkSpeed = 0
            v.HumanoidRootPart.CanCollide = false
            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
            pcall(function()
                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                tp(standup.CFrame * CFrame.new(0, 4, 0))
            end)
        end)
        if _G.ServerHop and
            not game.Workspace.Enemies:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") and
            not game.ReplicatedStorage:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") then
            Hopey()
        end
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.BuddySword then BuddySword() end
    end
end)

function autosaber()
    chekvel = game:GetService("Players").LocalPlayer.Data.Level.Value
    if tonumber(game:GetService("Workspace").Map.Jungle.Final.Part.Transparency) == 0 and chekvel >= 625 then 
        _G.AutoFarm = false
        wait(2)
        tpwait(-1180.89563, 21.0007095, 187.861374)
        wait()
        tpwait(-1180.89563, 21.0007095, 187.861374)
        wait(1)
        tpwait(-1421.19995, 44.5000229, 21.6000061)
        wait(1)
        tpwait(-1648.49451, 19.5000286, 437.794678)
        wait(1)
        tpwait(-1324.10144, 31.4560413, -461.404114)
        wait(1)
        tpwait(-1152.16479, -1.20998275, -700.431641)
        wait(1)
        tpwait(-1610.00757, 11.5049858, 164.001587)
        tpwait(-1610.00757, 11.5049858, 164.001587)
        local args = {[1] = "ProQuestProgress", [2] = "GetTorch"}
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))

        EquipWeapon("Torch")
        tpwait(1111.37097, 4.9214654, 4352.79688, 0.653583765, 1.48724888e-09, -0.756854177, -1.05342446e-09, 1, 1.05535225e-09, 0.756854177, 1.07527612e-10, 0.653583765)
        tpwait(1111.37097, 4.9214654, 4352.79688, 0.653583765, 1.48724888e-09, -0.756854177, -1.05342446e-09, 1, 1.05535225e-09, 0.756854177, 1.07527612e-10, 0.653583765)
        wait(5)
        local args11 = {[1] = "ProQuestProgress", [2] = "DestroyTorch"}
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args11))

        local args1 = {[1] = "ProQuestProgress", [2] = "GetCup"}
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args1))

        wait(2)
        EquipWeapon("Cup")
        tpwait(1395.33557, 37.3479958, -1325.59961, -0.97009939, -5.36000222e-08, -0.242707908, -3.2924369e-08, 1, -8.92435352e-08, 0.242707908, -7.85840939e-08, -0.97009939)
		tpwait(1395.33557, 37.3479958, -1325.59961, -0.97009939, -5.36000222e-08, -0.242707908, -3.2924369e-08, 1, -8.92435352e-08, 0.242707908, -7.85840939e-08, -0.97009939)
        wait(2)
        local args = {
            [1] = "ProQuestProgress",
            [2] = "FillCup",
            [3] = game:GetService("Players").LocalPlayer.Character.Cup
        }
        wait(2)
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        tpwait(CFrame.new(1458.87427, 88.2521744, -1392.16553, 0.535236001, 5.6002964e-08, -0.844702542, -1.9388553e-08, 1, 5.40137002e-08, 0.844702542, -1.25325172e-08, 0.535236001))
        tpwait(1458.87427, 88.2521744, -1392.16553, 0.535236001, 5.6002964e-08, -0.844702542, -1.9388553e-08, 1, 5.40137002e-08, 0.844702542, -1.25325172e-08, 0.535236001)
        wait(2)
        local args = {[1] = "ProQuestProgress", [2] = "SickMan"}

        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait(2)
        if tonumber(game:GetService("Workspace").Map.Jungle.Final.Part.Transparency) == 0 then
            tpwait(-908.447021, 13.7520342, 4076.77246, -0.57430017, 0, -0.818644822, 0, 1, 0, 0.818644822, 0, -0.57430017)
            tpwait(-908.447021, 13.7520342, 4076.77246, -0.57430017, 0, -0.818644822, 0, 1, 0, 0.818644822, 0, -0.57430017)
            local args = {[1] = "ProQuestProgress", [2] = "RichSon"}
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            wait(2)
            pcall(function()
                tpwait(-2848.59399, 7.4272871, 5342.44043)
                for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
                    if v.Name == "Mob Leader [Lv. 120] [Boss]" and v:FindFirstChild("Humanoid") then
                        repeat
                            game:GetService("RunService").RenderStepped:Wait()
                            EquipWeapon(_G.SelectWeapon)
                            autobuso()
                            v.Humanoid.JumpPower = 0
                            v.Humanoid.WalkSpeed = 0
                            v.HumanoidRootPart.CanCollide = false
                            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                            standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                            tp(standup.CFrame * CFrame.new(0, 4, 0))
                        until v.Humanoid.Health <= 0
                    end
                end
            end)
            -- game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame= CFrame.new(-908.447021, 13.7520342, 4076.77246, -0.57430017, 0, -0.818644822, 0, 1, 0, 0.818644822, 0, -0.57430017)
            tpwait(-908.447021, 13.7520342, 4076.77246, -0.57430017, 0, -0.818644822, 0, 1, 0, 0.818644822, 0, -0.57430017)
            local args = {[1] = "ProQuestProgress", [2] = "RichSon"}
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            EquipWeapon("Relic")
            tpwait(-1407.28162, 29.8520126, 5.30883169, 0.865222156, 1.87730347e-08, 0.501388729, 3.31891459e-10, 1, -3.80148037e-08, -0.501388729, 3.30576562e-08, 0.865222156)
			wait(1)
            tpwait(-1398.91028, 29.8520126, 21.1566429, -0.472184449, 8.06497482e-08, -0.881499767, -2.25409593e-08, 1, 1.03565817e-07, 0.881499767, 6.87720174e-08, -0.472184449)
            wait(1)
			tpwait(-1408.06909, 29.8520126, 5.73608446, 0.866082728, -1.13346263e-10, 0.499900728, 9.02340247e-09, 1, -1.54063926e-08, -0.499900728, 1.78540152e-08, 0.866082728)
			wait(1)
            tpwait(-1398.91028, 29.8520126, 21.1566429, -0.472184449, 8.06497482e-08, -0.881499767, -2.25409593e-08, 1, 1.03565817e-07, 0.881499767, 6.87720174e-08, -0.472184449)
            wait(1)
			tpwait(-1407.3894, 29.8520126, 5.50061083, 0.864743471, 1.26887098e-10, 0.502213776, -1.96258809e-09, 1, 3.12665294e-09, -0.502213776, -3.68939168e-09, 0.864743471)

        end
        wait(2)
     
    elseif tonumber(game:GetService("Workspace").Map.Jungle.Final.Part.Transparency) == 1 and game:GetService("Players").LocalPlayer.Data.Level.Value >= 625 then
        if not game.Players.LocalPlayer.Backpack:FindFirstChild("Saber") and  not game.Players.LocalPlayer.Character:FindFirstChild("Saber") then
            if game.Workspace.Enemies:FindFirstChild("Saber Expert [Lv. 200] [Boss]") or game.ReplicatedStorage:FindFirstChild("Saber Expert [Lv. 200] [Boss]") then
                _G.AutoFarm = false
                pcall(function()
                    local v = lockmon("Saber Expert [Lv. 200] [Boss]")
                    EquipWeapon(_G.SelectWeapon)
                    autobuso()
                    if hit then
                        v.HumanoidRootPart.Transparency = 1
                    else
                        v.HumanoidRootPart.Transparency = 0.75
                    end
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.HumanoidRootPart.CanCollide = false
                    v.HumanoidRootPart.Size = Vector3.new(200, 200, 200)
                    pcall(function()
                        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                        tp(standup.CFrame * CFrame.new(0, 4, 0))
                    end)
                end)
            else
                if openfac then
                    _G.AutoFarm = true
                end
            end
        else
            _G.AutoSaber = false
            _G.AutoFarm = true
        end
    end       
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoSaber and OldWorld then autosaber() end
    end
end)


function LibraryKey()
    if _G.AutoLibraryKey and game:GetService("Workspace").Map.IceCastle.Hall.LibraryDoor.PhoeyuDoor.Transparency == 0 then
        pcall(function()
            local v = lockmon("Awakened Ice Admiral [Lv. 1400] [Boss]")
            EquipWeapon(_G.SelectWeapon)
            autobuso()
            if hit then
                v.HumanoidRootPart.Transparency = 1
            else
                v.HumanoidRootPart.Transparency = 0.75
            end
            v.Humanoid.JumpPower = 0
            v.Humanoid.WalkSpeed = 0
            v.HumanoidRootPart.CanCollide = false
            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
            pcall(function()
                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                tp(standup.CFrame * CFrame.new(0, 4, 0))
            end)

        end)
        if game.Players.LocalPlayer.Backpack:FindFirstChild("Library Key") or game.Players.LocalPlayer.Character:FindFirstChild("Library Key") then
            EquipWeapon("Library Key")
            tp(CFrame.new(6376.44629, 296.634705, -6843.68799, -0.840845287, 4.49440769e-08, -0.541275501, 7.71472415e-08, 1, -3.68108672e-08, 0.541275501, -7.27101579e-08, -0.840845287))
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Notification",
                Text = "เปิดประตูู Library เรียบร้อย",
                Duration = math.huge,
                Button1 = "Yes",
            })
        end
    elseif _G.AutoLibraryKey and game:GetService("Workspace").Map.IceCastle.Hall.LibraryDoor.PhoeyuDoor.Transparency == 1 then 
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Notification",
			Text = "เปิดประตูู Library เรียบร้อย",
			Duration = math.huge,
			Button1 = "Yes",
		})
    end
       
    if not game.Players.LocalPlayer.Backpack:FindFirstChild("Library Key") and not game.Players.LocalPlayer.Character:FindFirstChild("Library Key") and
        _G.ServerHop == true and game:GetService("Workspace").Map.IceCastle.Hall.LibraryDoor.PhoeyuDoor.Transparency == 0 and
        not game.Workspace.Enemies:FindFirstChild("Awakened Ice Admiral [Lv. 1400] [Boss]") and
        not game.ReplicatedStorage:FindFirstChild("Awakened Ice Admiral [Lv. 1400] [Boss]") then 
            Hopey() 
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoLibraryKey then LibraryKey() end
    end
end)


function waterKey()
    if _G.AutoWater then
        pcall(function()
            local v = lockmon("Tide Keeper [Lv. 1475] [Boss]")
            EquipWeapon(_G.SelectWeapon)
            autobuso()
            if hit then
                v.HumanoidRootPart.Transparency = 1
            else
                v.HumanoidRootPart.Transparency = 0.75
            end
            pcall(function()
                v.Humanoid.JumpPower = 0
                v.Humanoid.WalkSpeed = 0
                v.HumanoidRootPart.CanCollide = false
                v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                tp(standup.CFrame * CFrame.new(0, 4, 0))

            end)
        end)
        watermelon = "oop"
        if game.Players.LocalPlayer.Backpack:FindFirstChild("Water Key") or game.Players.LocalPlayer.Character:FindFirstChild("Water Key") then
            EquipWeapon("Water Key")
            tp(CFrame.new(-2602.64355, 239.294647, -10316.5586,0.0310906507, 6.8576762e-09, -0.999516547, -8.93668584e-10, 1, 6.8331949e-09, 0.999516547, 6.80788093e-10, 0.0310906507))
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate", true)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate")
            wait(1)
            watermelon = "kuy"
            _G.AutoWater = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Notification",
                Text = "ส่ง Water Key เรียบร้อย",
                Duration = math.huge,
                Button1 = "Yes",
            })
        end
        if watermelon == "oop" and
            not game.Players.LocalPlayer.Backpack:FindFirstChild("Water Key") and
            not game.Players.LocalPlayer.Character:FindFirstChild("Water Key") and _G.ServerHop == true and
            not game.Workspace.Enemies:FindFirstChild("Tide Keeper [Lv. 1475] [Boss]") and
            not game.ReplicatedStorage:FindFirstChild("Tide Keeper [Lv. 1475] [Boss]") then 
                Hopey() 
        end
    end
end

spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.AutoWater then 
            waterKey() 
        end
    end
end)

najaxx = true
mayedmae = true
    function supergod()
        if game.Players.localPlayer.Data.Level.Value >= 1500 and game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress", "Bartilo") ~= 3 then
            _G.AutoFarm = false
            _G.AutoFarmwarp = false
            if najaxx then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                najaxx = false
            end
            _G.Bartiloquest = true
        elseif game.Players.localPlayer.Data.Level.Value >= 1500 and game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "2") == nil then
            _G.dokmind = false
            _G.Bartiloquest = false
            _G.Nahee = false
            
           -- game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = true
            pcall(function()
                if GetFruitInventory("Quake-Quake") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358,0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Quake-Quake")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif GetFruitInventory("Human-Human: Buddha") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358,0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Human-Human: Buddha")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif GetFruitInventory("String-String") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08, -0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "String-String")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif GetFruitInventory("Bird-Bird: Phoenix") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Bird-Bird: Phoenix")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif GetFruitInventory("Rumble-Rumble") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()                    
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Rumble-Rumble")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif GetFruitInventory("Paw-Paw") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Paw-Paw")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif GetFruitInventory("Gravity-Gravity") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()                    
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Gravity-Gravity")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif GetFruitInventory(
                    "Dough-Dough") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Dough-Dough")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif GetFruitInventory("Control-Control") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Control-Control")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif GetFruitInventory("Dragon-Dragon") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Dragon-Dragon")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif GetFruitInventory("Venom-Venom") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Venom-Venom")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif game:GetService("Players").LocalPlayer.PlayerGui.Main
                    .FruitInventory.Container.Stored.ScrollingFrame.Frame:FindFirstChild(
                    "Shadow-Shadow") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Shadow-Shadow")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                elseif GetFruitInventory("Soul-Soul") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Soul-Soul")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
				elseif GetFruitInventory("Leopard-Leopard") then
                    _G.AutoFarm = false
                    _G.AutoFarmwarp = false
                    tpwait(CFrame.new(-338.400787, 331.860565, 646.779358, 0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    wait()
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", "Leopard-Leopard")
                    --game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = false
                else
                    _G.AutoFarm = true
                end
            end)
            wait()
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "1")
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "2")
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "3")
            wait(1)
        elseif game.Players.localPlayer.Data.Level.Value >= 1500 and
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "2") == 0 and
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ZQuestProgress", "Check") == nil then
            _G.AutoFarm = false
            _G.AutoFarmwarp = false
            _G.AutoDonSwan = true
        elseif game.Players.localPlayer.Data.Level.Value >= 1500 and
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ZQuestProgress", "Check") == 0 then
            _G.AutoDonSwan = false
            _G.AutoFarm = false
            _G.AutoFarmwarp = false
            wait()
            _G.AutoThirdworld1 = true
        end
    end

    spawn(function()
        while wait(.1) do
            if newworld and _G.AutoThirdworld and
                game.Players.localPlayer.Data.Level.Value >= 1500 then
                supergod()
            end
        end
    end)

    function dokmai()
        if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Alchemist", "1") == 0 then
            tp(-2778.53296, 72.9661407, -3569.37622, -0.963810027, 4.86302554e-09, -0.266589969, -1.90723792e-08, 1, 8.71944863e-08, 0.266589969, 8.91234251e-08, -0.963810027)
            _G.tweennew.Completed:Wait()
            wait(1)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Alchemist", "2")
        elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Alchemist", "1") == 2 then
            tp(-2778.53296, 72.9661407, -3569.37622, -0.963810027, 4.86302554e-09, -0.266589969, -1.90723792e-08, 1, 8.71944863e-08,0.266589969, 8.91234251e-08, -0.963810027)
            _G.tweennew.Completed:Wait()
            wait(1)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Alchemist", "3")
        elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Alchemist", "2") == "Come back when you find them." then
            if not game.Players.LocalPlayer.Backpack:FindFirstChild("Flower 3") and not game.Players.LocalPlayer.Character:FindFirstChild("Flower 3") then
                pcall(function()
                    local v = lockmon("Swan Pirate [Lv. 775]")
                    EquipWeapon(_G.SelectWeapon)
                    autobuso()
                    pcall(function()
                        v.Humanoid.JumpPower = 0
                        v.Humanoid.WalkSpeed = 0
                        v.HumanoidRootPart.CanCollide = false
                        v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                        tp(standup.CFrame * CFrame.new(0, 4, 0))
                        _G.PosMon = v.HumanoidRootPart.CFrame
                        _G.bringmob = true
                    end)
                end)
            elseif not game.Players.LocalPlayer.Backpack:FindFirstChild("Flower 1") and  not game.Players.LocalPlayer.Character:FindFirstChild("Flower 1") then
                wait(1)
                tp(game:GetService("Workspace"):FindFirstChild("Flower1").CFrame)
            elseif not game.Players.LocalPlayer.Backpack:FindFirstChild("Flower 2") and  not game.Players.LocalPlayer.Character:FindFirstChild("Flower 2") then
                wait(1)
                tp(game:GetService("Workspace"):FindFirstChild("Flower2").CFrame)
            end
        elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Alchemist", "1") == nil then
            _G.dokmind = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Notification",
                Text = "ทำเควสบาโธก่อน เวร",
                Duration = math.huge,
                Button1 = "Yes",
            })
        else
            _G.dokmind = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Notification",
                Text = "เควส ดอกไม้ เสร็จเรียบร้อย",
                Duration = math.huge,
                Button1 = "Yes",
            })
        end
    end
    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.dokmind then dokmai() end
        end
    end)


    function bartofarm1()
        if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress", "Bartilo") == 0 then
            if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
               -- tpwait(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 100, 2))
                local quest = CFrame.new(-460.794342, 73.0200958, 298.641266, 0.906751215, -0.000221123279, 0.421665549, 9.19660451e-05,0.99999994, 0.000326640118, -0.421665609, -0.000257402455, 0.906751156)
                tpwait(-460.794342, 73.0200958, 298.641266, 0.906751215, -0.000221123279, 0.421665549, 9.19660451e-05,0.99999994, 0.000326640118, -0.421665609, -0.000257402455, 0.906751156)
                if (quest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 4 then
                    wait(1.1)
                    if  _G.Bartiloquest and (quest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10  then
                        pcall(function()
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", "BartiloQuest", 1)
                        end)
                    else

                    end
                end
                --tpwait(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 100, 2))
            elseif _G.Bartiloquest and
                game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
                pcall(function()
                    local v = lockmon("Swan Pirate [Lv. 775]")
                    EquipWeapon(_G.SelectWeapon)
                    autobuso()
                    pcall(function()
                        v.Humanoid.JumpPower = 0
                        v.Humanoid.WalkSpeed = 0
                        v.HumanoidRootPart.CanCollide = false
                        v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                        tp(standup.CFrame * CFrame.new(0, 4, 0))
                        _G.PosMon = v.HumanoidRootPart.CFrame
                        _G.bringmob = true
                    end)
                end)
            end
        elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress", "Bartilo") == 1 then
            Magnet = false
            if game.ReplicatedStorage:FindFirstChild("Jeremy [Lv. 850] [Boss]") or game.workspace.Enemies:FindFirstChild("Jeremy [Lv. 850] [Boss]") then
                pcall(function()
                    local v = lockmon("Jeremy [Lv. 850] [Boss]")
                    EquipWeapon(_G.SelectWeapon)
                    autobuso()
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.HumanoidRootPart.CanCollide = false
                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                    pcall(function()
                        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                        tp(standup.CFrame * CFrame.new(0, 4, 0))
                    end)
                end)
            else
                tp(CFrame.new(-380.411011, 72.8180008, 303.237))
                if _G.ServerHop == true and not game.Workspace.Enemies:FindFirstChild("Jeremy [Lv. 850] [Boss]") and not game.ReplicatedStorage:FindFirstChild("Jeremy [Lv. 850] [Boss]") then 
                    Hopey() 
                end
            end
        elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress", "Bartilo") == 2 then
           -- _G.tweennew:Cancel()
			wait(2)
            tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate1.CFrame * CFrame.new(0, 0, -1.5))
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate1.CFrame * CFrame.new(0, 0, -1.5)
			tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate1.CFrame * CFrame.new(0, 0, 0)) 
            wait(2)
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate2.CFrame * CFrame.new(0, 0, -1.5)
            tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate2.CFrame * CFrame.new(0, 0, -1.5))
			tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate2.CFrame * CFrame.new(0, 0, 0))
            wait(2)
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate3.CFrame * CFrame.new(0, 0, -1.5)
            tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate3.CFrame * CFrame.new(0, 0, -1.5))
			tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate3.CFrame * CFrame.new(0, 0, 0))
            wait(2)
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate4.CFrame * CFrame.new(0, 0, -1.5)
            tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate4.CFrame * CFrame.new(0, 0, -1.5))
			tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate4.CFrame * CFrame.new(0, 0, 0))
            wait(2)
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate5.CFrame * CFrame.new(0, 0, -1.5)
            tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate5.CFrame * CFrame.new(0, 0, -1.5))
			tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate5.CFrame * CFrame.new(0, 0, 0))
            wait(2)
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate6.CFrame * CFrame.new(0, 0, -1.5)
            tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate6.CFrame * CFrame.new(0, 0, -1.5))
			tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate6.CFrame * CFrame.new(0, 0, 0))
            wait(2)
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate7.CFrame * CFrame.new(0, 0, -1.5)
            tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate7.CFrame * CFrame.new(0, 0, -1.5))
			tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate7.CFrame * CFrame.new(0, 0, 0))
            wait(2)
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate8.CFrame * CFrame.new(0, 0, -1.5)
            tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate8.CFrame * CFrame.new(0, 0, -1.5))
			tpwait(game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate8.CFrame * CFrame.new(0, 0, 0))
        else
            _G.Bartiloquest = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Notification",
                Text = "เควส Bartilo เสร็จเรียบร้อย",
                Duration = math.huge,
                Button1 = "Yes",
            })
        end

    end

    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.Bartiloquest then bartofarm1() end
        end
    end)


    function enemyEliteBoss()
        if game.Workspace.Enemies:FindFirstChild("Deandre [Lv. 1750]") or
            game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]") or
            game.Workspace.Enemies:FindFirstChild("Diablo [Lv. 1750]") then
            local mobs = game.Workspace.Enemies:GetChildren()
            for i = 1, #mobs do
                local v = mobs[i]
                if v.Name == "Deandre [Lv. 1750]" or v.Name ==
                    "Diablo [Lv. 1750]" or v.Name == "Urban [Lv. 1750]" and
                    v:IsA("Model") and v:FindFirstChild("Humanoid") and
                    v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then 
                        return v
                 end

            end
        elseif not game.Workspace.Enemies:FindFirstChild("Deandre [Lv. 1750]") or
            not game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]") or
            not game.Workspace.Enemies:FindFirstChild("Diablo [Lv. 1750]") then

            if game.ReplicatedStorage:FindFirstChild("Deandre [Lv. 1750]") then
                standup.CFrame = game.ReplicatedStorage:FindFirstChild("Deandre [Lv. 1750]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                tp(standup.CFrame * CFrame.new(0, 4, 0))
            elseif game.ReplicatedStorage:FindFirstChild("Urban [Lv. 1750]") then
                standup.CFrame = game.ReplicatedStorage:FindFirstChild("Urban [Lv. 1750]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                tp(standup.CFrame * CFrame.new(0, 4, 0))
            elseif game.ReplicatedStorage:FindFirstChild("Diablo [Lv. 1750]") then
                standup.CFrame = game.ReplicatedStorage:FindFirstChild("Diablo [Lv. 1750]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Deandre [Lv. 1750]") then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Deandre [Lv. 1750]"].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Urban [Lv. 1750]") then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Urban [Lv. 1750]"].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Diablo [Lv. 1750]") then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Diablo [Lv. 1750]"].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))

			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Deandre") then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Deandre [Lv. 1750]"].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Urban") then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Urban"].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Diablo") then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Diablo"].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
            end
        end
    end

    function autoyama()
        if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter", "Progress") >= 30 then
            if game.Workspace.Enemies:FindFirstChild("Ghost [Lv. 1500]") or game.ReplicatedStorage:FindFirstChild("Ghost [Lv. 1500]") then
                EquipWeapon(_G.SelectWeapon)
                autobuso()
                pcall(function()
                    local v = lockmon("Ghost [Lv. 1500]")
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.HumanoidRootPart.CanCollide = false
                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                    pcall(function()
                        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                        tp(standup.CFrame * CFrame.new(0, 4, 0))
                    end)
                end)
            else
                if not GetWeaponInventory("Yama") then
                    tp(CFrame.new(5226.98633, 4.92245436, 1100.41821, 1, 0, 0,0, -1, 0, 0, 0, -1))
                    fireclickdetector(game:GetService("Workspace").Map.Waterfall.SealedKatana.Handle.ClickDetector)
                    wait(.3)
                    fireclickdetector(game:GetService("Workspace").Map.Waterfall.SealedKatana.Handle.ClickDetector)
                    wait(.3)
                    fireclickdetector(game:GetService("Workspace").Map.Waterfall.SealedKatana.Handle.ClickDetector)
                    wait(.3)
                    fireclickdetector(game:GetService("Workspace").Map.Waterfall.SealedKatana.Handle.ClickDetector)
                    wait(.3)
                    fireclickdetector(game:GetService("Workspace").Map.Waterfall.SealedKatana.Handle.ClickDetector)
                else
                    tp(CFrame.new(-12554.9443, 337.194092, -7501.44727,0.906377554, 4.23948272e-08, -0.422468632,-1.89128269e-08, 1, 5.97740595e-08,0.422468632, -4.61877896e-08, 0.906377554))
                    wait(1)
                    _G.AutoYama = false
                    game:GetService("StarterGui"):SetCore("SendNotification", {
                        Title = "Notification",
                        Text = "ได้ดาบ Yama แล้ว",
                        Duration = math.huge,
                        Button1 = "Yes",
                    })
                end
            end

        else
            if game.Workspace.Enemies:FindFirstChild("Deandre [Lv. 1750]") or
                game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]") or
                game.Workspace.Enemies:FindFirstChild("Diablo [Lv. 1750]") or
                game.ReplicatedStorage:FindFirstChild("Deandre [Lv. 1750]") or
                game.ReplicatedStorage:FindFirstChild("Urban [Lv. 1750]") or
                game.ReplicatedStorage:FindFirstChild("Diablo [Lv. 1750]") then

                if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
                    --local elitequest = CFrame.new(-5420.49219, 314.446045, -2823.07373, -0.370539844, 6.66716105e-08, -0.928816557, 8.17477854e-08, 1, 3.91689809e-08, 0.928816557, -6.14150295e-08, -0.370539844)
                    --tp(elitequest)
                    --wait(1.1)
                    --if  _G.AutoYama and (elitequest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10  then
                        pcall(function()
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
                        end)
                    --else
                    --end

                elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
                    CheckQuest()
                    pcall(function()
                        EquipWeapon(_G.SelectWeapon)
                        autobuso()
                        pcall(function()
                            local v = enemyEliteBoss()
                            v.Humanoid.JumpPower = 0
                            v.Humanoid.WalkSpeed = 0
                            v.HumanoidRootPart.CanCollide = false
                            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                            pcall(function()
                                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                                tp(standup.CFrame * CFrame.new(0, 4, 0))
                            end)
                        end)
                    end)
                end
            elseif _G.ServerHop then
                Hopey()
            end
        end
    end

    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.AutoYama then autoyama() end
        end
    end)


    function autoEliteBoss()
        if game.Workspace.Enemies:FindFirstChild("Deandre [Lv. 1750]") or
            game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]") or
            game.Workspace.Enemies:FindFirstChild("Diablo [Lv. 1750]") or
            game.ReplicatedStorage:FindFirstChild("Deandre [Lv. 1750]") or
            game.ReplicatedStorage:FindFirstChild("Urban [Lv. 1750]") or
            game.ReplicatedStorage:FindFirstChild("Diablo [Lv. 1750]") then
            if _G.AutoFarm then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                _G.AutoFarm = false
            end
            if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
                --local elitequest = CFrame.new(-5420.49219, 314.446045, -2823.07373, -0.370539844, 6.66716105e-08, -0.928816557, 8.17477854e-08, 1, 3.91689809e-08, 0.928816557, -6.14150295e-08, -0.370539844)
                --tp(elitequest)
                --wait(1.1)
                --if  _G.AutoEliteBoss and (elitequest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10  then
                    pcall(function()
                         game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
                         game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
                    end)
                --else
                --end
            elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
                CheckQuest()
                pcall(function()
                    EquipWeapon(_G.SelectWeapon)
                    autobuso()
                    pcall(function()
                        local v = enemyEliteBoss()
                            v.Humanoid.JumpPower = 0
                            v.Humanoid.WalkSpeed = 0
                            v.HumanoidRootPart.CanCollide = false
                            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                            pcall(function()
                                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                                tp(standup.CFrame * CFrame.new(0, 4, 0))
                            end)
                    end)
                end)
            end
        elseif _G.ServerHop then
            wait(1)
            Hopey()
          
        else
            if openfac then
                _G.AutoFarm = true
            end
        end
    end

    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.AutoEliteBoss then autoEliteBoss() end
        end
    end)


    function autolongma()
        if game.Workspace.Enemies:FindFirstChild("Longma [Lv. 2000] [Boss]") or game.ReplicatedStorage:FindFirstChild("Longma [Lv. 2000] [Boss]") then
            pcall(function()
                EquipWeapon(_G.SelectWeapon)
                autobuso()
                pcall(function()
                    local v = lockmon("Longma [Lv. 2000] [Boss]")
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.HumanoidRootPart.CanCollide = false
                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                    pcall(function()
                        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                        tp(standup.CFrame * CFrame.new(0, 4, 0))
                    end)
                end)
            end)
        else     
            Hopey()
        end
    end

    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.AutoLongma then autolongma() end
        end
    end)

	_G.checkup2 = true
    function autoGodChalice()
		if _G.checkup2 and not game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") and not game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") then
            if game.Workspace.Enemies:FindFirstChild("Deandre [Lv. 1750]") or
                game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]") or
                game.Workspace.Enemies:FindFirstChild("Diablo [Lv. 1750]") or
                game.ReplicatedStorage:FindFirstChild("Deandre [Lv. 1750]") or
                game.ReplicatedStorage:FindFirstChild("Urban [Lv. 1750]") or
                game.ReplicatedStorage:FindFirstChild("Diablo [Lv. 1750]") then
                if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
                    --local elitequest = CFrame.new(-5420.49219, 314.446045, -2823.07373, -0.370539844, 6.66716105e-08, -0.928816557, 8.17477854e-08, 1, 3.91689809e-08, 0.928816557, -6.14150295e-08, -0.370539844)
                    --tp(elitequest)
                    --wait(1.1)
                    --if  _G.GodChalice and (elitequest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10  then
                        pcall(function()
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
                        end)
                    --else
                    --end
                elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
                    CheckQuest()
                    pcall(function()
                        EquipWeapon(_G.SelectWeapon)
                        autobuso()
                        pcall(function()
                            local v = enemyEliteBoss()
                            v.Humanoid.JumpPower = 0
                            v.Humanoid.WalkSpeed = 0
                            v.HumanoidRootPart.CanCollide = false
                            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                            pcall(function()
                                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                                tp(standup.CFrame * CFrame.new(0, 4, 0))
                            end)
                        end)
                    end)
                end
            elseif _G.ServerHop then
                Hopey()
            end
        elseif game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") or game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") then
            _G.checkup2 = false
			_G.GodChalice = false
			tpwait(-5015.21533, 314.541382, -3004.17163, -0.37441957, -0.000131956374, 0.927259386, 0.000192793785, 0.99999994, 0.000220156449, -0.927259386, 0.000261200708, -0.37441951)
			
        elseif _G.ServerHop then
            Hopey()
        end
    end

    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.GodChalice then autoGodChalice() end
        end
    end)


	_G.checkup3 = true
	_G.checkup31 = true
function autounlock()
	if game.Players.LocalPlayer.Backpack:FindFirstChild("Red Key") or game.Players.LocalPlayer.Character:FindFirstChild("Red Key") then
		pcall(function()
			if game:GetService("Workspace").Map.CakeLoaf:FindFirstChild("RedDoor").Transparency == 0 then
				wait(1)
				EquipWeapon("Red Key")
				wait()
				tpwait(-2682.22876, 64.3925323, -12853.0811, 0.0370824672, 2.41389597e-09, 0.999312222, -2.38084823e-08, 1, -1.53207258e-09, -0.999312222, -2.37352928e-08, 0.0370824672)
				wait()
				tpwait(-2710.39697, 64.3921661, -12893.5898, 0.984575391, -7.83397702e-09, 0.174960956, -1.85592752e-09, 1, 5.52196191e-08, -0.174960956, -5.46925918e-08, 0.984575391)
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakeScientist","Check")
			elseif game:GetService("Workspace").Map.CakeLoaf:FindFirstChild("RedDoor").Transparency == 1 then
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Notification",
					Text = "ปลดล็อคสำเร็จ",
					Duration = math.huge,
					Button1 = "Yes",
				})
				_G.UnlockRiad = false
			end
		end)
	elseif not game.Players.LocalPlayer.Backpack:FindFirstChild("Red Key") and not game.Players.LocalPlayer.Character:FindFirstChild("Red Key") then
		if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakeScientist","Check") == false then
			if game.Workspace.Enemies:FindFirstChild("Dough King [Lv. 2300] [Raid Boss]") or game.ReplicatedStorage:FindFirstChild("Dough King [Lv. 2300] [Raid Boss]") then
				pcall(function()
						autobuso()
						EquipWeapon(_G.SelectWeapon)
						local v = lockmon("Dough King [Lv. 2300] [Raid Boss]")
					if not v.HumanoidRootPart:FindFirstChild("fly") then
							local bv = Instance.new("BodyVelocity")
							bv.Parent = v.HumanoidRootPart
							bv.Name = "fly"
							bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
							bv.Velocity = Vector3.new(0, 0, 0)
					end
						v.Humanoid.JumpPower = 0
						v.Humanoid.WalkSpeed = 0
						v.HumanoidRootPart.CanCollide = false
						v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
						standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
						tp(standup.CFrame * CFrame.new(0, 4, 0))
				end)
			elseif _G.checkup3 and not game.Players.LocalPlayer.Backpack:FindFirstChild("Sweet Chalice") and not game.Players.LocalPlayer.Character:FindFirstChild("Sweet Chalice") then
				if GetMaterial("Conjured Cocoa") == 0 or GetMaterial("Conjured Cocoa") < 10 then
					pcall(function()
						autobuso()
						EquipWeapon(_G.SelectWeapon)
						local v = allcocoa()
						v.Humanoid.JumpPower = 0
						v.Humanoid.WalkSpeed = 0
						v.HumanoidRootPart.CanCollide = false
						v.Humanoid:ChangeState(14)
						standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
						tp(standup.CFrame * CFrame.new(0, 4, 0))
						_G.PosMon = v.HumanoidRootPart.CFrame
						_G.bringmob = true
					end)
				elseif not game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") and not game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") then
						if game.Workspace.Enemies:FindFirstChild("Deandre [Lv. 1750]") or
							game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]") or
							game.Workspace.Enemies:FindFirstChild("Diablo [Lv. 1750]") or
							game.ReplicatedStorage:FindFirstChild("Deandre [Lv. 1750]") or
							game.ReplicatedStorage:FindFirstChild("Urban [Lv. 1750]") or
							game.ReplicatedStorage:FindFirstChild("Diablo [Lv. 1750]") then
							if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
								--local elitequest = CFrame.new(-5420.49219, 314.446045, -2823.07373, -0.370539844, 6.66716105e-08, -0.928816557, 8.17477854e-08, 1, 3.91689809e-08, 0.928816557, -6.14150295e-08, -0.370539844)
								--tp(elitequest)
								--wait(1.1)
								--if _G.UnlockRiad and (elitequest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10  then
									pcall(function()
										game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
										game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
									end)
								--else
								--end
							elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
								CheckQuest()
								pcall(function()
									EquipWeapon(_G.SelectWeapon)
									autobuso()
									pcall(function()
										local v = enemyEliteBoss()
										v.Humanoid.JumpPower = 0
										v.Humanoid.WalkSpeed = 0
										v.HumanoidRootPart.CanCollide = false
										v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
										standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
										tp(standup.CFrame * CFrame.new(0, 4, 0))
									end)
								end)
							end
						elseif _G.ServerHop then
							Hopey()
						end
				elseif game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") or game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") then
					--_G.checkup31 = false
					pcall(function()
						tpwait(224.092972, 24.7937508, -12771.9902, -0.376015216, -2.59419117e-08, 0.92661351, -1.50514623e-08, 1, 2.18886651e-08, -0.92661351, -5.71641712e-09, -0.376015216)
						game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SweetChaliceNpc")
					end)
				elseif _G.ServerHop then
					Hopey()
				end
			elseif game.Players.LocalPlayer.Backpack:FindFirstChild("Sweet Chalice") or game.Players.LocalPlayer.Character:FindFirstChild("Sweet Chalice") then
				pcall(function()
					if tonumber(string.match(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner",true),"%d+")) ~= nil then 
						pcall(function()
							autobuso()
							EquipWeapon(_G.SelectWeapon)
							local v = allcake()
							v.Humanoid.JumpPower = 0
							v.Humanoid.WalkSpeed = 0
							v.HumanoidRootPart.CanCollide = false
							standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
							tp(standup.CFrame * CFrame.new(0, 4, 0))
							_G.PosMon = v.HumanoidRootPart.CFrame
							_G.bringmob = true
							cfrimff = true
							enemie:Set("Enemies Kill : " ..tonumber(string.match(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner",true),"%d+")))
						end)
					else
						if cfrimff then
							tpwait(-2137.9353, 70.0088654, -12320.2373, -0.00813538395, -2.21940422e-08, 0.999966919, -7.50123164e-08, 1, 2.15845013e-08, -0.999966919, -7.4834233e-08, -0.00813538395)
							EquipWeapon("Sweet Chalice")
							wait(1)
							game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner")
							cfrimff = false
							--_G.checkup3 = false
							firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,game:GetService("Workspace").Map.CakeLoaf.BigMirror.Main,0)
							wait(2)
						end
					end 
				end)
			end		
		end
	end
end

	spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.UnlockRiad then autounlock() end
        end
    end)

	

	
	function monwar()
		if game.ReplicatedStorage:FindFirstChildWhichIsA("Model")  then
			local mobs2 = game.Workspace.Enemies:GetChildren()
			local mobs = game.ReplicatedStorage:GetChildren()
			for i, v in pairs(mobs) do
			 table.insert(mobs2,v)
			end
			for i = 1, #mobs2 do
				local v = mobs2[i]
				if  v:IsA("Model") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
					local level = string.gsub(v.Name, "%D", "")
					--[[
					if tonumber(level) < 1500 then
						
					   return v
					else
						tp( -5218.21973, 313.791779, -2940.13159, 0.298716605, 0, -0.954342008, 0, 1, 0, 0.954342008, 0, 0.29871660)
					end
					]]
					if tonumber(level) < 1500 and game.Workspace.Enemies:FindFirstChild(v.Name) then
						return v
					elseif not game:GetService("Workspace").Enemies:FindFirstChild(v.Name) then
						local subname = string.gsub(v.Name, "%p", "")
						local realname = string.gsub(subname, "%s+Lv %d+.+", "")
						if tonumber(level) < 1500 and game.ReplicatedStorage:FindFirstChild(v.Name) then
							return v
						elseif tonumber(level) < 1500 and game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(v.Name) then
							standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[v.Name].CFrame * CFrame.new(0, Instantnum, 0)
							tp(standup.CFrame * CFrame.new(0, 4, 0))
						elseif tonumber(level) < 1500 and game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
							standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
							tp(standup.CFrame * CFrame.new(0, 4, 0))
						else
							tp(-5218.21973, 313.791779, -2940.13159, 0.298716605, 0, -0.954342008, 0, 1, 0, 0.954342008, 0, 0.29871660)
						end	
					end


				end
			end
			
		end
	end
	
		
function dualphase1()
	
		if tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")["Good"]) == 0 then
		game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Good")
		elseif tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")["Good"]) == -3 then
			
			tpwait(-9533.32715, 7.24558258, -8376.73145, 0.956309855, 4.17068478e-08, -0.29235509, -1.01048485e-08, 1, 1.09604663e-07, 0.29235509, -1.01861815e-07, 0.956309855)
			wait(1)
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","BoatQuest",workspace.NPCs:FindFirstChild("Luxury Boat Dealer"))
			tpwait(-6124.521, 16.4469204, -2249.46045, -0.922833383, 1.76287589e-08, -0.385199308, 1.42082888e-08, 1, 1.17260743e-08, 0.385199308, 5.34818945e-09, -0.922833383)
			wait(1)
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","BoatQuest",workspace.NPCs:FindFirstChild("Luxury Boat Dealer"))
			tpwait(-9548.61133, 21.1310329, 4692.14258, 0.827877462, -4.95824271e-09, 0.560909033, 1.04323006e-09, 1, 7.29989358e-09, -0.560909033, -5.45826007e-09, 0.827877462)
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","BoatQuest",workspace.NPCs:FindFirstChild("Luxury Boat Dealer"))
			wait(1)
		end

		if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")["Good"] == 1 then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Good")
		elseif tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")["Good"]) == -4 then
			 pcall(function()
				 EquipWeapon(_G.SelectWeapon)
				 autobuso()
					 local v = monwar()
					 v.Humanoid.JumpPower = 0
					 v.Humanoid.WalkSpeed = 0
					 v.HumanoidRootPart.CanCollide = false
					 v.Humanoid:ChangeState(14)
					 standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
					 tp(standup.CFrame * CFrame.new(0, 4, 0))
					 _G.PosMon = v.HumanoidRootPart.CFrame
					 _G.bringmob = true
			 end)
		end

		if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")["Good"] == 2 then
		   game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Good")
		elseif tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")["Good"]) == -5 then
			if game:GetService("Workspace").Map:FindFirstChild("HeavenlyDimension") and game:GetService("Workspace").Map.HeavenlyDimension.Exit.Color == Color3.fromRGB(0, 0, 0) then
				wait(6)
				pcall(function()
					repeat wait()
					
						if game:GetService("Workspace").Map.HeavenlyDimension.Exit.Color == Color3.fromRGB(0, 0, 0) then
							tpwait(game:GetService("Workspace").Map.HeavenlyDimension.Torch1.CFrame)
							wait(2)
							fireproximityprompt(game:GetService("Workspace").Map.HeavenlyDimension.Torch1.ProximityPrompt)
							fireproximityprompt(game:GetService("Workspace").Map.HeavenlyDimension.Torch1.ProximityPrompt)
							wait(1)
							for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
								if _G.cdkp1 and v:FindFirstChild("Humanoid") and (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 350 then
									repeat
										game:GetService("RunService").RenderStepped:Wait()
										EquipWeapon(_G.SelectWeapon)
										autobuso()
										v.Humanoid.JumpPower = 0
										v.Humanoid.WalkSpeed = 0
										v.HumanoidRootPart.CanCollide = false
										v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
										standup.CFrame = v.HumanoidRootPart.CFrame *CFrame.new(0, Instantnum, 0)
										tp(standup.CFrame * CFrame.new(0, 4, 0))
									until v.Humanoid.Health <= 0 or _G.cdkp1
								end
							end
							wait(1)
							tpwait(game:GetService("Workspace").Map.HeavenlyDimension.Torch2.CFrame)
							wait(2)
							fireproximityprompt(game:GetService("Workspace").Map.HeavenlyDimension.Torch2.ProximityPrompt)
							fireproximityprompt(game:GetService("Workspace").Map.HeavenlyDimension.Torch2.ProximityPrompt)
							wait(1)
							for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
								if _G.cdkp1 and v:FindFirstChild("Humanoid") and (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 350 then
									repeat
										game:GetService("RunService").RenderStepped:Wait()
										EquipWeapon(_G.SelectWeapon)
										autobuso()
										v.Humanoid.JumpPower = 0
										v.Humanoid.WalkSpeed = 0
										v.HumanoidRootPart.CanCollide = false
										v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
										standup.CFrame = v.HumanoidRootPart.CFrame *CFrame.new(0, Instantnum, 0)
										tp(standup.CFrame * CFrame.new(0, 4, 0))
									until v.Humanoid.Health <= 0 or _G.cdkp1
								end
							end
							wait(1)
							tpwait(game:GetService("Workspace").Map.HeavenlyDimension.Torch3.CFrame)
							wait(2)
							fireproximityprompt(game:GetService("Workspace").Map.HeavenlyDimension.Torch3.ProximityPrompt)
							fireproximityprompt(game:GetService("Workspace").Map.HeavenlyDimension.Torch3.ProximityPrompt)
							wait(1)
							for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
								if _G.cdkp1 and v:FindFirstChild("Humanoid") and (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 350 then
									repeat
										game:GetService("RunService").RenderStepped:Wait()
										EquipWeapon(_G.SelectWeapon)
										autobuso()
										v.Humanoid.JumpPower = 0
										v.Humanoid.WalkSpeed = 0
										v.HumanoidRootPart.CanCollide = false
										v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
										standup.CFrame = v.HumanoidRootPart.CFrame *CFrame.new(0, Instantnum, 0)
										tp(standup.CFrame * CFrame.new(0, 4, 0))
									until v.Humanoid.Health <= 0 or _G.cdkp1
								end
							end
							wait(1)
							for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
								if _G.cdkp1 and v:FindFirstChild("Humanoid") and (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 350 then
									repeat
										game:GetService("RunService").RenderStepped:Wait()
										EquipWeapon(_G.SelectWeapon)
										autobuso()
										v.Humanoid.JumpPower = 0
										v.Humanoid.WalkSpeed = 0
										v.HumanoidRootPart.CanCollide = false
										v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
										standup.CFrame = v.HumanoidRootPart.CFrame *CFrame.new(0, Instantnum, 0)
										tp(standup.CFrame * CFrame.new(0, 4, 0))
									until v.Humanoid.Health <= 0 or _G.cdkp1
								end
							end
						else
							tpwait(game:GetService("Workspace").Map.HeavenlyDimension.Exit.CFrame)
						end
					until not game:GetService("Workspace").Map:FindFirstChild("HeavenlyDimension") or not game:GetService("Workspace").Map.HeavenlyDimension.Exit.Color == Color3.fromRGB(0, 0, 0) 

				end)
			elseif not game:GetService("Workspace").Map:FindFirstChild("HeavenlyDimension") then
				if  game.Workspace.Enemies:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") or
           		 game.ReplicatedStorage:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") then
				pcall(function()
					--_G.ServerHop = false
					local v = lockmon("Cake Queen [Lv. 2175] [Boss]")
					EquipWeapon(_G.SelectWeapon)
					autobuso()
					if hit then
						v.HumanoidRootPart.Transparency = 1
					else
						v.HumanoidRootPart.Transparency = 0.75
					end
					v.Humanoid.JumpPower = 0
					v.Humanoid.WalkSpeed = 0
					v.HumanoidRootPart.CanCollide = false
					v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
					pcall(function()
						standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
						tp(standup.CFrame * CFrame.new(0, 4, 0))
					end)
				end)
			elseif not game.Workspace.Enemies:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") and
            not game.ReplicatedStorage:FindFirstChild("Cake Queen [Lv. 2175] [Boss]") then
				if _G.ServerHop then
           			 Hopey()
       			 end
			end
			end
		end

		if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")["Good"] == 4 then
			--tp(-393.299988, 367.299957, 687.499817)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tushita scroll",
				Text = "ปลดล็อคสำเร็จ",
				Duration = math.huge,
				Button1 = "Yes",
			})
		end
	
end

spawn(function()
	while game:GetService("RunService").RenderStepped:Wait() do
		if _G.cdkp1 then dualphase1() end
	end
end)


local hee3 = {
	"Pirate Millionaire [Lv. 1500]", "Pirate Millionaire [Lv. 1500]", 
	"Pistol Billionaire [Lv. 1525]", "Pistol Billionaire [Lv. 1525]",
	"Ghost [Lv. 1500]", "Ghost [Lv. 1500]",
	"Dragon Crew Warrior [Lv. 1575]", "Dragon Crew Warrior [Lv. 1575]",
	"Dragon Crew Archer [Lv. 1600]", "Dragon Crew Archer [Lv. 1600]",
	"Female Islander [Lv. 1625]", "Female Islander [Lv. 1625]",
	"Giant Islander [Lv. 1650]", "Giant Islander [Lv. 1650]",
	"Marine Commodore [Lv. 1700]", "Marine Commodore [Lv. 1700]",
	"Marine Rear Admiral [Lv. 1725]", "Marine Rear Admiral [Lv. 1725]",
	"Fishman Raider [Lv. 1775]", "Fishman Raider [Lv. 1775]",
	"Fishman Captain [Lv. 1800]", "Fishman Captain [Lv. 1800]",
	"Forest Pirate [Lv. 1825]", "Forest Pirate [Lv. 1825]",
	"Mythological Pirate [Lv. 1850]", "Mythological Pirate [Lv. 1850]",
	"Jungle Pirate [Lv. 1900]", "Jungle Pirate [Lv. 1900]",
	"Musketeer Pirate [Lv. 1925]", "Musketeer Pirate [Lv. 1925]",
	"Reborn Skeleton [Lv. 1975]", "Reborn Skeleton [Lv. 1975]",
	"Living Zombie [Lv. 2000]", "Living Zombie [Lv. 2000]",
	"Demonic Soul [Lv. 2025]", "Demonic Soul [Lv. 2025]",
	"Posessed Mummy [Lv. 2050]", "Posessed Mummy [Lv. 2050]",
	"Peanut Scout [Lv. 2075]", "Peanut Scout [Lv. 2075]",
	"Peanut President [Lv. 2100]", "Peanut President [Lv. 2100]",
	"Ice Cream Chef [Lv. 2125]", "Ice Cream Chef [Lv. 2125]", 
	"Ice Cream Commander [Lv. 2150]", "Ice Cream Commander [Lv. 2150]",
	"Cookie Crafter [Lv. 2200]", "Cookie Crafter [Lv. 2200]",
	"Cake Guard [Lv. 2225]", "Cake Guard [Lv. 2225]",
	"Baking Staff [Lv. 2250]", "Baking Staff [Lv. 2250]",
	"Head Baker [Lv. 2275]", "Head Baker [Lv. 2275]",
	"Cocoa Warrior [Lv. 2300]",  "Cocoa Warrior [Lv. 2300]",
	"Chocolate Bar Battler [Lv. 2325]", "Chocolate Bar Battler [Lv. 2325]",
	"Sweet Thief [Lv. 2350]", "Sweet Thief [Lv. 2350]",
	"Candy Rebel [Lv. 2375]", "Candy Rebel [Lv. 2375]"
}



function monwar2()
	for t = 1, #hee3 do
		local k = hee3[1]
		if game.Workspace.Enemies:FindFirstChild(k) then
			local mobs = game.Workspace.Enemies:GetChildren()
			for i = 1, #mobs do
				local v = mobs[i]
				if v.Name == k and v:IsA("Model") and
					v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
					return v
				end
				repeat wait()

				until v.Humanoid.Health <= 0 and not v:FindFirstChild("HazeESP")
				
			end
			table.remove(hee3, 1)
		elseif not game:GetService("Workspace").Enemies:FindFirstChild(k) then
			standup.CFrame = game.ReplicatedStorage:FindFirstChild(k).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
			tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(k) then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[k].CFrame * CFrame.new(0, Instantnum, 0)
			tp(standup.CFrame * CFrame.new(0, 4, 0))
		elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
			standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
			tp(standup.CFrame * CFrame.new(0, 4, 0))
		end
	end
	
end




function dualphase2()
	pcall(function()
		if tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")["Evil"]) == 0 then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
		elseif tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")["Evil"]) == -3 then
			game:GetService("Players").LocalPlayer.Character.Humanoid:UnequipTools()
			if game.Workspace.Enemies:FindFirstChild("Mythological Pirate [Lv. 1850]") then
				tp(game.Workspace.Enemies:FindFirstChild("Mythological Pirate [Lv. 1850]").HumanoidRootPart.CFrame * CFrame.new(1, 0, 0))
			else
				
				if game.ReplicatedStorage:FindFirstChild("Mythological Pirate [Lv. 1850]") then
					tp(game.ReplicatedStorage:FindFirstChild("Mythological Pirate [Lv. 1850]").HumanoidRootPart.CFrame * CFrame.new(1, 0, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Mythological Pirate [Lv. 1850]") then
					tp(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Mythological Pirate [Lv. 1850]"].CFrame * CFrame.new(1, 0, 0))
				elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Mythological Pirate") then
					tp(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Mythological Pirate"].CFrame * CFrame.new(1, 0, 0))
				end
			end
		
		end
		
		if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")["Evil"] == 1 then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
		elseif tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")["Evil"]) == -4 then
			
			pcall(function()
				for t = 1, #hee3 do
					local k = hee3[1]
					if _G.cdkp2 and game.Workspace.Enemies:FindFirstChild(k) then
						local mobs = game.Workspace.Enemies:GetChildren()
						for i = 1, #mobs do
							local v = mobs[i]
							if _G.cdkp2 and v.Name == k and v:IsA("Model") and
								v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
									repeat wait()
										EquipWeapon(_G.SelectWeapon)
										autobuso()
											v.Humanoid.JumpPower = 0
											v.Humanoid.WalkSpeed = 0
											v.HumanoidRootPart.CanCollide = false
											v.Humanoid:ChangeState(14)
											standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
											tp(standup.CFrame * CFrame.new(0, 4, 0))
											_G.PosMon = v.HumanoidRootPart.CFrame
											_G.bringmob = true
									until v.Humanoid.Health <= 0 or not _G.cdkp2 
									--table.remove (hee3, 1)
							end
						end
						table.insert (hee3, k)
						table.remove(hee3, 1)
					elseif _G.cdkp2 and not game.Workspace.Enemies:FindFirstChild(k) then
						local subname = string.gsub(k, "%p", "")
						local realname = string.gsub(subname, "%s+Lv %d+.+", "") 
						if game.ReplicatedStorage:FindFirstChild(k) then
							standup.CFrame = game.ReplicatedStorage:FindFirstChild(k).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
							tp(standup.CFrame * CFrame.new(0, 4, 0))
						elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(k) then
							standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[k].CFrame * CFrame.new(0, Instantnum, 0)
							tp(standup.CFrame * CFrame.new(0, 4, 0))
						elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
							standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
							tp(standup.CFrame * CFrame.new(0, 4, 0))
						end
						--	table.insert (hee3, 2, k)
							
					end
				end
			end)
			
		end
		
		if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")["Evil"] == 2 then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
		elseif tonumber(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")["Evil"]) == -5 then
			

		end
		
		if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")["Evil"] == 4 then
				
		end
	end)

end

spawn(function()
	while game:GetService("RunService").RenderStepped:Wait() do
		if _G.cdkp2 then dualphase2() end
	end
end)

    _G.checkup = true
    function autoTushita()
        if game.Workspace.Enemies:FindFirstChild("rip_indra True Form [Lv. 5000] [Raid Boss]") or game.ReplicatedStorage:FindFirstChild("rip_indra True Form [Lv. 5000] [Raid Boss]") then
            pcall(function()
                EquipWeapon(_G.SelectWeapon)
                autobuso()
                pcall(function()
                    local v = lockmon("rip_indra True Form [Lv. 5000] [Raid Boss]")
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.HumanoidRootPart.CanCollide = false
                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                    pcall(function()
                            standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                            tp(standup.CFrame * CFrame.new(0, 4, 0))
                    end)
                end)
            end)
        elseif _G.checkup and not game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") and not game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") then
            if game.Workspace.Enemies:FindFirstChild("Deandre [Lv. 1750]") or
                game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]") or
                game.Workspace.Enemies:FindFirstChild("Diablo [Lv. 1750]") or
                game.ReplicatedStorage:FindFirstChild("Deandre [Lv. 1750]") or
                game.ReplicatedStorage:FindFirstChild("Urban [Lv. 1750]") or
                game.ReplicatedStorage:FindFirstChild("Diablo [Lv. 1750]") then
                if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
                    --local elitequest = CFrame.new(-5420.49219, 314.446045, -2823.07373, -0.370539844, 6.66716105e-08, -0.928816557, 8.17477854e-08, 1, 3.91689809e-08, 0.928816557, -6.14150295e-08, -0.370539844)
                    --tp(elitequest)
                    --wait(1.1)
                    --if  _G.AutoTushita and (elitequest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10  then
                        pcall(function()
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
                        end)
                    --else
                    --end
                elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
                    CheckQuest()
                    pcall(function()
                        EquipWeapon(_G.SelectWeapon)
                        autobuso()
                        pcall(function()
                            local v = enemyEliteBoss()
                            v.Humanoid.JumpPower = 0
                            v.Humanoid.WalkSpeed = 0
                            v.HumanoidRootPart.CanCollide = false
                            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                            pcall(function()
                                standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                                tp(standup.CFrame * CFrame.new(0, 4, 0))
                            end)
                        end)
                    end)
                end
            elseif _G.ServerHop then
                Hopey()
            end
        elseif game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") or game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") then
            _G.checkup = false
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("activateColor", "Winter Sky")
            wait(0.5)
            tpwait(CFrame.new(-5420.16602, 1084.9657, -2666.8208, 0.390717864, 0,0.92051065, 0, 1, 0, -0.92051065, 0, 0.390717864))
            wait(0.5)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("activateColor", "Pure Red")
            wait(0.5)
            tpwait(CFrame.new(-5414.41357, 309.865753, -2212.45776,0.374604106, -0, -0.92718488, 0, 1, -0,0.92718488, 0, 0.374604106))
            wait(0.5)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("activateColor", "Snow White")
            wait(0.5)
            tpwait(CFrame.new(-4971.47559, 331.565765, -3720.02954,-0.92051065, 0, 0.390717506, 0, 1, 0,-0.390717506, 0, -0.92051065))
            wait(0.5)
            EquipWeapon("God's Chalice")
            EquipWeapon("God's Chalice")
            EquipWeapon("God's Chalice")
            wait(0.5)
			firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,game:GetService("Workspace").Map["Boat Castle"].Summoner.Detection,0)
            tpwait(CFrame.new(-5560.27295, 313.915466, -2663.89795, -0.438523829, 2.38801645e-09, 0.898719549,-5.84364612e-10, 1, -2.94226843e-09, -0.898719549, -1.81543469e-09, -0.438523829))
            wait(0.5)
			firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,game:GetService("Workspace").Map["Boat Castle"].Summoner.Detection,0)
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-5561.37451, 313.342529, -2663.49487, -0.308039904, -2.99654097e-08, 0.951373458, -2.03540047e-08, 1, 2.49066918e-08,  -0.951373458, -1.16920047e-08, -0.308039904)
            wait(1)
        elseif game.Workspace.Enemies:FindFirstChild("Longma [Lv. 2000] [Boss]") or  game.ReplicatedStorage:FindFirstChild("Longma [Lv. 2000] [Boss]") then
            pcall(function()
                EquipWeapon(_G.SelectWeapon)
                autobuso()
                pcall(function()
                    local v = lockmon("Longma [Lv. 2000] [Boss]")
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.HumanoidRootPart.CanCollide = false
                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                    pcall(function()
                            standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                            tp(standup.CFrame * CFrame.new(0, 4, 0))
                    end)
                end)
            end)
        elseif _G.ServerHop then
            Hopey()
        end
    end

    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.AutoTushita then autoTushita() end
        end
    end)

	_G.checkup100 = true
    function autoTushita2()
		if game:GetService("Workspace").Map.Turtle:FindFirstChild("TushitaGate") then
			if tostring(game:GetService("Workspace").Map.Waterfall.SecretRoom.Room.Door.Door.Hitbox.BrickColor) == "White" then
				if not game.Players.LocalPlayer.Backpack:FindFirstChild("Holy Torch") and not game.Players.LocalPlayer.Character:FindFirstChild("Holy Torch") then
					tpwait(game:GetService("Workspace").Map.Waterfall.SecretRoom.Room.Door.Door.Hitbox.CFrame)
					tpwait(game:GetService("Workspace").Map.Waterfall.SecretRoom.Room.Door.Door.Hitbox.CFrame * CFrame.new(0, 0, -2))
					--game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame =  CFrame.new(5154.17676, 141.786423, 911.046326, 0.0786230937,1.10107962e-07, 0.996904433, 8.76694628e-09, 1,-1.11141297e-07, -0.996904433, 1.74780794e-08,0.0786230937)
					wait(0.2)
				else
					--game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame =  CFrame.new(5148.03613, 162.352493, 910.548218, 0, 0, -1, 0,1, 0, 1, 0, 0)
					wait(3)
					EquipWeapon("Holy Torch")
					wait(0.4)
					EquipWeapon("Holy Torch")
					wait(0.4)
					EquipWeapon("Holy Torch")
					wait(1)
					wait(0.4)
					
					tpwait(CFrame.new(-10752.7861, 413.982941, -9367.36133, -0.251949549, 0.0593071356, 0.965921342,0.229262829, 0.973364532, 3.64407897e-05,-0.940191448, 0.221459031, -0.258835673))
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Turtle.QuestTorches.Torch1.CFrame
					wait(0.4)
					tpwait(CFrame.new(-11671.5146, 334.04892, -9474.31836, -0.258849144, -0.170003235, 0.950839698, 6.7949295e-06,  0.984389544, 0.17600356, -0.965917766, 0.0455648303, -0.254807234))
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Turtle.QuestTorches.Torch2.CFrame
					wait(0.4)
					tpwait(CFrame.new(-12131.793, 520.367737, -10655.042, 0.697255135, -0.117451459, 0.707135439, 0.166108221,0.986107528, -6.33299351e-08, -0.697311521,0.117461041, 0.707078218))
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Turtle.QuestTorches.Torch3.CFrame
					wait(0.4)
					tpwait(CFrame.new(-13335.0869, 485.46933, -6985.51953, -0.851645112, 0.268269837, 0.450257748, 0.378633857, 0.90892452,0.174621344, -0.362404674, 0.319198221,-0.875657201))
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =  game:GetService("Workspace").Map.Turtle.QuestTorches.Torch4.CFrame
					wait(0.4)
					tpwait(CFrame.new(-13488.1172, 335.759979, -7923.94971, 0.255801678, 0.039472241, 0.965923309, -0.152541012, 0.988297164, 1.03116035e-05, -0.954618812, -0.147345513, 0.258829176))
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Turtle.QuestTorches.Torch5.CFrame
					wait(1)													

				end
			elseif _G.checkup100 and not game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") and not game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") then
				if game.Workspace.Enemies:FindFirstChild("Deandre [Lv. 1750]") or
					game.Workspace.Enemies:FindFirstChild("Urban [Lv. 1750]") or
					game.Workspace.Enemies:FindFirstChild("Diablo [Lv. 1750]") or
					game.ReplicatedStorage:FindFirstChild("Deandre [Lv. 1750]") or
					game.ReplicatedStorage:FindFirstChild("Urban [Lv. 1750]") or
					game.ReplicatedStorage:FindFirstChild("Diablo [Lv. 1750]") then
					if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
						--local elitequest = CFrame.new(-5420.49219, 314.446045, -2823.07373, -0.370539844, 6.66716105e-08, -0.928816557, 8.17477854e-08, 1, 3.91689809e-08, 0.928816557, -6.14150295e-08, -0.370539844)
						--tp(elitequest)
						--wait(1.1)
						--if  _G.AutoTushita and (elitequest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10  then
							pcall(function()
								game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
								game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
							end)
						--else
						--end
					elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
						CheckQuest()
						pcall(function()
							EquipWeapon(_G.SelectWeapon)
							autobuso()
							pcall(function()
								local v = enemyEliteBoss()
								v.Humanoid.JumpPower = 0
								v.Humanoid.WalkSpeed = 0
								v.HumanoidRootPart.CanCollide = false
								v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
								pcall(function()
									standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
									tp(standup.CFrame * CFrame.new(0, 4, 0))
								end)
							end)
						end)
					end
				elseif _G.ServerHop then
					Hopey()
				end
			elseif game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") or game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") then
				_G.checkup100 = false
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("activateColor", "Winter Sky")
				wait(0.5)
				tpwait(CFrame.new(-5420.16602, 1084.9657, -2666.8208, 0.390717864, 0,0.92051065, 0, 1, 0, -0.92051065, 0, 0.390717864))
				wait(0.5)
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("activateColor", "Pure Red")
				wait(0.5)
				tpwait(CFrame.new(-5414.41357, 309.865753, -2212.45776,0.374604106, -0, -0.92718488, 0, 1, -0,0.92718488, 0, 0.374604106))
				wait(0.5)
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("activateColor", "Snow White")
				wait(0.5)
				tpwait(CFrame.new(-4971.47559, 331.565765, -3720.02954,-0.92051065, 0, 0.390717506, 0, 1, 0,-0.390717506, 0, -0.92051065))
				wait(0.5)
				EquipWeapon("God's Chalice")
				EquipWeapon("God's Chalice")
				EquipWeapon("God's Chalice")
				wait(0.5)
				firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,game:GetService("Workspace").Map["Boat Castle"].Summoner.Detection,0)
			    tpwait(CFrame.new(-5560.27295, 313.915466, -2663.89795, -0.438523829, 2.38801645e-09, 0.898719549,-5.84364612e-10, 1, -2.94226843e-09, -0.898719549, -1.81543469e-09, -0.438523829))
				wait(0.5)
				firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,game:GetService("Workspace").Map["Boat Castle"].Summoner.Detection,0)
			    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-5561.37451, 313.342529, -2663.49487, -0.308039904, -2.99654097e-08, 0.951373458, -2.03540047e-08, 1, 2.49066918e-08,  -0.951373458, -1.16920047e-08, -0.308039904)
				wait(1)
				
			end
        elseif game.Workspace.Enemies:FindFirstChild("Longma [Lv. 2000] [Boss]") or game.ReplicatedStorage:FindFirstChild("Longma [Lv. 2000] [Boss]") then
            pcall(function()
                EquipWeapon(_G.SelectWeapon)
                autobuso()
                pcall(function()
                    local v = lockmon("Longma [Lv. 2000] [Boss]")
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.HumanoidRootPart.CanCollide = false
                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                    pcall(function()
                        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                        tp(standup.CFrame * CFrame.new(0, 4, 0))
                    end)
                end)
            end)
        elseif _G.ServerHop then
            Hopey()
        end
    end

	spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.AutoTushita2 then autoTushita2() end
        end
    end)



    function CheckBoss()
		pcall(function()
        if string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Stone") then
            MsBoss = "Stone [Lv. 1550] [Boss]"
            NaemBoss = "Stone"
            CFrameBoss = CFrame.new(-962.034302, 94.9098206, 6940.4209, -0.0613361038, 1.57424545e-08, 0.998117149, 6.1502277e-08, 1, -1.19927241e-08, -0.998117149, 6.06508905e-08, -0.0613361038)
        elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Kilo Admiral") then
            MsBoss = "Kilo Admiral [Lv. 1750] [Boss]"
            NaemBoss = "Kilo Admiral"
            CFrameBoss = CFrame.new(2696.65332, 423.560394, -7160.86475, -0.532320917, -3.35008536e-08, 0.846542656, 6.51528254e-08, 1, 8.0542975e-08,-0.846542656, 9.80293535e-08, -0.532320917)
        elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Beautiful Pirate") then
            MsBoss = "Beautiful Pirate [Lv. 1950] [Boss]"
            NaemBoss = "Beautiful Pirate"
            CFrameBoss = CFrame.new(5314.80518, 22.5622349, -116.379112, -0.996996403, -8.37989873e-08, 0.077447705,-8.14817867e-08, 1, 3.30795729e-08,-0.077447705, 2.66696372e-08, -0.996996403)
        elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Captain Elephant") then
            MsBoss = "Captain Elephant [Lv. 1875] [Boss]"
            NaemBoss = "Captain Elephant"
            CFrameBoss = CFrame.new(-13567.4727, 361.712708, -8418.27441,0.128429428, -1.91476612e-08, -0.99171865,-2.53692161e-08, 1, -2.25929142e-08,0.99171865, 2.806072e-08, 0.128429428)
        elseif string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Island Empress") then
            MsBoss = "Island Empress [Lv. 1675] [Boss]"
            NaemBoss = "Island Empress"
            CFrameBoss = CFrame.new(5539.03076, 665.901917, 202.038727, 0.13593708, 0.124892697, 0.982813835,-0.986433208, -0.0750949457, 0.145980507)
        end
	end)
    end

	
    function enemyrainbow()
        CheckBoss()
        if game.Workspace.Enemies:FindFirstChild(MsBoss) then
            local mobs = game.Workspace.Enemies:GetChildren()
            for i = 1, #mobs do
                local v = mobs[i]
                if v.Name == MsBoss and v:IsA("Model") and
                    v:FindFirstChild("Humanoid") and
                    v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then 
                        return v 
                end
            end
        elseif not game.Workspace.Enemies:FindFirstChild(MsBoss) then
            --standup.CFrame = game.ReplicatedStorage:FindFirstChild(MsBoss).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            --tp(standup.CFrame * CFrame.new(0, 4, 0))
			local subname = string.gsub(MsBoss, "%p", "")
			local realname = string.gsub(subname, "%s+Lv %d+.+", "")
			if game.ReplicatedStorage:FindFirstChild(MsBoss) then
				standup.CFrame = game.ReplicatedStorage:FindFirstChild(MsBoss).HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(MsBoss) then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[MsBoss].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild(realname) then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns[realname].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif _G.ServerHop then
				Hopey()
			end
        end
        
    end



	
    function autorainbow()
        if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
            --local quest = CFrame.new(-11891.8701, 930.576782, -8760.78027, 0.289478302, -1.97128558e-09, 0.957184553, 4.99496755e-09, 1,  5.48850076e-10, -0.957184553, 4.62222571e-09,0.289478302)
                   -- tp(CFrame.new(-11891.8701, 930.576782, -8760.78027, 0.289478302, -1.97128558e-09, 0.957184553, 4.99496755e-09, 1,  5.48850076e-10, -0.957184553, 4.62222571e-09,0.289478302))
                    wait(1.1)
                   -- if  _G.AutoRainbow and (quest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10  then
                        pcall(function()
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
                            local args = {[1] = "HornedMan", [2] = "Bet"}
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                        end)
                    --else
                    --end
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
            CheckBoss()
            if string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, NaemBoss) then
                pcall(function()
                    EquipWeapon(_G.SelectWeapon)
                    autobuso()
                    local v = enemyrainbow()
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.HumanoidRootPart.CanCollide = false
                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                    standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                    tp(standup.CFrame * CFrame.new(0, 4, 0))
                end)
            else
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
            end
        end
    end

    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.AutoRainbow then autorainbow() end
        end
    end)
    
    function autoMusketeer()
        if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CitizenQuestProgress", "Citizen") == 0 then
            if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
                local quest = CFrame.new(-12443.2246, 332.403961, -7673.03906, 0.994821548, -8.22384791e-08, 0.101637013, 7.49311511e-08, 1, 7.57140626e-08, -0.101637013, -6.77062033e-08,  0.994821548)
                    tp(quest)
                    wait(1.1)
                    if  _G.AutoMusketeer and (quest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10  then
                        pcall(function()
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", "CitizenQuest", 1)
                        end)
                    else
                    end
            elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
                pcall(function()
                    EquipWeapon(_G.SelectWeapon)
                    autobuso()
                    pcall(function()
                        local v = lockmon("Forest Pirate [Lv. 1825]")
                        _G.brigmob = true
                        _G.PosMon = v.HumanoidRootPart.CFrame
                        v.Humanoid.JumpPower = 0
                        v.Humanoid.WalkSpeed = 0
                        v.HumanoidRootPart.CanCollide = false
                        v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                        pcall(function()
                            standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                            tp(standup.CFrame * CFrame.new(0, 4, 0))
                        end)
                        _G.PosMon = v.HumanoidRootPart.CFrame
                        _G.brigmob = true
                    end)
                end)
            end
        elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CitizenQuestProgress", "Citizen") == 1 then
            if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
                local quest = CFrame.new(-12443.2246, 332.403961, -7673.03906, 0.994821548, -8.22384791e-08, 0.101637013, 7.49311511e-08, 1, 7.57140626e-08, -0.101637013, -6.77062033e-08,  0.994821548)
                tp(quest)
                wait(1.1)
                if  _G.AutoMusketeer and (quest.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10  then
                    pcall(function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", "CitizenQuest", 1)
                    end)
                else
                end
            elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
                pcall(function()
                    EquipWeapon(_G.SelectWeapon)
                    autobuso()
                    pcall(function()
                        local v = lockmon("Captain Elephant [Lv. 1875] [Boss]")
                        _G.brigmob = true
                        _G.PosMon = v.HumanoidRootPart.CFrame
                        v.Humanoid.JumpPower = 0
                        v.Humanoid.WalkSpeed = 0
                        v.HumanoidRootPart.CanCollide = false
                        v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                        pcall(function()
                            standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                            tp(standup.CFrame * CFrame.new(0, 4, 0))
                        end)
                        _G.PosMon = v.HumanoidRootPart.CFrame
                        _G.brigmob = true
                    end)

                end)
            end
        elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CitizenQuestProgress", "Citizen") == 2 then
            tpwait(CFrame.new(-12514.0215, 335.114197, -9868.47559, 0.99031502,-2.50493191e-08, 0.13883844, 2.80927761e-08, 1,-1.99611758e-08, -0.13883844, 2.36682087e-08, 0.99031502))
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-12514.0215, 335.114197, -9868.47559, 0.99031502, -2.50493191e-08, 0.13883844,2.80927761e-08, 1, -1.99611758e-08,-0.13883844, 2.36682087e-08, 0.99031502)
            wait(0.5)
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-12514.0215, 335.114197, -9868.47559, 0.99031502, -2.50493191e-08, 0.13883844,2.80927761e-08, 1, -1.99611758e-08,-0.13883844, 2.36682087e-08, 0.99031502)
            wait(0.5)
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-12514.0215, 335.114197, -9868.47559, 0.99031502, -2.50493191e-08, 0.13883844,2.80927761e-08, 1, -1.99611758e-08,-0.13883844, 2.36682087e-08, 0.99031502)
            wait(0.5)
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-12514.0215, 335.114197, -9868.47559, 0.99031502, -2.50493191e-08, 0.13883844,2.80927761e-08, 1, -1.99611758e-08,-0.13883844, 2.36682087e-08, 0.99031502)
        elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CitizenQuestProgress", "Citizen") == 3 then
            tp(CFrame.new(-12554.9443, 337.194092, -7501.44727, 0.906377554,4.23948272e-08, -0.422468632, -1.89128269e-08, 1,5.97740595e-08, 0.422468632, -4.61877896e-08,0.906377554))
            _G.AutoMusketeer = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Notification",
                Text = "เควส Musketeer hat เสร็จเรียบร้อบ",
                Duration = math.huge,
                Button1 = "Yes",
            })
        end
    end

    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.AutoMusketeer then autoMusketeer() end
        end
    end)

    
local Label1 = StatsSection:AddLabel({Name = ""})
StatsSection:AddToggle({
	Flag = "Stat_melee",
	Name = " + Melee",
	Value = _G.AutoStatMelee,
	Callback = function(t, o)
		_G.AutoStatMelee = t
		savenaja()
	end
})

StatsSection:AddToggle({
	Name = " + Defense",
	Flag = "Stat_defense",
	Value = _G.AutoStatDefense,
	Callback = function(t, o)
		_G.AutoStatDefense = t
		savenaja()
	end
})

StatsSection:AddToggle({
	Name = " + Sword",
	Flag = "Stat_sword",
	Value = _G.AutoStatSword,
	Callback = function(t, o)
		_G.AutoStatSword = t
		savenaja()
	end
})

StatsSection:AddToggle({
	Name = " + Gun",
	Flag = "stat_gun",
	Value = _G.AutoStatGun,
	Callback = function(t, o)
		_G.AutoStatGun = t
		savenaja()
	end
})

StatsSection:AddToggle({
	Name = " + Fruit",
	Flag = "Stat_fruit",
	Value = _G.AutoStatFruit,
	Callback = function(t, o)
		_G.AutoStatFruit = t
		savenaja()
	end
})

StatsSection:AddToggle({
	Name = " Set 1 = Melee, Defense",
	Flag = "Stat_set1",
	Value = _G.AutoStatSet1,
	Callback = function(t, o)
		_G.AutoStatSet1 = t
		savenaja()
	end
})

StatsSection:AddToggle({
	Name = " Set 2 = Melee, Defense, Sword",
	Flag = "Stat_set2",
	Value = _G.AutoStatSet2,
	Callback = function(t, o)
		_G.AutoStatSet2 = t
		savenaja()
	end
})

StatsSection:AddToggle({
	Name = " Set 3 = Melee, Defense, Gun",
	Flag = "Stat_set3",
	Value = _G.AutoStatSet3,
	Callback = function(t, o)
		_G.AutoStatSet3 = t
		savenaja()
	end
})

StatsSection:AddToggle({
	Name = " Set 4 = Melee, Defense, Fruit",
	Flag = "Stat_set4",
	Value = _G.AutoStatSet4,
	Callback = function(t, o)
		_G.AutoStatSet4 = t
		savenaja()
	end
})
_G.statlevel = 2399
spawn(function()
	while wait(.1) do
		if _G.AutoStatSet1 or _G.AutoStatSet2 or _G.AutoStatSet3 or
			_G.AutoStatSet4 then
			if _G.AutoStatSet1 and
				game.Players.localPlayer.Data.Points.Value > 0 and
				game:GetService("Players").localPlayer.Data.Stats.Melee.Level.Value <= _G.statlevel then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Melee", 1)
			elseif _G.AutoStatSet1 and
				game.Players.localPlayer.Data.Points.Value > 0 and
				game:GetService("Players").localPlayer.Data.Stats.Defense.Level.Value <= _G.statlevel then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Defense", 1)
			end

			if _G.AutoStatSet2 and
				game.Players.localPlayer.Data.Points.Value > 0 and
				game:GetService("Players").localPlayer.Data.Stats.Melee.Level.Value <= _G.statlevel then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Melee", 1)
			elseif _G.AutoStatSet2 and
				game.Players.localPlayer.Data.Points.Value > 0 and
				game:GetService("Players").localPlayer.Data.Stats.Defense.Level.Value <= _G.statlevel then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Defense", 1)
			elseif _G.AutoStatSet2 and
				game.Players.localPlayer.Data.Points.Value > 0 and
				game:GetService("Players").localPlayer.Data.Stats.Sword.Level.Value <= _G.statlevel then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Sword", 1)
			end

			if _G.AutoStatSet3 and
				game.Players.localPlayer.Data.Points.Value > 0 and
				game:GetService("Players").localPlayer.Data.Stats.Melee.Level.Value <= _G.statlevel then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Melee", 1)
			elseif _G.AutoStatSet3 and
				game.Players.localPlayer.Data.Points.Value > 0 and
				game:GetService("Players").localPlayer.Data.Stats.Defense.Level.Value <= _G.statlevel then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Defense", 1)
			elseif _G.AutoStatSet3 and
				game.Players.localPlayer.Data.Points.Value > 0 and
				game:GetService("Players").localPlayer.Data.Stats.Gun.Level.Value <= _G.statlevel then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Gun", 1)
			end

			if _G.AutoStatSet4 and
				game.Players.localPlayer.Data.Points.Value > 0 and
				game:GetService("Players").localPlayer.Data.Stats.Melee.Level.Value <= _G.statlevel then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Melee", 1)
			elseif _G.AutoStatSet4 and
				game.Players.localPlayer.Data.Points.Value > 0 and
				game:GetService("Players").localPlayer.Data.Stats.Defense.Level.Value <= _G.statlevel then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Defense", 1)
			elseif _G.AutoStatSet4 and
				game.Players.localPlayer.Data.Points.Value > 0 and
				game:GetService("Players").localPlayer.Data.Stats["Demon Fruit"].Level.Value <= _G.statlevel then
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Demon Fruit", 1)
			end
			Label1:Set("Point : " ..game.Players.localPlayer.Data.Points.Value)
		end
	end
end)

spawn(function()
	while wait(.1) do
		if _G.AutoStatMelee and game.Players.localPlayer.Data.Points.Value > 0 and
			game:GetService("Players").localPlayer.Data.Stats.Melee.Level.Value <= _G.statlevel then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Melee", 1)
		end
		if _G.AutoStatDefense and game.Players.localPlayer.Data.Points.Value > 0 and
			game:GetService("Players").localPlayer.Data.Stats.Defense.Level.Value <= _G.statlevel then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Defense", 1)
		end
		if _G.AutoStatSword and game.Players.localPlayer.Data.Points.Value > 0 and
			game:GetService("Players").localPlayer.Data.Stats.Sword.Level.Value <= _G.statlevel then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Sword", 1)
		end
		if _G.AutoStatGun and game.Players.localPlayer.Data.Points.Value > 0 and
			game:GetService("Players").localPlayer.Data.Stats.Gun.Level.Value <= _G.statlevel then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Gun", 1)
		end
		if _G.AutoStatFruit and game.Players.localPlayer.Data.Points.Value > 0 and
			game:GetService("Players").localPlayer.Data.Stats["Demon Fruit"].Level.Value <= _G.statlevel then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AddPoint", "Demon Fruit", 1)
		end
		Label1:Set("Point : " .. game.Players.localPlayer.Data.Points.Value)
	end
end)




AddonSection:AddTextbox({
	Name = "Account Manager port",
	Flag = "Account_port",
	Value = 7963,
	Min = 0,
	Placeholder = "0",
	Type = "number",
	Callback = function(t,o)
		_G.Accport = t
	end
})
AddonSection:AddButton({
	Name = 'Set description', 
	Callback = function()
		pcall(function()
			local request = syn and syn.request or http and http.request or http_request or fluxus and fluxus.request or getgenv().request or request
			local getservice = game.GetService
			local httpservice = getservice(game, "HttpService")
			local function http_request_POST(url, headers)
				return request({
					Url = url,
					Method = "POST",
					Headers = headers or nil
				}).Body
			end
			local beli = game:GetService("Players")["LocalPlayer"].Data.Beli.Value
			local level = game.Players.localPlayer.Data.Level.Value
			local name = Game.Players.LocalPlayer.Name
			local fragment = game:GetService("Players")["LocalPlayer"].Data.Fragments.Value
			local allweapon = {}
			if tonumber(game.PlaceId) == 2753915549 then
				world = "Sea 1"
			elseif tonumber(game.PlaceId) == 4442272183 then
				world = "Sea 2"
			elseif tonumber(game.PlaceId) == 7449423635 then
				world = "Sea 3"
			end
			pcall(function()
				for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
					if v:IsA("Tool") then
						
						if v:IsA("Tool") and v.ToolTip == "Melee" then
							table.insert(allweapon, v.Name.." Mas. "..v.Level.Value)
						end
						if v:IsA("Tool") and v.ToolTip == "Sword" then
							table.insert(allweapon, v.Name.." Mas. "..v.Level.Value)
						end
						if v:IsA("Tool") and v.ToolTip == "Blox Fruit" then
							table.insert(allweapon, v.Name.." Mas. "..v.Level.Value)
						end
						if v:IsA("Tool") and v.ToolTip == "Gun" then
							table.insert(allweapon, v.Name.." Mas. "..v.Level.Value)
						end
					end
				end
			
				for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
					if v:IsA("Tool") then
						if v:IsA("Tool") and v.ToolTip == "Melee" then
							table.insert(allweapon, v.Name.." Mas. "..v.Level.Value)
						end
						if v:IsA("Tool") and v.ToolTip == "Sword" then
							table.insert(allweapon, v.Name.." Mas. "..v.Level.Value)
						end
						if v:IsA("Tool") and v.ToolTip == "Blox Fruit" then
							table.insert(allweapon, v.Name.." Mas. "..v.Level.Value)
						end
						if v:IsA("Tool") and v.ToolTip == "Gun" then
							table.insert(allweapon, v.Name.." Mas. "..v.Level.Value)
						end
					end
				end
			end)
			local url = "http://localhost:".._G.Accport.."/SetDescription?Account="..name    
			local headers = {["content-type"] = "text/plain"}
			local data = table.concat(allweapon, " , ").." beli. "..beli.." fragment "..fragment
			local request_payload = {Url=url, Body = data, Method="POST", Headers=headers}
			request(request_payload)


			local url = "http://localhost:".._G.Accport.."/SetAlias?Account="..name    
			local headers = {["content-type"] = "text/plain"}
			local data = world.." | Lv. "..level
			local request_payload = {Url=url, Body = data, Method="POST", Headers=headers}
			request(request_payload)
		end)
	end
})

AddonSection:AddLabel("")

AddonSection:AddTextbox({
	Name = "Google Sheet Api link",
	Flag = "sheet_api",
	Value = "link",
	Placeholder = "link",
	Callback = function(t,o)
		_G.sheetapi = t
		savenaja()
	end
})


AddonSection:AddButton({
	Name = 'Set description', 
	Callback = function()
		pcall(function()
			local request = syn and syn.request or http and http.request or http_request or fluxus and fluxus.request or getgenv().request or request
			local getservice = game.GetService
			local httpservice = getservice(game, "HttpService")
			local function http_request_POST(url, headers)
				return request({
					Url = url,
					Method = "POST",
					Headers = headers or nil
				}).Body
			end
			local beli = game:GetService("Players")["LocalPlayer"].Data.Beli.Value
			local level = game.Players.localPlayer.Data.Level.Value
			local name = Game.Players.LocalPlayer.Name
			local fragment = game:GetService("Players")["LocalPlayer"].Data.Fragments.Value
			local allweapon = {}
			local info = market:GetProductInfo(game.PlaceId, Enum.InfoType.Asset)

			local allfruitme = {}

			for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
				if type(v) == "table" then
					if v.Type == "Blox Fruit" then
						table.insert(allfruitme, v.Name)
					end
				end
			end


			local allinvenme = {}
			for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
				if type(v) == "table" then
					if v.Type == "Sword" or v.Type == "Wear" then
						table.insert(allinvenme, v.Name)
					end
				end
			end
			
			local allmeleeme = {}
			if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectro",true) == 1 then
				table.insert(allmeleeme, "Electro")
			end
	
			if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg",true) == 1 then
				table.insert(allmeleeme, "Black Leg")
			end
	
			if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyFishmanKarate",true) == 1 then
				table.insert(allmeleeme, "FishmanKarate")
			end
	
			if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "DragonClaw", "1") == 1 then
				table.insert(allmeleeme, "Dragon Claw")
			end
	
			if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman",true) == 1 then
				table.insert(allmeleeme, "Superhuman")
			end
	
			if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate",true) == 1 then
				table.insert(allmeleeme, "SharkmanKarate")
			end
			
			if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDeathStep",true) == 1 then
				table.insert(allmeleeme, "Death Step")
			end
	
			if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectricClaw",true) == 1 then
				table.insert(allmeleeme, "Electric Claw")
			end
			
			if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDragonTalon",true) == 1 then
				table.insert(allmeleeme, "Dragon Talon")
			end
			
			if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyGodhuman",true) == 1 then
				table.insert(allmeleeme, "God human")

			end

			local url2 = _G.sheetapi.."?action=addUser"
			local headers2 = {["content-type"] = "application/json"}
			local data2 = {
				name = name,
				level = comma_value(level),
				world = info.Name,
				beli = comma_value(beli).."/"..comma_value(fragment),
				inventory = ""..table.concat(allinvenme, ", ").."",
				inventory2 = ""..table.concat(allfruitme, ", ").."",
				inventory3 = ""..table.concat(allmeleeme, ", ")..""
				
			}
			local request_payload = {Url=url2, Body = httpservice:JSONEncode(data2), Method="POST", Headers=headers2}
			request(request_payload)
		end)
	end
})

LockSection:AddToggle({
	Name = "Lock Level",
	Flag = "Lock_level",
	Value = _G.LockLevel,
	Callback = function(t, o)
		_G.LockLevel = t
		savenaja()
	end
})
LockSection:AddTextbox({
	Name = "Input Level Value",
	Flag = "Level_value",
	Value = _G.LockLevelValue,
	Min = 0,
	Placeholder = "0",
	Type = "number",
	Callback = function(t,o)
		_G.LockLevelValue = t
		savenaja()
	end
})

spawn(function()
	while wait(.1) do
		if _G.LockLevel then
			local lvlop = game.Players.localPlayer.Data.Level.Value
			pcall(function()
				if lvlop >= tonumber(_G.LockLevelValue) and tonumber(_G.LockLevelValue) ~= 0  then
					game.Players.localPlayer:Kick("\n Level Select Is : " .. lvlop)
				end
			end)
		end
	end
end)

LockSection:AddToggle({
	Name = "Lock Beli",
	Flag = "Lock_beli",
	Value = _G.LockBeli,
	Callback = function(t, o)
		_G.LockBeli = t
		savenaja()
	end
})
LockSection:AddTextbox({
	Name = "Input Beli Value",
	Flag = "Beli_value",
	Value = _G.LockBeliValue,
	Min = 0,
	Placeholder = "0",
	Type = "number",
	Callback = function(t,o)
		_G.LockBeliValue = t
		savenaja()
	end
})

spawn(function()
	while wait(.1) do
		if _G.LockBeli then
			local lvlop = game:GetService("Players")["LocalPlayer"].Data.Beli.Value
			pcall(function()
				if lvlop >= tonumber(_G.LockBeliValue) and tonumber(_G.LockBeliValue) ~= 0 then
					game.Players.localPlayer:Kick("\n Beli Select Is : " .. lvlop)
				end
			end)
		end
	end
end)

LockSection:AddToggle({
	Name = "Lock Fragments",
	Flag = "Lock_fragmemt",
	Value = _G.LockFragments,
	Callback = function(t, o)
		_G.LockFragments = t
		savenaja()
	end
})
LockSection:AddTextbox({
	Name = "Input Fragments Value",
	Flag = "Fragment_value",
	Value = _G.LockFragmentsValue,
	Min = 0,
	Placeholder = "0",
	Type = "number",
	Callback = function(t,o)
		_G.LockFragmentsValue = t
		savenaja()
	end
})

spawn(function()
	while wait(.1) do
		if _G.LockFragments then
			pcall(function()
				local lvlop = game:GetService("Players")["LocalPlayer"].Data.Fragments.Value
				if lvlop >= tonumber(_G.LockFragmentsValue) and tonumber(_G.LockFragmentsValue) ~= 0 then
					game.Players.localPlayer:Kick("\n Fragments Select Is : " .. lvlop)
				end
			end)
		end
	end
end)

LockSection:AddToggle({
	Name = "Lock Bountys",
	Flag = "Lock_bounty",
	Value = _G.LockBounty,
	Callback = function(t, o)
		_G.LockBounty = t
		savenaja()
	end
})
LockSection:AddTextbox({
	Name = "Input Bountys Value",
	Flag = "Bounty_value",
	Value = _G.LockBountyValue,
	Min = 0,
	Placeholder = "0",
	Type = "number",
	Callback = function(t,o)
		_G.LockBountyValue = t
		savenaja()
	end
})

spawn(function()
	while wait(.1) do
		if _G.LockBounty then
			pcall(function()
				local lvlop = game:GetService("Players").LocalPlayer.leaderstats["Bounty/Honor"].Value
				if lvlop >= tonumber(_G.LockBountyValue) and tonumber(_G.LockBountyValue) ~= 0 then
					game.Players.localPlayer:Kick(
						"\n  Bountys Select Is : " .. lvlop)
				end
			end)
		end
	end
end)

LockSection:AddToggle({
	Name = "Lock Bones",
	Flag = "Lock_bone",
	Value = _G.LockBones,
	Callback = function(t, o)
		_G.LockBones = t
		savenaja()
	end
})
LockSection:AddTextbox({
	Name = "Input Bones Value",
	Flag = "Bone_value",
	Value = _G.LockBonesValue,
	Min = 0,
	Placeholder = "0",
	Type = "number",
	Callback = function(t,o)
		_G.LockBonesValue = t
		savenaja()
	end
})

spawn(function()
	while wait(.1) do
		if _G.LockBones then
			pcall(function()
				local lvlop =
					game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("Bones", "Check")
				if lvlop >= tonumber(_G.LockBonesValue) and tonumber(_G.LockBonesValue) ~= 0 then
					game.Players.localPlayer:Kick(
						"\n  Bones Select Is : " .. lvlop)
				end
			end)
		end
	end
end)

LockSection:AddToggle({
	Name = "Level Redeem All Code",
	Flag = "Lock_redeem",
	Value = _G.LockRedeemCode,
	Callback = function(t, o)
		_G.LockRedeemCode = t
		savenaja()
	end
})
LockSection:AddTextbox({
	Name = "Input Level Value",
	Flag = "Redeem_level",
	Value = _G.LockRedeemLv,
	Min = 0,
	Placeholder = "0",
	Type = "number",
	Callback = function(t,o)
		_G.LockRedeemLv = t
		savenaja()
	end
})

spawn(function()
	while wait(.1) do
		if _G.LockRedeemCode then
			pcall(function()
				local lvlop = game.Players.localPlayer.Data.Level.Value
				if lvlop >= tonumber(_G.LockRedeemLv) and tonumber(_G.LockRedeemLv) ~= 0 then
					for i = 1, #allcode do
						game.ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Redeem"):InvokeServer(allcode[i]);
					end
					wait()
					_G.LockRedeemCode = false
				end
			end)
		end
	end
end)




CombatSection:AddToggle({
	Name = "Kill Player Select",
	Callback = function(t, o)
		if t then
            pk =  t
        else
            pk =  t
            pcall(function()
                _G.tweennew:Cancel()
            end)
        end
	end
})

CombatSection:AddToggle({
	Name = "Kill All Player + Tween",
	Flag = "Kill_all",
	Value =  _G.CombatAll,
	Callback = function(t, o)
		if t then
            _G.CombatAll = t
            _G.AimbotGun = t
            _G.ServerHop = t
            _G.PlayerESP = t
            _G.Immortal = t
            _G.PVPDistance = 25
        else
            _G.AimbotGun = t
            _G.ServerHop = t
            _G.PlayerESP = t
            _G.Immortal = t
            _G.CombatAll = t
            pcall(function()
                _G.tweennew:Cancel()
            end)        
        end
		savenaja()
	end
})

PlayerName = {}
KillPlayer = ""
KillPlayer1 = ""

CombatSection:AddToggle({
	Name = "Spectate Player",
	Callback = function(t, o)
		pcall(function()
            Sp = t
            local plr1 = game.Players.LocalPlayer.Character.Humanoid
            local plr2 = game.Players:FindFirstChild(KillPlayer)
            repeat
                wait(.1)
                game.Workspace.Camera.CameraSubject = plr2.Character.Humanoid
            until Sp == false
            game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
        end)
	end
})

CombatSection:AddToggle({
	Name = "ESP Player",
	Flag = "ESP_player",
	Value = _G.PlayerESP,
	Callback = function(t, o)
		_G.PlayerESP = t
		savenaja()
	end
})

CombatSection:AddLabel("")
CombatSection:AddDropdown({
    Name = "Select Weapon",
	Flag = "Pvp_weapon",
    List  = function()
        PlayerName = {}
		table.insert(PlayerName,"")
		for i, v in pairs(game.Players:GetChildren()) do
			table.insert(PlayerName,v.Name)
		end
		
        return PlayerName
    end,
    Callback = function(t, o)
		KillPlayer  = t
		savenaja()
    end
})

CombatSection:AddButton({
	Name = 'Tween To Player', 
	Callback = function()
		local plr1 = game.Players.LocalPlayer.Character
		local plr2 = game.Players:FindFirstChild(KillPlayer)
		tp(plr2.Character.HumanoidRootPart.CFrame)
	end
})



AimSection:AddDropdown({
    Name = "Select Weapon",
	Flag = "Pvp_weapon",
    List  = function()
        weapon = {}
		table.insert(weapon, '')
        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") then
                table.insert(weapon, v.Name)
            end
        end
        
        for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if v:IsA("Tool") then
                table.insert(weapon, v.Name)
            end
        end
		
        return weapon
    end,
    Callback = function(t, o)
        _G.SelectWeaponPvP = t
		savenaja()
	
    end
})

AimSection:AddToggle({
	Name = "Aimbot Gun (Lock)",
	Flag = "Aimbot_gun",
	Value = _G.AimbotGun,
	Callback = function(t, o)
		_G.AimbotGun = t
		savenaja()
	end
})

AimSection:AddToggle({
	Name = "Aimbot Gun (Random)",
	Flag = "Aimbot_gunran",
	Callback = function(t, o)
		_G.AimbotGunran = t
		savenaja()
	end
})

AimSection:AddToggle({
	Name = "Aimbot Skill (Lock)",
	Flag = "Aimbot_skill",
	Callback = function(t, o)
		AimbotSkill = t
		savenaja()
	end
})

AimSection:AddToggle({
	Name = "Aimbot Skill (Random)",
	Flag = "Aimbot_skillran",
	Callback = function(t, o)
		AimbotSkill2 = t
		savenaja()
	end
})

AimSection:AddToggle({
	Name = "Ctrl + Click = TP",
	Callback = function(t, o)
		tpa = t
	end
})

AimSection:AddToggle({
	Name = "Ctrl + Click = Tween",
	Callback = function(t, o)
		tw = t
	end
})

local Plr = game:GetService("Players").LocalPlayer
    local Mouse = Plr:GetMouse()
    Mouse.Button1Down:connect(function()
        if not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) then
            return
        end
        if not Mouse.Target then return end
        if tpa then 
            Plr.Character:MoveTo(Mouse.Hit.p)
        elseif tw then
            tp(Mouse.Hit.p)
        end
    end)

	AimSection:AddSlider({
		Name = "Distance",
		Flag = "Pvp_distance",
		Value = 25,
		Min = 0,
		Max = 100,
		Textbox = true,
		Callback = function(t, o)
			Distantnum = t
			savenaja()
		end
	})
	spawn(function()
        while wait(0.2) do
            if AimbotSkill or AimbotSkill2 then
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                        if v:IsA("Tool") then
                            bbF = v.Name
                        end
                    end

                end)
            end
        end
    end)

	game:GetService("RunService").Heartbeat:Connect(function()
        if AimbotSkill then
			pcall(function()
				for i, v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
					if v.Name == KillPlayer then
						pcall(function()
						
							lek1 = v.HumanoidRootPart.Position
						end)

					end
				end
			end)
        elseif AimbotSkill2 then
			pcall(function()
				for i, v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
					if v.Name ~= game.Players.LocalPlayer.Character and
						(v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 700 then
						pcall(function()
							repeat wait()
							lek2 = v.HumanoidRootPart.Position
							until not AimbotSkill2 or (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude > 700
						end)
					end
				end
			end)
        end
    end)


    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.AimbotGunran then
                for i, v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
                    if v.Name ~= game.Players.LocalPlayer.Character and (game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude <= 200 then
                        pcall(function()
                            autobuso()
                            KillPlayer = v.Name
                        end)
                    end
                end
            end
        end
    end)

    local lp1 = game:GetService('Players').LocalPlayer
    local mouse1 = lp1:GetMouse()
    mouse1.Button1Down:Connect(function()
        pcall(function()
            if _G.AimbotGunran and
                game.Players.LocalPlayer.Character:FindFirstChild(_G.SelectWeaponPvP).RemoteFunctionShoot then
                     Px = game:GetService("Players"):FindFirstChild(KillPlayer).Character.HumanoidRootPart.CFrame.X
                     Py = game:GetService("Players"):FindFirstChild(KillPlayer).Character.HumanoidRootPart.CFrame.Y
                     Pz = game:GetService("Players"):FindFirstChild(KillPlayer).Character.HumanoidRootPart.CFrame.Z
                game:GetService("Players").LocalPlayer.Character[_G.SelectWeaponPvP].RemoteFunctionShoot:InvokeServer(Vector3.new(Px, Py, Pz),game:GetService("Players"):FindFirstChild(KillPlayer).Character.HumanoidRootPart)
            end
        end)
    end)

    function CombatPlayer()
        pcall(function()
            for i, v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
                if v.Name == KillPlayer and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                    repeat
                        wait()
                        KillPlayer = v.Name
                        EquipWeapon(_G.SelectWeaponPvP)
                        autobuso()
                        standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Distantnum, 2)
                        tp(standup.CFrame * CFrame.new(0, 4, 0))
						game:GetService'VirtualUser':CaptureController()
						game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
		
                        v.HumanoidRootPart.Size = Vector3.new(50, 50, 50)
                        Px = v.HumanoidRootPart.CFrame.X
                        Py = v.HumanoidRootPart.CFrame.Y
                        Pz = v.HumanoidRootPart.CFrame.Z
                    until v.Humanoid.Health <= 0 or pk == false
                    if newworld then
                        -- game.Players.localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(266.227783,1.39509034, 1857.00732)
                    elseif sea3world then
                        --   game.Players.localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-12554.9443, 337.194092, -7501.44727, 0.906377554, 4.23948272e-08, -0.422468632, -1.89128269e-08, 1, 5.97740595e-08, 0.422468632, -4.61877896e-08, 0.906377554)
                    end
                    pk = false
                end
            end
        end)
    end

    local oldbouty = game:GetService("Players").LocalPlayer.leaderstats["Bounty/Honor"].Value
    Next = ""
    fffff = true

    if _G.CombatAll and _G.ServerHop then
        _G.GodPVP = true
        _G.onNext = false
    end

    godkub = nil

    function CombatPlayerall()
        pcall(function()
            for i, v in next,game:GetService("Workspace").Characters:GetChildren() do
                if  (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 20000 and
                    game:GetService("Players")[v.Name].Data.Level.Value >= 1200 and
                    v.Name ~= game.Players.LocalPlayer.Name and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                    hpmun = v.Humanoid.Health
                    _G.onNext = false
					fuitac = false
                    repeat
                        game:GetService("RunService").RenderStepped:Wait()
                        pcall(function()
                            yudsa = "true"
                            KillPlayer = v.Name

                            pcall(function()
                                EquipWeapon(_G.SelectWeaponPvP)
                                autobuso()
                                 
                                    if (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 100 then
                                        _G.onNext = true
										fuitac = true
                                    end
									
										standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Distantnum, 2)
										tp(standup.CFrame * CFrame.new(0, 4, 0))
	
									
									PVPMasteryDevilFruit = v.HumanoidRootPart.Position
                                
                            end)

                            v.HumanoidRootPart.Size = Vector3.new(50, 50, 50)
							--EquipWeapon("Superhuman")
							--game:GetService'VirtualUser':CaptureController()
							--game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
			
                            Px = v.HumanoidRootPart.CFrame.X
                            Py = v.HumanoidRootPart.CFrame.Y
                            Pz = v.HumanoidRootPart.CFrame.Z
                            godkub = true
                            if _G.ServerHop and
                                game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftAlt) then
                                if newworld then
                                    yudsa = ""
                                    Hopey()
                                    tp(CFrame.new(266.227783,1.39509034,1857.00732))
                                    Hopey()
                                elseif sea3world then
                                    yudsa = ""
                                    Hopey()
                                    tp(CFrame.new(-12554.9443,337.194092,-7501.44727,0.906377554,4.23948272e-08,-0.422468632,-1.89128269e-08,1,5.97740595e-08,0.422468632,-4.61877896e-08,0.906377554))
                                    Hopey()
                                end
                            end
                        end)
                    until  not v.Parent or Next ==
                        true or v.Humanoid.Health <= 0 or _G.CombatAll == false or game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl)
                    Next = false
                    godkub = false
                    _G.onNext = false
                    game:GetService("Players").LocalPlayer.PlayerGui.Main.boty.Text = "ค่าหัวที่ได้รับ " ..game:GetService("Players").LocalPlayer.leaderstats["Bounty/Honor"].Value - oldbouty
                    sumbouty = game:GetService("Players").LocalPlayer.leaderstats["Bounty/Honor"].Value - oldbouty
                    sakill1 = false
                    v.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                end
            end
        end)
    end

	game:GetService("RunService").Heartbeat:Connect(function()
		pcall(function()
			if _G.CombatAll and fuitac and
				game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[_G.SelectWeaponPvP].Z.Title.TextColor3 == Color3.fromRGB(255, 255, 255) and 
				tonumber(game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[_G.SelectWeaponPvP].Z.Cooldown.AbsoluteSize.X) == 0 then
				--game:GetService("Players").LocalPlayer.Character[game.Players.LocalPlayer.Data.DevilFruit.Value].RemoteFunction:InvokeServer("Z",Vector3.new(0,0,0))
				local vim = game:service'VirtualInputManager'
				vim:SendKeyEvent(true, "Z", false, game)
				wait()
				vim:SendKeyEvent(false, "Z", false, game)
			elseif _G.CombatAll and fuitac and
				game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[_G.SelectWeaponPvP].X.Title.TextColor3 == Color3.fromRGB(255, 255, 255) and 
				tonumber(game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[_G.SelectWeaponPvP].X.Cooldown.AbsoluteSize.X) == 0 then
				--game:GetService("Players").LocalPlayer.Character[game.Players.LocalPlayer.Data.DevilFruit.Value].RemoteFunction:InvokeServer("X",Vector3.new(0,0,0))
				local vim = game:service'VirtualInputManager'
				vim:SendKeyEvent(true, "X", false, game)
				wait()
				vim:SendKeyEvent(false, "X", false, game)
			elseif _G.CombatAll and fuitac and
				game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[_G.SelectWeaponPvP].C.Title.TextColor3 == Color3.fromRGB(255, 255, 255) and
				tonumber(game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[_G.SelectWeaponPvP].C.Cooldown.AbsoluteSize.X) == 0 then
				--game:GetService("Players").LocalPlayer.Character[game.Players.LocalPlayer.Data.DevilFruit.Value].RemoteFunction:InvokeServer("C",Vector3.new(0,0,0))
				local vim = game:service'VirtualInputManager'
				vim:SendKeyEvent(true, "C", false, game)
				wait()
				vim:SendKeyEvent(false, "C", false, game)
			elseif _G.CombatAll and fuitac and
				game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[_G.SelectWeaponPvP].V.Title.TextColor3 == Color3.fromRGB(255, 255, 255) and
				tonumber(game:GetService("Players").LocalPlayer.PlayerGui.Main.Skills[_G.SelectWeaponPvP].V.Cooldown.AbsoluteSize.X) == 0 then
				--game:GetService("Players").LocalPlayer.Character[game.Players.LocalPlayer.Data.DevilFruit.Value].RemoteFunction:InvokeServer("V",Vector3.new(0,0,0))
				local vim = game:service'VirtualInputManager'
				vim:SendKeyEvent(true, "V", false, game)
				wait()
				vim:SendKeyEvent(false, "V", false, game)
			end

			
		end)
	end)
	



    spawn(function()
        while wait(1) do
            if _G.onNext and godkub then
                wait(7)
                pcall(function()
            
                    local v = game:GetService("Players")[KillPlayer].Character
                    if _G.onNext and v.Name == KillPlayer and v.Humanoid.Health ==
                        v.Humanoid.MaxHealth or v.Humanoid.Health > hpmun and
                        v.Name == KillPlayer then
                        Next = true
                        _G.onNext = false
                    end
                end)
            end
        end
    end)

    function comma_value(amount)
        local formatted = amount
        while true do
            formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
            if (k == 0) then break end
        end
        return formatted
    end


    spawn(function()
        while wait(300) do
            if _G.GodPVP then
                repeat wait(.1) until game:GetService("Players").LocalPlayer.PlayerGui.Main.InCombat.Visible == false
                if _G.Webhook ~= nil and _G.Webhook ~= "" then
                    pcall(function()
                        local HttpServ = game:GetService('HttpService')
                        local url = _G.Webhook
                        local data = {
                            ["content"] = "",
                            ["embeds"] = {
                                {
                                    ["title"] = "Root Hub - Notification",
                                    ["description"] = info.Name,
                                    ["type"] = "rich",
                                    ["color"] = tonumber(0xAB0909),
                                    ["fields"] = {
                                        {
                                            ["name"] = "👨‍🎤Username👨‍🎤",
                                            ["value"] = "《 " ..
                                                Game.Players.LocalPlayer.Name ..
                                                " 》",
                                            ["inline"] = true
                                        }, {
                                            ["name"] = "☠️Old Bounty☠️",
                                            ["value"] = "《 " ..
                                                comma_value(oldbouty) .. " 》",
                                            ["inline"] = true
                                        }, {
                                            ["name"] = "😈Get Bounty😈",
                                            ["value"] = "《 " ..
                                                comma_value(
                                                    game:GetService("Players").LocalPlayer
                                                        .leaderstats["Bounty/Honor"]
                                                        .Value - oldbouty) ..
                                                " 》",
                                            ["inline"] = true
                                        }, {
                                            ["name"] = "👽Bounty Total👽",
                                            ["value"] = "《 " ..
                                                comma_value(oldbouty + sumbouty) ..
                                                " 》",
                                            ["inline"] = true
                                        }

                                    },
                                    ["footer"] = {["text"] = os.date("%c")}
                                }
                            }
                        }
                        local newdata = HttpServ:JSONEncode(data)
                        local headers = {["content-type"] = "application/json"}
                        local request_payload = {
                            Url = url,
                            Body = newdata,
                            Method = "POST",
                            Headers = headers
                        }
                        http_request(request_payload)
                    end)
                end
                _G.CombatAll = false
                _G.onNext = false
                wait(0.3)
                yudsa = ""

                if newworld then
                    Hopey()
                    wait(.3)
                   -- game.Players.localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(266.227783, 1.39509034, 1857.00732)
                   -- wait(.3)
                  -- tp(CFrame.new(266.227783, 1.39509034, 1857.00732))
                   -- game.Players.localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(266.227783, 1.39509034, 1857.00732)
                    wait(.3)
                    _G.CombatAll = false
                    _G.FastAttack = false
                    _G.FastAttack = false
                elseif sea3world then
                    --game.Players.localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-5016.06445, 314.843933, -2814.52466,-0.477313489, -9.34929929e-08, -0.878733099,-4.26441851e-08, 1, -8.32315905e-08,0.878733099, -2.25470376e-09, -0.477313489)
                    wait(.3)
                    _G.CombatAll = false
                   -- game.Players.localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-5016.06445, 314.843933, -2814.52466, -0.477313489, -9.34929929e-08, -0.878733099,-4.26441851e-08, 1, -8.32315905e-08, 0.878733099, -2.25470376e-09, -0.477313489)
                   -- wait(.3)
                    Hopey()
                    --tp(CFrame.new(-5016.06445, 314.843933, -2814.52466, -0.477313489, -9.34929929e-08, -0.878733099,-4.26441851e-08, 1, -8.32315905e-08, 0.878733099, -2.25470376e-09, -0.477313489))
                   -- wait(.3)
                    
                end
            end
        end
    end)

    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.CombatAll then
                game:GetService("Players").LocalPlayer.PlayerGui.Main.boty.Visible = true
                CombatPlayerall()
               
            end
        end
    end)

    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if pk then
                CombatPlayer()  
            end
        end
    end)

    local lp = game:GetService('Players').LocalPlayer
    local mouse = lp:GetMouse()
    mouse.Button1Down:Connect(function()
        pcall(function()
            if _G.AimbotGun  and
                game.Players.LocalPlayer.Character:FindFirstChild(_G.SelectWeaponPvP).RemoteFunctionShoot then
                    Px = game:GetService("Players"):FindFirstChild(KillPlayer).Character.HumanoidRootPart.CFrame.X
                    Py = game:GetService("Players"):FindFirstChild(KillPlayer).Character.HumanoidRootPart.CFrame.Y
                    Pz = game:GetService("Players"):FindFirstChild(KillPlayer).Character.HumanoidRootPart.CFrame.Z
                game:GetService("Players").LocalPlayer.Character[_G.SelectWeaponPvP].RemoteFunctionShoot:InvokeServer(Vector3.new(Px, Py, Pz),game:GetService("Players"):FindFirstChild(KillPlayer).Character.HumanoidRootPart)
            end
        end)
    end)
	


	IslandSection:AddButton({
		Name = 'Copy CFrame', 
		Callback = function()
			local oopoo = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
			setclipboard(tostring(oopoo))	
		end
	})

	if OldWorld then
		IslandSection:AddButton({
			Name = 'Colosseum', 
			Callback = function()
				pcall(function()
					islandtp = true
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-1439.36292, 7.28763294, -2786.2854))	
			end
		})
        IslandSection:AddButton({
			Name = 'Desert', 
			Callback = function()
				pcall(function()
					islandtp = true
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(903.822021, 3.39378071, 4122.47217))	
			end
		})
		IslandSection:AddButton({
			Name = 'Fishmen', 
			Callback = function()
				pcall(function()
					_G.tweennew:Cancel()
			    end)
			    if (game:GetService("Workspace").Map.TeleportSpawn.Exit.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 50000 then
				   game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.TeleportSpawn.Entrance.CFrame
			    else
				   --tp(CFrame.new(61155.7617, 18.4716377, 1633.86816))
			    end
			    islandtp = true	
			end
		})
		IslandSection:AddButton({
			Name = 'Snow', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
			    end)
			    tp(CFrame.new(1102.16577, 5.29066133, -1146.51172))
			    islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Jungle', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-1319.57605, 11.8531179, 488.045044))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Magma', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-5232.21582, 8.59026527, 8441.30371))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'MarineBase', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-4775.36475, 4.56315041, 4308.47266))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'MarineStart', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-2538.07715, 6.85566807, 2042.98206))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'MobBoss', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-2843.11475, 7.39224529, 5332.77295))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Middle Town', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-1225.63916, 7.65219975, 1749.79968))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Pirate Town', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-1147.38184, 4.75204945, 3816.3418))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Prison', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(4851.229, 5.65198135, 732.873413))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Sky', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-4865.84277, 717.696472, -2628.55811))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'SkyArea1', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-4721.24023, 844.277161, -1986.93237))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'SkyArea2', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-7898.19434, 5545.49316, -400.126862))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Windmill', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(911.480469, 16.516613, 1429.81592))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Water', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(5239.13184, 38.5011368, 4050.27466))
				islandtp = true
			end
		})
    elseif newworld then

		IslandSection:AddButton({
			Name = 'Café', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-380.411011, 72.8180008, 303.237))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Kingdom of Rose', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-195.100006, 155.300003, 279.899994))
				islandtp = true
			end
		})
        IslandSection:AddButton({
			Name = 'Ice Castle 2', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(6191.85303, 293.444855, -6758.25244))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = "Swan's Room", 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(2293.69995, 12.499856, 663.099609))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Factory', 
			Callback = function()
			    pcall(function()    
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(430.989227, 238.417984, -433.162994))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Colosseum', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-1836.41101, 72.8180008, 1360.23706))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Secret Room', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-2006.47156, 124.550804, -73.7904587))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'MiniSky', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-262.517487, 49321.7109, -35252.9375))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Mansion', 
			Callback = function()
			    pcall(function()             
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-393.299988, 367.299957, 687.499817))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Graveyard Island', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				 tp(CFrame.new(-5577.93945, 87.5497513, -782.238831))
				 islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Snow Mountain', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(837.481934, 429.421967, -4840.21582))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Hot and Cold', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-5902.02002, 18.3219719, -5079.50635))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Cursed Ship', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				if (game:GetService("Workspace").Map.GhostShipInterior.Teleport.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude >= 20000 then
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.GhostShip.Teleport.CFrame
				else
				   -- tp(CFrame.new(900.941833, 143.971588, 33072.6406))
					islandtp = true
				end
			end
		})
		IslandSection:AddButton({
			Name = 'Ice Castle', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(5400.40381, 29.3497753, -6236.99219))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'ForgottenIsland', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-3026.70142, 238.963318, -10194.2305))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Green Zone', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-2337.98901, 72.4141083, -2627.91675))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Dark Arena', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(3807.0979, 11.7997465, -3452.19849))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Usop Island', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(4748.78857, 8.35370827, 2849.57959))
				islandtp = true
			end
		})
    elseif sea3world then
		IslandSection:AddButton({
			Name = 'Chocolate Island', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(273.933258, 28.3336544, -12703.3584, 0.85033077, -7.32205976e-08, -0.526248574, 4.59955487e-08, 1, -6.4815687e-08, 0.526248574, 3.09096819e-08, 0.85033077))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'Cake Island', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-1897.84607, 9.59144974, -11529.3613, -0.572870135, 0, 0.81964612, 0, 1, 0, -0.81964612, 0, -0.572870135))
				islandtp = true
			end
		})

		IslandSection:AddButton({
			Name = 'IceCream Island', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-946.540649, 7.79533052, -10821.7051, 0.77595222, 2.6573689e-08, -0.630791664, 6.87555957e-10, 1, 4.29733014e-08, 0.630791664, -3.37789317e-08, 0.77595222))
				islandtp = true
			end
		})

		IslandSection:AddButton({
			Name = 'Nuts Island', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-2041.38123, 4.70300817, -9910.35645, -0.771845281, 1.56889133e-08, 0.635810375, 5.62090063e-09, 1, -1.78519368e-08, -0.635810375, -1.0205107e-08, -0.771845281))
				islandtp = true
			end
		})

		IslandSection:AddButton({
			Name = 'Haunted Castle', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-9509.9668, 142.132584, 5515.61914, 0.997870326, 4.24598579e-09, 0.0652291849, -4.26428715e-09, 1, 1.41346115e-10, -0.0652291849, -4.19201063e-10, 0.997870326))
				islandtp = true
			end
		})

		IslandSection:AddButton({
			Name = 'Mansion', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-12554.9443, 337.194092, -7501.44727, 0.906377554, 4.23948272e-08, -0.422468632, -1.89128269e-08, 1, 5.97740595e-08, 0.422468632, -4.61877896e-08, 0.906377554))
				islandtp = true
			end
		})
       
		IslandSection:AddButton({
			Name = 'Port Town', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-258.63623, 5.78799343, 5321.78369, 0.999984622, -8.75354118e-08, 0.00554595934, 8.75907347e-08, 1,-9.73226388e-09, -0.00554595934, 1.02178888e-08, 0.999984622))
				islandtp = true
			end
		})

		IslandSection:AddButton({
			Name = 'Hydra Island', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(4196.17969, 50.5846367, -2389.56299, -0.843025029, -2.90913924e-08, -0.537874341, -2.25230092e-08, 1, -1.87849309e-08, 0.537874341, -3.72161746e-09,-0.843025029))
				islandtp = true
			end
		})

		IslandSection:AddButton({
			Name = 'Great Tree', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(2227.69482, 6.42500639, -6327.17529, 0.111663714, -9.25840311e-08, -0.993746042, -1.4306984e-07, 1,-1.0924294e-07, 0.993746042, 1.54373552e-07, 0.111663714))
				islandtp = true
			end
		})

		IslandSection:AddButton({
			Name = 'Castle on the Sea', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-5657.56104, 312.773529, -3194.17163, -0.898319721, 3.89709776e-08, -0.43934232, 2.41041881e-10, 1, 8.82101361e-08, 0.43934232, 7.91350061e-08, -0.898319721))
				islandtp = true
			end
		})

		IslandSection:AddButton({
			Name = 'Floating Turtle', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-10384.5322, 330.820679, -8385.62793, 0.284302682, -4.26996485e-06, 0.958734572, 3.70787052e-06, 1, 3.35422055e-06, -0.958734572, 2.60124989e-06,0.284302682))
				islandtp = true
			end
		})

		IslandSection:AddButton({
			Name = 'Friendly Arena', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(5220.29, 72.8193, -1450.86))
				islandtp = true
			end
		})

		IslandSection:AddButton({
			Name = 'Beautiful Pirate Domain', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(5310.80957, 152.446838, 129.390533, 1, 0, 0, 0, 1, 0, 0, 0, 1))
				islandtp = true
			end
		})
		IslandSection:AddButton({
			Name = 'MiniSky', 
			Callback = function()
			    pcall(function()
					_G.tweennew:Cancel()
				end)
				tp(CFrame.new(-292.650391, 49320.2773, -35219.125, 0.788016856, -0, -0.615653694, 0, 1, -0, 0.615653694, 0, 0.788016856))
				islandtp = true
			end
		})
    end

	if newworld then
		WorldSection:AddButton({
			Name = 'Teleport to Old World', 
			Callback = function()
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
			end
		})
		WorldSection:AddButton({
			Name = 'Teleport to Third World', 
			Callback = function()
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
			end
		})
    elseif OldWorld then
		WorldSection:AddButton({
			Name = 'Teleport to Second World', 
			Callback = function()
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
			end
		})
		WorldSection:AddButton({
			Name = 'Teleport to Third World', 
			Callback = function()
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
			end
		})
    elseif sea3world then
		WorldSection:AddButton({
			Name = 'Teleport to Old World', 
			Callback = function()
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
			end
		})
		WorldSection:AddButton({
			Name = 'Teleport to Second World', 
			Callback = function()
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
			end
		})
    end

	ServerSection:AddButton({
		Name = "Re-Join", 
		Callback = function()
		local ts = game:GetService("TeleportService")
        local p = game:GetService("Players").LocalPlayer
        ts:Teleport(game.PlaceId, p)
		end
	})

	spawn(function() while wait(1) do if _G.Hope then Hopey() end end end)
	ServerSection:AddButton({
		Name = "Server Hop", 
		Callback = function()
			Hopey()
		end
	})

	ServerSection:AddButton({
		Name = "Server Hop (Lesss)", 
		Callback = function()
			local PlaceID = game.PlaceId
			function Hopless()
				local Site;
				Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
				local ID = ""
				for i,v in pairs(Site.data) do
					for i2,v2 in pairs(v) do
						if i2 == "playerTokens" and (v2.playerTokens == nil or #v2.playerTokens <= 3)then
							ID = tostring(v.id)
							game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
						
						end
					
					end
				end
			
					local function child(v)
						if v.Name == "ErrorPrompt" then
							if v.Visible then
								if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
									Hopless()
								end
							end
							v:GetPropertyChangedSignal("Visible"):Connect(function()
								if v.Visible then
									if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
										Hopless()
									end
								end
							end)
						end
					end
					for k,v in pairs(game.CoreGui.RobloxPromptGui.promptOverlay:GetChildren()) do
						child(v)
					end
					game.CoreGui.RobloxPromptGui.promptOverlay.ChildAdded:Connect(child)
				
				
			end

			function Teleportless() 
				while wait(3) do
					pcall(function()
						Hopless()
					end)
				end
			end
			Teleportless()
			
		end
	})

	spawn(function()
        while wait(1) do
            if _G.NonVipserver and
                #game:GetService("Workspace").Characters:GetChildren() > 4 then
					local PlaceID = game.PlaceId
					function Hopless()
						local Site;
						Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
						local ID = ""
						for i,v in pairs(Site.data) do
							for i2,v2 in pairs(v) do
								if i2 == "playerTokens" and v2.playerTokens == nil then
									ID = tostring(v.id)
									game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
									break
								end
							
							end
						end
					end
				Hopless()
            end
        end
    end)

	TeameSection:AddButton({
		Name = "Join Pirates", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam", "Pirates")
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer( "BartiloQuestProgress")
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
		end
	})
	TeameSection:AddButton({
		Name = "Join Marines", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam", "Marines")
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer( "BartiloQuestProgress")
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
		end
	})
	

	Fruitlist = {
        "Bomb-Bomb", "Spike-Spike", "Chop-Chop", "Spring-Spring", "Smoke-Smoke",
        "Flame-Flame", "Ice-Ice", "Sand-Sand", "Dark-Dark", "Light-Light",
        "Rubber-Rubber", "Barrier-Barrier", "Magma-Magma", "Quake-Quake",
        "Human-Human: Buddha", "String-String", "Bird-Bird: Phoenix",
        "Rumble-Rumble", "Paw-Paw", "Gravity-Gravity", "Dough-Dough",
        "Control-Control", "Dragon-Dragon", "Kilo-Kilo", "Spin-Spin",
        "Bird-Bird: Falcon", "Diamond-Diamond", "Love-Love", "Door-Door",
        "Venom-Venom", "Shadow-Shadow", "Revive-Revive", "Leopard-Leopard"
    }


	
	BuySection:AddToggle({
		Name = "Auto Random Fruit",
		Flag = "Random_fuit",
		Value = _G.Randomfruit,
		Callback = function(t, o)
			_G.Randomfruit = t
			savenaja()
		end
	})

	spawn(function()
        while wait(.1) do
            if _G.Randomfruit then
                wait()
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Cousin", "Buy")
            end
        end
    end)

	BuySection:AddToggle({
		Name = "Auto Buy Legendary Sword",
		Flag = "Buy_legendary",
		Value = _G.LegendarySword,
		Callback = function(t, o)
			_G.LegendarySword = t
			savenaja()
		end
	})
	spawn(function()
        while wait(.1) do
            if _G.LegendarySword and newworld then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LegendarySwordDealer", "2")
            end
        end
    end)
	BuySection:AddToggle({
		Name = "Auto Buy Enhancement",
		Flag = "Buy_enhancement",
		Value = _G.BuyEnhancement,
		Callback = function(t, o)
			_G.BuyEnhancement = t
			savenaja()
		end
	})
	spawn(function()
        while wait(1) do
            if _G.BuyEnhancement then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ColorsDealer", "2")
            end
        end
    end)

	BuySection:AddToggle({
		Name = "Fruit Sniper",
		Flag = "Fruit_sniper",
		Value = _G.FruitSinper,
		Callback = function(t, o)
			_G.FruitSinper = t
			savenaja()
		end
	})
	BuySection:AddDropdown({
		Name = "Fruit Sniper list",
		Flag = "Select_sniper",
		List  = Fruitlist,
		Callback = function(t, o)
			_G.SelectFruit = t
			savenaja()
		end
	})
	spawn(function()
        while wait(.1) do
            if _G.FruitSinper then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("GetFruits")
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("PurchaseRawFruit", SelectFruit)
            end
        end
    end)

	HakiSection:AddButton({
		Name = "Buso", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyHaki", "Buso")
		end
	})
	HakiSection:AddButton({
		Name = "Geppo", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyHaki", "Geppo")		
		end
	})
	HakiSection:AddButton({
		Name = "Soru", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyHaki", "Soru")
		end
	})
	HakiSection:AddButton({
		Name = "Ken", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk", "Start")
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk", "Buy")
		end
	})
	FragsSection:AddButton({
		Name = "Random Fruit", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Cousin", "Buy")
		end
	})
	FragsSection:AddButton({
		Name = "Change Race", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "Reroll", "2")
		end
	})
	FragsSection:AddButton({
		Name = "Refund Stats", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "Refund", "2")
		end
	})

	meleeSection:AddButton({
		Name = "Black Leg", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
		end
	})
	meleeSection:AddButton({
		Name = "Electro", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectro")
		end
	})
	meleeSection:AddButton({
		Name = "FishmanKarate", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyFishmanKarate")
		end
	})
	meleeSection:AddButton({
		Name = "Dragon Claw", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "DragonClaw", "1")
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "DragonClaw", "2")
		end
	})
	meleeSection:AddButton({
		Name = "Superhuman", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman")
		end
	})
	meleeSection:AddButton({
		Name = "Sharkman Karate", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate", true)
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate")
		end
	})
	meleeSection:AddButton({
		Name = "Electric Claw", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectricClaw", true)
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectricClaw")
			end
	})
	meleeSection:AddButton({
		Name = "Dragon Talon", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDragonTalon", true)
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDragonTalon")
		end
	})
	meleeSection:AddButton({
		Name = "Death Step", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDeathStep")
		end
	})
	meleeSection:AddButton({
		Name = "God Human", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyGodhuman", true)
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyGodhuman")
		end
	})

	SwordSection:AddButton({
		Name = "Katana", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Katana")
		end
	})
	SwordSection:AddButton({
		Name = "Cutlass", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Cutlass")
		end
	})
	SwordSection:AddButton({
		Name = "Dual Katana", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Dual Katana")
		end
	})
	SwordSection:AddButton({
		Name = "Iron Mace", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Iron Mace")
		end
	})
	SwordSection:AddButton({
		Name = "Triple Katana", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Triple Katana")
		end
	})
	SwordSection:AddButton({
		Name = "Pipe", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Pipe")
		end
	})
	SwordSection:AddButton({
		Name = "Dual-Headed Blade", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Dual-Headed Blade")
		end
	})
	SwordSection:AddButton({
		Name = "Bisento", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Bisento")
		end
	})
	SwordSection:AddButton({
		Name = "Midnight Blade", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Ectoplasm", "Buy", 3)
		end
	})


	GunSection:AddButton({
		Name = "Slingshot", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Slingshot")
		end
	})
	GunSection:AddButton({
		Name = "Musket", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Musket")
		end
	})
	GunSection:AddButton({
		Name = "Flintlock", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Flintlock")
		end
	})
	GunSection:AddButton({
		Name = "Refined Slingshot", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Refined Slingshot")
		end
	})
	GunSection:AddButton({
		Name = "Refined Flintlock", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Refined Flintlock")
		end
	})
	GunSection:AddButton({
		Name = "Cannon", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Cannon")
		end
	})
	GunSection:AddButton({
		Name = "Bizarre Rifle", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Ectoplasm", "Buy", 1)
		end
	})
	GunSection:AddButton({
		Name = "Kabucha", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "Slingshot", "2")
		end
	})
	AcessorySection:AddButton({
		Name = "Black Cape", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Black Cape")
		end
	})
	AcessorySection:AddButton({
		Name = "Swordsman Hat", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Swordsman Hat")
		end
	})
	AcessorySection:AddButton({
		Name = "Tomoe Ring", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyItem", "Tomoe Ring")
		end
	})
	AcessorySection:AddButton({
		Name = "Ghoul Mask", 
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Ectoplasm", "Buy", 2)
		end
	})


	MiseSection:AddToggle({
	Name = "ESP Fruit",
	Flag = "ESP_fruit",
	Value = _G.DevilFruitESP,
    Callback = function(t, o)
		_G.DevilFruitESP = t
		savenaja()
    end
	})
	MiseSection:AddToggle({
	Name = "ESP Chest",
	Flag = "ESP_chest",
	Value = _G.ChestESP,
    Callback = function(t, o)
		_G.ChestESP = t
		savenaja()
    end
	})
	MiseSection:AddToggle({
	Name = "ESP Flower",
	Flag = "ESP_flower",
	Value = _G.FlowerESP,
    Callback = function(t, o)
		_G.FlowerESP  = t
		savenaja()
    end
	})
	MiseSection:AddToggle({
	Name = "ESP Real Fruit",
	Flag = "ESP_real",
	Value = _G.Fruitnew,
    Callback = function(t, o)
		_G.Fruitnew = t
		savenaja()
    end
	})

	MiseSection:AddToggle({
		Name = "Tween Chest (เสี่ยงโดนแบน นะจ้ะ)",
		Callback = function(t, o)
			_G.tpchest = t
       		if not _G.tpchest then
           		pcall(function()
           	    	_G.tweennew:Cancel()
             	end)
        	end
		end
	})
	spawn(function()
        while wait(.1) do
            if _G.tpchest then
                for i, v in pairs(game.Workspace:GetChildren()) do
                    if v.Name == "Chest1" or v.Name == "Chest2" or v.Name == "Chest3" and v:IsA "Part" then
                        tp(v.CFrame)
                    end
                end
            end
        end
    end)
	MiseSection:AddButton({
		Name = "TP Blue Flower", 
		Callback = function()
			tp(game:GetService("Workspace"):FindFirstChild("Flower1").CFrame)
		end
	})
	MiseSection:AddButton({
		Name = "TP Red Flower", 
		Callback = function()
			tp(game:GetService("Workspace"):FindFirstChild("Flower2").CFrame)
		end
	})
	Fruitlist1 = {
        "Bomb Fruit", "Spike Fruit", "Chop Fruit", "Spring Fruit",
        "Smoke Fruit", "Flame Fruit", "Ice Fruit", "Sand Fruit", "Dark Fruit",
        "Light Fruit", "Rubber Fruit", "Barrier Fruit", "Magma Fruit",
        "Quake Fruit", "Human: Buddha Fruit", "String Fruit",
        "Bird: Phoenix Fruit", "Rumble Fruit", "Paw Fruit", "Gravity Fruit",
        "Dough Fruit", "Control Fruit", "Dragon Fruit", "Kilo Fruit",
        "Spin Fruit", "Bird: Falcon", "Diamond Fruit", "Love Fruit",
        "Door Fruit", "Venom Fruit", "Shadow Fruit", "Revive Fruit",
        "Soul Fruit", "Leopard Fruit"
    }



	ActivateSection:AddButton({
		Name = "Grab All Fruit", 
		Callback = function()
		if game:GetService("Workspace"):FindFirstChildWhichIsA("Tool") then
			for i, v in pairs(game.Workspace:GetChildren()) do
				if string.find(v.Name, "Fruit") then
					if v:IsA("Tool")  and (v.Handle.Position-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 13000 then
						firetouchinterest(v.Handle, game.Players.LocalPlayer.Character.HumanoidRootPart,0)
                        firetouchinterest(v.Handle, game.Players.LocalPlayer.Character.HumanoidRootPart,1)    
					   -- v.Handle.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
					end
				end
			end
		end
			
		end
	})
	ActivateSection:AddToggle({
		Name = "Auto Grab All fruit",
		Flag = "Grab_fruit",
		Value = _G.GrabAllFruit,
		Callback = function(t, o)
			_G.GrabAllFruit = t
			savenaja()
		end
	})

	ActivateSection:AddToggle({
		Name = "Auto Store All fruit",
		Flag = "Store_fruit",
		Value = _G.GrabStoreFruit,
		Callback = function(t, o)
			_G.GrabStoreFruit = t
			savenaja()
		end
	})

	ActivateSection:AddToggle({
		Name = "Auto Eat fruit",
		Flag = "Eat_fruit",
		Value = _G.EatFruit,
		Callback = function(t, o)
			_G.EatFruit = t
			savenaja()
		end
	})
	ActivateSection:AddDropdown({
		Name = "Select fruit",
		Flag = "Select_eat",
		List  = Fruitlist1,
		Callback = function(t, o)
			_G.FruitEat = t
			savenaja()
		end
	})
	spawn(function()
        while wait(.1) do
            if _G.GrabStoreFruit then
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v:IsA("Tool") then
                            pcall(function()
                                if v.Name == "Bomb Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Bomb-Bomb",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Spike Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Spike-Spike",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Chop Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Chop-Chop",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Spring Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Spring-Spring",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Smoke Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Smoke-Smoke",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Flame Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Flame-Flame",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Ice Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Ice-Ice",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Sand Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Sand-Sand",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Dark Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Dark-Dark",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Light Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Light-Light",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Rubber Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Rubber-Rubber",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Barrier Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Barrier-Barrier",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Magma Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Magma-Magma",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Quake Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Quake-Quake",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Human: Buddha Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Human-Human: Buddha",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "String Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","String-String",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Bird: Phoenix Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Bird-Bird: Phoenix",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Rumble Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Rumble-Rumble",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Paw Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Paw-Paw",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Gravity Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Gravity-Gravity",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Dough Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Dough-Dough",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Control Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Control-Control",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Dragon Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Dragon-Dragon",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Kilo Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Kilo-Kilo",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Spin Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Spin-Spin",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Bird: Falcon Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Bird-Bird: Falcon",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Diamond Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Diamond-Diamond",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Love Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Love-Love",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Door Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Door-Door",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Venom Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Venom-Venom",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Shadow Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Shadow-Shadow",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Revive Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Revive-Revive",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
                                elseif v.Name == "Soul Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Soul-Soul",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
								elseif v.Name == "Leopard Fruit" then
									game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Leopard-Leopard",game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v.Name))
								end
                            end)
                        end
                    end
                    for i, v in pairs(
                                    game.Players.LocalPlayer.Character:GetChildren()) do
                        if v:IsA("Tool") then
                            pcall(function()
                                if v.Name == "Bomb Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Bomb-Bomb",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Spike Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Spike-Spike",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Chop Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Chop-Chop",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Spring Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Spring-Spring",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Smoke Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Smoke-Smoke",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Flame Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Flame-Flame",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Ice Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Ice-Ice",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Sand Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Sand-Sand",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Dark Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Dark-Dark",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Light Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Light-Light",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Rubber Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Rubber-Rubber",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Barrier Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Barrier-Barrier",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Magma Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Magma-Magma",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Quake Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Quake-Quake",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Human: Buddha Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Human-Human: Buddha",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "String Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","String-String",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Bird: Phoenix Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Bird-Bird: Phoenix",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Rumble Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Rumble-Rumble",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Paw Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Paw-Paw",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Gravity Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Gravity-Gravity",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Dough Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Dough-Dough",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Control Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Control-Control",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Dragon Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Dragon-Dragon",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Kilo Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Kilo-Kilo",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Spin Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Spin-Spin",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Bird: Falcon Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Bird-Bird: Falcon",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Diamond Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Diamond-Diamond",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Love Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Love-Love",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Door Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Door-Door",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Venom Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Venom-Venom",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Shadow Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Shadow-Shadow",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Revive Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Revive-Revive",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
                                elseif v.Name == "Soul Fruit" then
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Soul-Soul",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
								elseif v.Name == "Leopard Fruit" then
									game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit","Leopard-Leopard",game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name))
								end
                            end)
                        end
                    end

                end)
            end
        end
    end)
	spawn(function()
        while wait(.1) do
            if _G.EatFruit then
                pcall(function()
                    if game.Players.LocalPlayer.Backpack:FindFirstChild(_G.FruitEat) then
                        EquipWeapon(_G.FruitEat)
                        pcall(function()
                            game:GetService("Players").LocalPlayer.Character:FindFirstChild(_G.FruitEat).EatRemote:InvokeServer()
                        end)
                    elseif game.Players.LocalPlayer.Character:FindFirstChild(_G.FruitEat) then
                        EquipWeapon(_G.FruitEat)
                        pcall(function()
                            game:GetService("Players").LocalPlayer.Character:FindFirstChild(_G.FruitEat).EatRemote:InvokeServer()
                        end)
                    end

                end)
            end
        end
    end)
	Fruitlist1 = {
        "Bomb Fruit", "Spike Fruit", "Chop Fruit", "Spring Fruit",
        "Smoke Fruit", "Flame Fruit", "Ice Fruit", "Sand Fruit", "Dark Fruit",
        "Light Fruit", "Rubber Fruit", "Barrier Fruit", "Magma Fruit",
        "Quake Fruit", "Human: Buddha Fruit", "String Fruit",
        "Bird: Phoenix Fruit", "Rumble Fruit", "Paw Fruit", "Gravity Fruit",
        "Dough Fruit", "Control Fruit", "Dragon Fruit", "Kilo Fruit",
        "Spin Fruit", "Bird: Falcon", "Diamond Fruit", "Love Fruit",
        "Door Fruit", "Venom Fruit", "Soul Fruit", "Leopard Fruit"
    }
	spawn(function()
        while wait(1) do
            if _G.GrabAllFruit and game:GetService("Workspace"):FindFirstChildWhichIsA("Tool") then
                for i, v in pairs(game.Workspace:GetChildren()) do
                    if string.find(v.Name, "Fruit") and v:IsA("Tool") then
						pcall(function()
							v.Keep.Value = true
							firetouchinterest(v.Handle, game.Players.LocalPlayer.Character.HumanoidRootPart,0)
						end)
                 -- v.Handle.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame 
                    end
                end

            end
        end
    end)


	GuiSection:AddButton({
		Name = "Open Devil Shop", 
		Callback = function()
			game.Players.localPlayer.PlayerGui.Main.FruitShop.Visible = true
		end
	})
	GuiSection:AddButton({
		Name = "Open Awakening", 
		Callback = function()
			game:GetService("Players").localPlayer.PlayerGui.Main.AwakeningToggler.Visible = true
		end
	})
	GuiSection:AddButton({
		Name = "Open Buso Color", 
		Callback = function()
			game:GetService("Players").localPlayer.PlayerGui.Main.Colors.Visible =true
		end
	})
	GuiSection:AddButton({
		Name = "Open Titles", 
		Callback = function()
			game:GetService("Players").localPlayer.PlayerGui.Main.Titles.Visible =true
		end
	})
	GuiSection:AddButton({
		Name = "Open Fruit Inventory", 
		Callback = function()
			game:GetService("Players").localPlayer.PlayerGui.Main.FruitInventory.Visible = true
		end
	})

	Abilitieection:AddToggle({
		Name = "Inf All Race",
		Flag = "Inf_race",
		Callback = function(t, o)
			if t then
				local copy = game:GetService("ReplicatedStorage").FX.Agility:Clone()
				copy.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.OriginalSize.Parent
		
				local copy1 = game:GetService("ReplicatedStorage").FX["Heavenly Blood"]:Clone()
				copy1.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.OriginalSize.Parent
		
				local copy2 = game:GetService("ReplicatedStorage").FX["Water Body"]:Clone()
				copy2.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.OriginalSize.Parent
		
				local copy3 = game:GetService("ReplicatedStorage").FX["Last Resort"]:Clone()
				copy3.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.OriginalSize.Parent
			end
			savenaja()
		end
	})

	Abilitieection:AddToggle({
		Name = "Inf Ken Haki range",
		Callback = function(t, o)
			_G.infken = t
			spawn(function()
				while wait(1) do
					if _G.infken then
						game:GetService("Players").LocalPlayer.VisionRadius.Value = math.huge
					end
				end
			end)
		end
	})

	Abilitieection:AddToggle({
		Name = "Infinity Energy",
		Callback = function(t, o)
			InfinityEnergy = t
    		originalstam = t
		end
	})
	function InfinityEner()
		local LocalPlayer = game:GetService 'Players'.LocalPlayer
		local originalstam = LocalPlayer.Character.Energy.Value
	
		LocalPlayer.Character.Energy.Changed:connect(function()
			if InfinityEnergy then
				LocalPlayer.Character.Energy.Value = originalstam
			end
		end)
	end
	spawn(function()
		while wait(.1) do
			if InfinityEnergy then
				pcall(function()
				wait(0.3)
				originalstam = LocalPlayer.Character.Energy.Value
				InfinityEner()
				end)
			end
		end
	end)
	Abilitieection:AddToggle({
		Name = "Walk Speed",
		Callback = function(t, o)
			if t then
				local gt = getrawmetatable(game)
				local old = gt.__newindex
				setreadonly(gt, false)
				gt.__newindex = newcclosure(function(Self, key, VALE)
					if tostring(Self) == "Humanoid" and tostring(key) == "WalkSpeed" and string.find(tostring(Self:GetFullName()), game.Players.LocalPlayer.name) then 
						return old(Self, key, 200)
					end
					return old(Self, key, VALE)
				end)
			end
		end
	})
	oldFruits = game:GetService("Players").LocalPlayer.Data.DevilFruit.Value
	
	if game.workspace:FindFirstChild("WaterWalk") then
		game.workspace:FindFirstChild("WaterWalk"):Destroy()
	end
	platform = Instance.new("Part")
	platform.Name = "WaterWalk"
	platform.Size = Vector3.new(math.huge, 1, math.huge)
	platform.Transparency = 0
	platform.Anchored = true
	platform.Parent = game.workspace

	Abilitieection:AddToggle({
		Name = "Walk On Water",
		Flag = "Water_walk",
		Value = true,
		Callback = function(t, o)
			WaterWalk = t
			savenaja()
		end
	})
	spawn(function()
		while wait() do
			pcall(function()
				if WaterWalk then
					platform.CanCollide = true
					platform.Position = Vector3.new(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position.X,game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position.Y * 0 -5, game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position.Z)
				else
					platform.CanCollide = false
					platform.Position = Vector3.new(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position.X,game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position.Y * 0 -6, game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position.Z)
				end
			end)	
		end
	end)
	nododgecool = false
--[[

    spawn(function()
		local gg = getrawmetatable(game)
		local old = gg.__namecall
		setreadonly(gg,false)
		gg.__namecall = newcclosure(function(...)
			local method = getnamecallmethod()
			local args = {...}
			if tostring(method) == "FireServer" then
				if tostring(args[1]) == "CommE" then
					if nododgecool and tostring(args[2]) == "Dodge" and tostring(args[2]) ~= "true" and tostring(args[2]) ~= "false" then
						for i, v in next, getgc() do
							if nododgecool and game.Players.LocalPlayer.Character.Dodge then
								if typeof(v) == "function" and getfenv(v).script ==
									game.Players.LocalPlayer.Character.Dodge then
									for i2, v2 in next, getupvalues(v) do
										if tostring(v2) == "0.4" then
											setupvalue(v, i2, 0)
										end
									end
								end
								
							end
						end
					
						return old(unpack(args))

					end
					
				end
			end
			return old(...)
		end)
	end)
	
spawn(function()
	while wait(2) do 
		if Sorunocool  then
			for i, v in next, getgc() do
				if  Sorunocool and type(v) == "function" and getfenv(v).script == game.Players.LocalPlayer.Character:WaitForChild("Soru") and not is_synapse_function(v) then
					for i2,v2 in pairs(debug.getupvalues(v)) do
						if type(v2) == 'table' then
							if v2.LastUse then
								setupvalue(v, i2, {LastAfter = 0,LastUse = 0})
							end
						end
					end
				end
			end
		end
	end
end)
]]
	function NoGeppoCool()
		if noGeppocool then
			for i,v in next, getgc() do
				if game.Players.LocalPlayer.Character.Geppo then
					if typeof(v) == "function" and getfenv(v).script == game.Players.LocalPlayer.Character.Geppo then
						for i2,v2 in next, getupvalues(v) do
							if tostring(v2) == "0" then
								repeat wait(.1)
									setupvalue(v,i2,0)
								until not noGeppocool
							end
						end
					end
				end
			end
		end
	end
	Abilitieection:AddToggle({
		Name = "Inf Geppo",
		Callback = function(t, o)
			noGeppocool = t
			NoGeppoCool()
		end
	})
	--[[
	Abilitieection:AddToggle({
		Name = "Dodge No Cooldown",
		Callback = function(t, o)
			nododgecool = t
       		--NoDodgeCool()
		end
	})
	
	Abilitieection:AddToggle({
		Name = "Soru No Cooldown",
		Callback = function(t, o)
			Sorunocool = t
        	--NoSoruCool()
		end
	})
]]
	Fly = false


	-- Press E to toggle

-- Press E to toggle
Abilitieection:AddToggle({
	Name = "Fly",
	Callback = function(t, o)
		--Fly = t
		pcall(function()
			if flying then 
				flying = false
			else
				flying = true
				Fly()
			end
		end)
	end
})
Abilitieection:AddSlider({
	Name = "Fly Speed",
	Value = 1000,
	Min = 0,
	Max = 5000,
	Textbox = true,
	Callback = function(t)
		flyspeed =  t
	end
	
})
repeat wait()
until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("UpperTorso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
local mouse = game.Players.LocalPlayer:GetMouse()
repeat wait() until mouse
local plr = game.Players.LocalPlayer
local UpperTorso = plr.Character.UpperTorso
local flying = false
local deb = true
local ctrl = {f = 0, b = 0, l = 0, r = 0}
local lastctrl = {f = 0, b = 0, l = 0, r = 0}
local maxspeed = 50000
local speed = 200

function Fly()
local bg = Instance.new("BodyGyro", UpperTorso)
bg.P = 9e4
bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
bg.cframe = UpperTorso.CFrame
local bv = Instance.new("BodyVelocity", UpperTorso)
bv.velocity = Vector3.new(0,0.1,0)
bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
repeat wait()
plr.Character.Humanoid.PlatformStand = true
if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then

speed = flyspeed
if speed > maxspeed then
speed = maxspeed
end
elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
speed = 0
if speed < 0 then
speed = 0
end
end
if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
else
bv.velocity = Vector3.new(0,0.1,0)
end
bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
until not flying
ctrl = {f = 0, b = 0, l = 0, r = 0}
lastctrl = {f = 0, b = 0, l = 0, r = 0}
speed = 0
bg:Destroy()
bv:Destroy()
plr.Character.Humanoid.PlatformStand = false
end
mouse.KeyDown:connect(function(key)
if key:lower() == "w" then
ctrl.f = 1
elseif key:lower() == "s" then
ctrl.b = -1
elseif key:lower() == "a" then
ctrl.l = -1
elseif key:lower() == "d" then
ctrl.r = 1
end
end)
mouse.KeyUp:connect(function(key)
if key:lower() == "w" then
ctrl.f = 0
elseif key:lower() == "s" then
ctrl.b = 0
elseif key:lower() == "a" then
ctrl.l = 0
elseif key:lower() == "d" then
ctrl.r = 0
end
end)
Fly()

--------------------------------
   

	Abilitieection:AddToggle({
		Name = "No Clip",
		Callback = function(t, o)
			_G.NoClip = t
		end
	})
	

	
	local Player = game.Players.LocalPlayer
   -- local plr = game:GetService("Players")
    
    
    function Torso(plr)
        if plr.Character then
            if plr.Character:FindFirstChild('UpperTorso') then
                return plr.Character.UpperTorso
            else
                return plr.Character.Torso
            end
        end
    end

	--_G.KillAura = true

game:GetService('RunService').Stepped:connect(function()
    if  _G.Lawraid or _G.kuypvpq or _G.AutoTushita2 or _G.AutoSaber or _G.cdkp2 or _G.cdkp1 or _G.UnlockRiad or _G.autoMaterial or _G.GodChalice or _G.AutoCocoa or _G.tpchest or pk or _G.AutoPrince or _G.AutoFarmken or islandtp or _G.AutoRainbow or _G.AutoThirdworld1 or _G.AutoCandies or _G.AutoCandiesWarp or
        _G.AutoBonesWarp or _G.AutoFarmwarp or _G.BuddySword or _G.dokmind or
        _G.AutoNewworld or _G.AutoReper or _G.AutoBones or _G.AutoRaid or
        _G.AutoFarm or _G.CanvanderSword or _G.AutoLongma or _G.AutoTushita or
        _G.AutoMusketeer or _G.AutoAllBossnoQuest or _G.AutoYama or
        _G.AutoEliteBoss or _G.AutoThirdworld or ATFM or _G.CombatAll or
        _G.AutoAllBoss or _G.AutoDonSwan or Autosea or FramBoss or
        AutoFarmgun or AutoFarmMaster or _G.Bartiloquest or _G.AutoWater or
        _G.AutoLibraryKey or _G.AutoPole or _G.AutoEs or _G.AutoRengoku or
        _G.NoClip then
        pcall(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                if  _G.Lawraid or _G.kuypvpq or _G.AutoTushita2 or _G.AutoSaber or _G.cdkp2 or _G.cdkp1 or _G.UnlockRiad or _G.autoMaterial or _G.GodChalice or _G.AutoCocoa or _G.tpchest or pk or _G.AutoPrince or _G.AutoFarmken or islandtp  or _G.AutoRainbow or _G.AutoThirdworld1 or _G.AutoCandies or
                    _G.AutoCandiesWarp or _G.AutoBonesWarp or
                    _G.AutoFarmwarp or _G.BuddySword or _G.dokmind or
                    _G.AutoNewworld or _G.AutoReper or _G.AutoBones or
                    _G.AutoRaid or _G.AutoFarm or _G.CanvanderSword or
                    _G.AutoLongma or _G.AutoTushita or _G.AutoMusketeer or
                    _G.AutoAllBossnoQuest or _G.AutoYama or _G.AutoEliteBoss or
                    _G.AutoThirdworld or ATFM or _G.CombatAll or
                    _G.AutoAllBoss or _G.AutoDonSwan or Autosea or FramBoss or
                    AutoFarmgun or AutoFarmMaster or _G.Bartiloquest or
                    _G.AutoWater or _G.AutoLibraryKey or _G.AutoPole or
                    _G.AutoEs or _G.AutoRengoku or _G.NoClip then
                    pcall(function()
                        if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
                            game.Players.LocalPlayer.Character.Humanoid.Sit = false
                        end
                    end)
					
                   
					
                    if not _G.NoClip and not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("fly") then
						local bv = Instance.new("BodyVelocity")
                        bv.Parent =  game.Players.LocalPlayer.Character.HumanoidRootPart
                        bv.Name = "fly"
                        bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                        bv.Velocity = Vector3.new(0, 0, 0)
                    end
					
					
                   --or KRNL_LOADED
                        setfflag("HumanoidParallelRemoveNoPhysics", "False")
						setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2","False")
						setfflag("CrashPadUploadToBacktraceToBacktraceBaseUrl", "")
						setfflag("CrashUploadToBacktracePercentage", "0")
						setfflag("CrashUploadToBacktraceBlackholeToken", "")
						setfflag("CrashUploadToBacktraceWindowsPlayerToken", "")
						game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(5)
					--if syn  then
					--else
							local Z = game:GetService("Players").LocalPlayer
                            Clip = true
                            Torso(Z).CanCollide = not Clip
                            Z.Character.Head.CanCollide = not Clip
                            Z.Character.HumanoidRootPart.CanCollide = not Clip
                            if Z.Character.UpperTorso then
                                Z.Character.LowerTorso.CanCollide = not Clip
                            end
                        if not game:GetService("Workspace"):FindFirstChild("root") then
                            local root = Instance.new("Part")
                            root.Name = "root"
                            root.Parent = game.Workspace
                            root.Anchored = true
                            root.Transparency = 1
                            root.Size = Vector3.new(100,0.5,100)
                        elseif game:GetService("Workspace"):FindFirstChild("root") then
                            game.Workspace["root"].CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X,game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Y - 3,game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Z)
                        end
						
                    --end
					
                end
            end
        end)
    else
        pcall(function()
			game.Players.LocalPlayer.Character.Head.Anchored = false
            Clip = false
            if  game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("fly") then
                game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("fly"):Destroy()
            end
            if game.Workspace:FindFirstChild("root") then
                game.Workspace:FindFirstChild("root"):Destroy()
            end
        end)
    end
end)
Raid2Section:AddToggle({
	Name = "Auto Raid",
	Flag = "Auto_raid",
	Value = _G.AutoRaid,
	Callback = function(t, o)
		if newworld or sea3world then
			_G.AutoRaid = t
		end
		savenaja()
	end
})

Raid2Section:AddToggle({
	Name = "Kill Arua",
	Flag = "Kill_aura",
	Value = _G.KillAura,
	Callback = function(t, o)
		if newworld or sea3world then
			_G.KillAura = t
		end
		savenaja()
	end
})



Raid2Section:AddToggle({
	Name = "Auto Awake",
	Flag = "Auto_awake",
	Value = _G.AutoAwake,
	Callback = function(t, o)
		if newworld or sea3world then
			_G.AutoAwake = t
		end
		savenaja()
	end
})

Raid2Section:AddButton({
	Name = "Go Lab", 
	Callback = function()
		pcall(function()
			_G.tweennew:Cancel()
	   	end)
		if newworld then
			tp(CFrame.new(-6438.73535, 250.645355, -4501.50684))
		elseif sea3world then
			tp(CFrame.new(-5016.06445, 314.843933, -2814.52466, -0.477313489, -9.34929929e-08, -0.878733099, -4.26441851e-08, 1, -8.32315905e-08, 0.878733099, -2.25470376e-09, -0.477313489))
		end
		islandtp = true	
	end
})

Raid2Section:AddButton({
	Name = "Awakening Room", 
	Callback = function()
		pcall(function()
			_G.tweennew:Cancel()
		end)
		if newworld then
			tp(CFrame.new(266.227783, 1.39509034, 1857.00732))
		elseif sea3world then
			tp(CFrame.new(-11559.21, 55.1389618, -7578.56396, 1, 0, 0, 0, 1, 0, 0, 0, 1))
		end
		islandtp = true
	end
})

raidall ={
	"Flame Raid",
	"Ice Raid",
	"Quake Raid",
	"Light Raid",
	"Dark Raid",
	"String Raid",
	"Rumble Raid",
	"Magma Raid",
	"Human: Buddha Raid",
	"Sand Raid",
	"Phoenix Raid",
	"Dough Raid"
}

RaidSection:AddDropdown({
    Name = "Select Raid",
	Value = "Flame Raid",
	Flag = "Raid_select",
    List  = raidall,
    Callback = function(t, o)
		--print(t)
		if t == "Flame Raid" then
			_G.RaidIs = "Flame"
		elseif t == "Ice Raid" then
			_G.RaidIs = "Ice"
		elseif t == "Quake Raid" then
			_G.RaidIs = "Quake"
		elseif t == "Light Raid" then
			_G.RaidIs = "Light"
		elseif t == "Dark Raid" then
			_G.RaidIs = "Dark"
		elseif t == "String Raid" then
			_G.RaidIs = "String"
		elseif t == "Rumble Raid" then
			_G.RaidIs = "Rumble"
		elseif t == "Magma Raid" then
			_G.RaidIs = "Magma"
		elseif t == "Human: Buddha Raid" then
			_G.RaidIs = "Human: Buddha"
		elseif t == "Sand Raid" then
			_G.RaidIs = "Sand"
		elseif t == "Phoenix Raid" then
			_G.RaidIs = "Bird: Phoenix"
		elseif t == "Dough Raid" then
			_G.RaidIs = "Dough"
		end
		savenaja()
    end
})

--[[
oppen = "value"
RaidSection:AddToggle({
	Name = "Auto Flame Raids",
	Flag = "Flame_raid",
	Value = _G.Riad_Flame,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "Flame"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})

RaidSection:AddToggle({
	Name = "Auto Ice Raids",
	Flag = "Ice_raid",
	Value = _G.Riad_Ice,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "Ice"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})

RaidSection:AddToggle({
	Name = "Auto Quake Raids",
	Flag = "Quake_raid",
	Value = _G.Riad_Quake,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "Quake"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})

RaidSection:AddToggle({
	Name = "Auto Light Raids",
	Flag = "Light_raid",
	Value = _G.Riad_Light,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "Light"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})

RaidSection:AddToggle({
	Name = "Auto Dark Raids",
	Flag = "Dark_raid",
	Value = _G.Riad_Dark,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "Dark"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})

RaidSection:AddToggle({
	Name = "Auto String Raids",
	Flag = "String_raid",
	Value = _G.Riad_String,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "String"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})

RaidSection:AddToggle({
	Name = "Auto Rumble Raids",
	Flag = "Runble_raid",
	Value = _G.Riad_Rumble,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "Rumble"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})

RaidSection:AddToggle({
	Name = "Auto Magma Raids",
	Flag = "magma_raid",
	Value = _G.Riad_Magma,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "Magma"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})

RaidSection:AddToggle({
	Name = "Auto Human: Buddha Raids",
	Flag = "Buddha_raid",
	Value = _G.Riad_Buddha,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "Human: Buddha"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})

RaidSection:AddToggle({
	Name = "Auto Sand Raids",
	Flag = "Sand_raid",
	Value = _G.Riad_Sand,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "Sand"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})

RaidSection:AddToggle({
	Name = "Auto Phoenix Raids",
	Flag = "Phoenix_raid",
	Value = _G.Riad_Phoenix,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "Bird: Phoenix"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})

RaidSection:AddToggle({
	Name = "Auto Dough Raids",
	Flag = "Dough_raid",
	Value = _G.Riad_Dough,
	Callback = function(t, o)
		if newworld or sea3world then
            if t then
                oppen = "value"
                _G.AutoRaid = t
                _G.RaidIs = "Dough"
            else
                _G.AutoRaid = t
                pcall(function()
                    _G.tweennew:Cancel()
                end)
            end
        end
		savenaja()
	end
})



if _G.RepeatRaid then
	_G.AutoRaid = true
end










ttrr = "k"
    function checkfruit()
        wait(4)
        Checkf = ""
        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") and string.find(v.Name, "Fruit") then
                Checkf = v.Name
            end
        end
        for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if v:IsA("Tool") and string.find(v.Name, "Fruit") then
                Checkf = v.Name
            end
        end
        if game.Players.LocalPlayer.Backpack:FindFirstChild(Checkf) or
            game.Players.LocalPlayer.Character:FindFirstChild(Checkf) then
        elseif not game.Players.LocalPlayer.Backpack:FindFirstChild(Checkf) and
            not game.Players.LocalPlayer.Character:FindFirstChild(Checkf) then
            if _G.ServerHop and ttrr == "k" then
                _G.AutoRaid = false
                game:GetService("StarterGui"):SetCore("SendNotification", {
                    ["Title"] = "Server Hop",
                    ["Text"] = "ไม่มีผลปีศาจ",
                    ["Duration"] = 3
                }) 

                Hopey()
            end
        end
    end
]]

function lawraid()
	if not game.Workspace.Enemies:FindFirstChild("Order [Lv. 1250] [Raid Boss]") and not game.ReplicatedStorage:FindFirstChild("Order [Lv. 1250] [Raid Boss]") then
		if game.Players.LocalPlayer.Backpack:FindFirstChild("Microchip") or game.Players.LocalPlayer.Character:FindFirstChild("Microchip") then	
			fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon.Button.Main.ClickDetector)
			wait(3)
		else
			wait(3)
			if _G.Lawraid and game.Players.LocalPlayer.Data.Fragments.Value >= 1000 then
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","Microchip","2")		
			end
		end	
	else
		pcall(function()
			if game:GetService("Players").LocalPlayer.Character.Humanoid.Health >= game:GetService("Players").LocalPlayer.Character.Humanoid.MaxHealth * 30 / 100 then
				autobuso()
				EquipWeapon(_G.SelectWeapon)
				local v = lockmon("Order [Lv. 1250] [Raid Boss]")
				v.Humanoid.JumpPower = 0
				v.Humanoid.WalkSpeed = 0
				v.HumanoidRootPart.CanCollide = false
				v.Humanoid:ChangeState(14)
				standup.CFrame = v.HumanoidRootPart.CFrame + v.HumanoidRootPart.CFrame.lookVector * -25
				tp(standup.CFrame * CFrame.new(0, 10, 0))
			else
				repeat wait()
					local v = lockmon("Order [Lv. 1250] [Raid Boss]")
					standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 200, 0)
          			tp(standup.CFrame * CFrame.new(0, 4, 0))
				until (not game.Workspace.Enemies:FindFirstChild("Order [Lv. 1250] [Raid Boss]") and not game.ReplicatedStorage:FindFirstChild("Order [Lv. 1250] [Raid Boss]")) or not _G.Lawraid or game:GetService("Players").LocalPlayer.Character.Humanoid.Health >= game:GetService("Players").LocalPlayer.Character.Humanoid.MaxHealth * 60 / 100
			end
		end)
	end
end
spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if _G.Lawraid then
            lawraid()
        end
    end
end)
	function newraid()
		if _G.AutoRaid  then			
			if  (game.Players.LocalPlayer.Backpack:FindFirstChild("Special Microchip") or game.Players.LocalPlayer.Character:FindFirstChild("Special Microchip")) and game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == false then
					pcall(function()
						if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1") then
							game:GetService("Workspace")["_WorldOrigin"].Locations["Island 1"]:Destroy()
						end
						if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2") then
							game:GetService("Workspace")["_WorldOrigin"].Locations["Island 2"]:Destroy()
						end
						if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3") then
							game:GetService("Workspace")["_WorldOrigin"].Locations["Island 3"]:Destroy()
						end
						if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4") then
							game:GetService("Workspace")["_WorldOrigin"].Locations["Island 4"]:Destroy()
						end
						if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5") then
							game:GetService("Workspace")["_WorldOrigin"].Locations["Island 5"]:Destroy()
						end
					end)
					--wait(1)
					repeat wait()
						if newworld then
							fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon2.Button.Main.ClickDetector)
						elseif sea3world then
							fireclickdetector(game:GetService("Workspace").Map["Boat Castle"].RaidSummon2.Button.Main.ClickDetector)
						end
					until not _G.AutoRaid or (not game.Players.LocalPlayer.Backpack:FindFirstChild("Special Microchip") and not game.Players.LocalPlayer.Character:FindFirstChild("Special Microchip"))

				--wait(8) game.Players.LocalPlayer.Character.Humanoid.Health <= 0 or 
				repeat wait()

				until game.Players.LocalPlayer.Character.Humanoid.Health <= 0 or not _G.AutoRaid or game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1")

				pcall(function()
					_G.thxgod = game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1"):FindFirstChildWhichIsA("Folder").Name
				end)
				repeat wait()
					pcall(function()
						_G.tweennew:Cancel()
					end)
				until game.Players.LocalPlayer.Character.Humanoid.Health <= 0 or not _G.AutoRaid or game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == true
				--wait(7)
				Part = Instance.new('Part', workspace)
				Part.Size = Vector3.new(5, 0, 5)
				Part.Anchored = true
			elseif game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == true then
				_G.GrabAllFruit = false
				repeat wait()
					if game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == false then
					elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5") then
						if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5"):FindFirstChild(_G.thxgod) then
							--tp(game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5").CFrame * CFrame.new(0, 60, 0))
							Part.CFrame = game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5").CFrame * CFrame.new(0, 60, 0)
							tp(Part.CFrame *  CFrame.new(0, 3, 0))
						else
							game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5"):Destroy()
						end
					elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4") then
						
						if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4"):FindFirstChild(_G.thxgod) then
							--tp(game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4").CFrame * CFrame.new(0, 60, 0))
							Part.CFrame = game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4").CFrame * CFrame.new(0, 60, 0)
							tp(Part.CFrame *  CFrame.new(0, 3, 0))
						else
							game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4"):Destroy()
						end
					elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3") then						
						
						if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3"):FindFirstChild(_G.thxgod) then
							--tp(game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3").CFrame * CFrame.new(0, 60, 0))
							Part.CFrame = game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3").CFrame * CFrame.new(0, 60, 0)
							tp(Part.CFrame *  CFrame.new(0, 3, 0))
						else
							game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3"):Destroy()
						end
					elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2") then
						
						if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2"):FindFirstChild(_G.thxgod) then
							--tp(game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2").CFrame * CFrame.new(0, 60, 0))
							Part.CFrame = game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2").CFrame * CFrame.new(0, 60, 0)
							tp(Part.CFrame *  CFrame.new(0, 3, 0))
						else
							game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2"):Destroy()
						end
						
					elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1") then
						
						if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1"):FindFirstChild(_G.thxgod) then
							--tp(game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1").CFrame * CFrame.new(0, 60, 0))
							Part.CFrame = game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1").CFrame * CFrame.new(0, 60, 0)
							tp(Part.CFrame *  CFrame.new(0, 3, 0))
					
						else
							game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1"):Destroy()
						end
					end
				until not _G.AutoRaid == false or game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == false
			else
				wait(4)
				Checkf = ""
				if _G.ServerHop and game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == false then
					for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
						if v:IsA("Tool") and string.find(v.Name, "Fruit") then
							Checkf = v.Name
						end
					end
					for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
						if v:IsA("Tool") and string.find(v.Name, "Fruit") then
							Checkf = v.Name
						end
					end
					if game.Players.LocalPlayer.Backpack:FindFirstChild(Checkf) or
						game.Players.LocalPlayer.Character:FindFirstChild(Checkf) then
							game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Select", _G.RaidIs)
					elseif not game.Players.LocalPlayer.Backpack:FindFirstChild(Checkf) and
						not game.Players.LocalPlayer.Character:FindFirstChild(Checkf) then
						if _G.ServerHop  then
							_G.AutoRaid = false
							game:GetService("StarterGui"):SetCore("SendNotification", {
								["Title"] = "Server Hop",
								["Text"] = "ไม่มีผลปีศาจ",
								["Duration"] = 3
							}) 

							Hopey()
						end
					end
				else
					game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Select", _G.RaidIs)
				end
			
					_G.GrabAllFruit = false
					game:GetService("StarterGui"):SetCore("SendNotification", {
						["Title"] = "ปิดดึงผลอ้อโต้",
						["Text"] = "จะดึงผลต้องไปเปิดใหม่",
						["Duration"] = 4,
						["Button1"] = "ตกลง"
					}) 
				--game:GetService("Players").LocalPlayer.Character.Humanoid:UnequipTools()
			end
		end
	end
	spawn(function()
        while wait(.1) do
			if _G.AutoRaid  then
				_G.bringmob = false
				pcall(function()
					newraid()
				end)
				
			end
		end
	end)

	spawn(function()
        while wait(.1) do
            if _G.KillAura then
				for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
					if _G.KillAura and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and (v.HumanoidRootPart.Position-game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 400 then
						pcall(function()
							repeat wait()
								v.Humanoid.Health = 0
                                v.Humanoid.MaxHealth = 0
                                namaura = v.Name
							until not _G.KillAura or v.Humanoid.Health <= 0 or not v.Parent
						end)
					end
				end
					pcall(function()
						game.ReplicatedStorage:FindFirstChild(namaura).Humanoid.Health = 0
						game.ReplicatedStorage:FindFirstChild(namaura).MaxHealth = 0
					end)
            end
        end
    end)

    spawn(function()
        while wait(.1) do
            if _G.AutoAwake then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Awakener", "Check")
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Awakener", "Awaken")
            end
        end
    end)

    spawn(function()
        while wait(.1) do
            if _G.DevilFruitESP then
                for i, v in pairs(game.Workspace:GetChildren()) do
                    if string.find(v.Name, "Fruit") and
                        not v:FindFirstChild("BillboardGui") and _G.DevilFruitESP then
                        if v:IsA("Tool") or v:IsA("Model") then
                            BillboardGui = Instance.new("BillboardGui")
                            TextLabel = Instance.new("TextLabel")
                            BillboardGui.Parent = v.Handle.Parent
                            BillboardGui.Adornee = v.Handle
                            BillboardGui.AlwaysOnTop = true
                            BillboardGui.Size = UDim2.new(0, 5, 0, 5)
                            BillboardGui.StudsOffset = Vector3.new(0, 1, 0)

                            TextLabel.ZIndex = 10
                            TextLabel.Parent = BillboardGui
                            TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
                            TextLabel.BackgroundTransparency = 1
                            TextLabel.Position = UDim2.new(0, 0, 0, -35)
                            TextLabel.Size = UDim2.new(1, 0, 10, 0)
                            TextLabel.Font = "Cartoon"
                            TextLabel.Text = v.Name .. "\n" ..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Handle.Position).magnitude)
                            TextLabel.FontSize = "Size18"
                            TextLabel.TextColor3 = Color3.new(2, 0, 0)
                            TextLabel.TextStrokeTransparency = 0.5
                        end
                    end
                end
                for i, v in pairs(game.Workspace:GetChildren()) do
                    if string.find(v.Name, "Fruit") then
                        if v:IsA("Tool") or v:IsA("Model") then
                            if v:FindFirstChild("BillboardGui") then
                                pcall(function()
                                    game:GetService("Workspace")[v.Name].BillboardGui.TextLabel.Text = v.Name .. "\n" ..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position -v.Handle .Position).magnitude) .." m."
                                end)
                            end
                        end
                    end
                end
            end
            if _G.DevilFruitESP == false then
                for i, v in pairs(game.Workspace:GetChildren()) do
                    if string.find(v.Name, "Fruit") then
                        if v:IsA("Tool") or v:IsA("Model") then
                            if v:FindFirstChild("BillboardGui") then
                                v.BillboardGui:Destroy()
                            end
                        end

                    end
                end
            end
        end
    end)

    spawn(function()
        while wait(.1) do
            if _G.Fruitnew then
                for _, v in pairs(game:GetService("Workspace").AppleSpawner:GetChildren()) do
                    if string.find(v.Name, "Apple") and _G.Fruitnew then
                        if v:IsA("Tool") and not v.Handle:FindFirstChild("BillboardGui") then
                            BillboardGui1 = Instance.new("BillboardGui")
                            TextLabel2 = Instance.new("TextLabel")
                            BillboardGui1.Parent = v.Handle.Mesh.Parent
                            BillboardGui1.Adornee = v.Handle
                            BillboardGui1.AlwaysOnTop = true
                            BillboardGui1.Size = UDim2.new(0, 5, 0, 5)
                            BillboardGui1.StudsOffset = Vector3.new(0, 1, 0)

                            TextLabel2.ZIndex = 10
                            TextLabel2.Parent = BillboardGui1
                            TextLabel2.BackgroundColor3 = Color3.new(1, 1, 1)
                            TextLabel2.BackgroundTransparency = 1
                            TextLabel2.Position = UDim2.new(0, 0, 0, -35)
                            TextLabel2.Size = UDim2.new(1, 0, 10, 0)
                            TextLabel2.Font = "Cartoon"
                            --     TextLabel2.Text = "Apple"

                            TextLabel2.FontSize = "Size18"
                            -- TextLabel2.Text = v.Parent:upper()
                            TextLabel2.TextStrokeTransparency = 0.5

                        end

                    end
                end
                for i, v in pairs(game:GetService("Workspace").AppleSpawner:GetChildren()) do
                    if string.find(v.Name, "Apple") then
                        if v:IsA("Tool") and v.Handle:FindFirstChild("BillboardGui") then
                            pcall(function()
                                TextLabel2.TextColor3 = Color3.fromRGB(248, 17, 0)
                                v.Handle.BillboardGui.TextLabel.Text = "Apple\n" ..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Handle.Position).magnitude) .." m."        
                            end)

                        end
                    end
                end

            end
            if _G.Fruitnew == false then
                pcall(function()
                    for i, v in pairs(game:GetService("Workspace").AppleSpawner:GetChildren()) do
                        if string.find(v.Name, "Apple") then
                            if v:IsA("Tool") and
                                v.Handle:FindFirstChild("BillboardGui") then
                                v.Handle.BillboardGui:Destroy()
                            end
                        end
                    end
                end) 
            end
        end
    end)

    spawn(function()
        while wait(.1) do
            if _G.Fruitnew then
                for _, v in pairs(game:GetService("Workspace").PineappleSpawner:GetChildren()) do
                    if string.find(v.Name, "Pineapple") and _G.Fruitnew then
                        if v:IsA("Tool") and not v.Handle:FindFirstChild("BillboardGui") then

                            BillboardGui1 = Instance.new("BillboardGui")
                            TextLabel2 = Instance.new("TextLabel")
                            BillboardGui1.Parent = v.Handle.TouchInterest.Parent
                            BillboardGui1.Adornee = v.Handle
                            BillboardGui1.AlwaysOnTop = true
                            BillboardGui1.Size = UDim2.new(0, 5, 0, 5)
                            BillboardGui1.StudsOffset = Vector3.new(0, 1, 0)

                            TextLabel2.ZIndex = 10
                            TextLabel2.Parent = BillboardGui1
                            TextLabel2.BackgroundColor3 = Color3.new(1, 1, 1)
                            TextLabel2.BackgroundTransparency = 1
                            TextLabel2.Position = UDim2.new(0, 0, 0, -35)
                            TextLabel2.Size = UDim2.new(1, 0, 10, 0)
                            TextLabel2.Font = "Cartoon"
                            --     TextLabel2.Text = "Apple"

                            TextLabel2.FontSize = "Size18"
                            -- TextLabel2.Text = v.Parent:upper()
                            TextLabel2.TextStrokeTransparency = 0.5

                        end

                    end
                end
                for i, v in pairs(game:GetService("Workspace").PineappleSpawner:GetChildren()) do
                    if string.find(v.Name, "Pineapple") then
                        if v:IsA("Tool") and v.Handle:FindFirstChild("BillboardGui") then
                            pcall(function()
                                TextLabel2.TextColor3 = Color3.fromRGB(255, 187, 0)
                                v.Handle.BillboardGui.TextLabel.Text = "Pineapple\n" ..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Handle.Position).magnitude) .." m."    
                            end)
                        end
                    end
                end

            end
            pcall(function()
                if _G.Fruitnew == false then
                    for i, v in pairs(game:GetService("Workspace").PineappleSpawner:GetChildren()) do
                        if string.find(v.Name, "Pineapple") then
                            if v:IsA("Tool") and
                                v.Handle:FindFirstChild("BillboardGui") then
                                v.Handle.BillboardGui:Destroy()
                            end
                        end
                    end
                end
            end)
            
        end
    end)

    spawn(function()
        while wait(.1) do
            if _G.Fruitnew then
                for _, v in pairs(game:GetService("Workspace").BananaSpawner:GetChildren()) do
                    if string.find(v.Name, "Banana") and _G.Fruitnew then
                        if v:IsA("Tool") and not v.Handle:FindFirstChild("BillboardGui") then
                            BillboardGui1 = Instance.new("BillboardGui")
                            TextLabel2 = Instance.new("TextLabel")
                            BillboardGui1.Parent = v.Handle.Mesh.Parent
                            BillboardGui1.Adornee = v.Handle
                            BillboardGui1.AlwaysOnTop = true
                            BillboardGui1.Size = UDim2.new(0, 5, 0, 5)
                            BillboardGui1.StudsOffset = Vector3.new(0, 1, 0)

                            TextLabel2.ZIndex = 10
                            TextLabel2.Parent = BillboardGui1
                            TextLabel2.BackgroundColor3 = Color3.new(1, 1, 1)
                            TextLabel2.BackgroundTransparency = 1
                            TextLabel2.Position = UDim2.new(0, 0, 0, -35)
                            TextLabel2.Size = UDim2.new(1, 0, 10, 0)
                            TextLabel2.Font = "Cartoon"
                            TextLabel2.FontSize = "Size18"      
                            TextLabel2.TextStrokeTransparency = 0.5

                        end

                    end
                end
                for i, v in pairs(game:GetService("Workspace").BananaSpawner:GetChildren()) do
                    if string.find(v.Name, "Banana") then
                        if v:IsA("Tool") and v.Handle:FindFirstChild("BillboardGui") then
                            pcall(function()
                                TextLabel2.TextColor3 = Color3.fromRGB(238, 255, 0)
                                v.Handle.BillboardGui.TextLabel.Text = "Banana\n" ..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Handle.Position).magnitude) .." m."    
                            end)
                        end
                    end
                end

            end
            pcall(function()
                if _G.Fruitnew == false then
                    for i, v in pairs(game:GetService("Workspace").BananaSpawner:GetChildren()) do
                        if string.find(v.Name, "Banana") then
                            if v:IsA("Tool") and v.Handle:FindFirstChild("BillboardGui") then
                                v.Handle.BillboardGui:Destroy()
                            end
                        end
                    end
                end
            end)
        end
    end)

    spawn(function()
        while wait(.1) do
            if _G.ChestESP then
                for _, v in pairs(game.Workspace:GetChildren()) do
                    if string.find(v.Name, "Chest") and not v:FindFirstChild("BillboardGui") and _G.ChestESP then
                        if v:IsA("Part") then
                            BillboardGui1 = Instance.new("BillboardGui")
                            TextLabel2 = Instance.new("TextLabel")
                            BillboardGui1.Parent = v.Mesh.Parent
                            BillboardGui1.Adornee = v
                            BillboardGui1.AlwaysOnTop = true
                            BillboardGui1.Size = UDim2.new(0, 5, 0, 5)
                            BillboardGui1.StudsOffset = Vector3.new(0, 1, 0)

                            TextLabel2.ZIndex = 10
                            TextLabel2.Parent = BillboardGui1
                            TextLabel2.BackgroundColor3 = Color3.new(1, 1, 1)
                            TextLabel2.BackgroundTransparency = 1
                            TextLabel2.Position = UDim2.new(0, 0, 0, -35)
                            TextLabel2.Size = UDim2.new(1, 0, 10, 0)
                            TextLabel2.Font = "Cartoon"
                            TextLabel2.FontSize = "Size18"
                            -- TextLabel2.Text = v.Parent:upper()
                            TextLabel2.TextStrokeTransparency = 0.5

                        end
                        if v.Name == "Chest1" then
                            TextLabel2.TextColor3 = Color3.fromRGB(161, 112, 6)
                            TextLabel2.Text = "Brone Chest"
                        end
                        if v.Name == "Chest2" then
                            TextLabel2.TextColor3 = Color3.fromRGB(238, 255, 0)
                            TextLabel2.Text = "Gold Chest"
                        end
                        if v.Name == "Chest3" then
                            TextLabel2.TextColor3 = Color3.fromRGB(132, 255, 245)
                            TextLabel2.Text = "Silver Chest"
                        end

                    end
                end
                for i, v in pairs(game.Workspace:GetChildren()) do
                    if string.find(v.Name, "Chest") then
                        if v:IsA("Part") and v:FindFirstChild("BillboardGui") then
                            pcall(function()  
                                if v.Name == "Chest1" then
                                    v.BillboardGui.TextLabel.Text = "Brone Chest\n" ..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude) .." m."
                                end
                                if v.Name == "Chest2" then
                                    v.BillboardGui.TextLabel.Text ="Gold Chest\n" ..math.round( (game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude) .." m."
                                end
                                if v.Name == "Chest3" then
                                    v.BillboardGui.TextLabel.Text ="Silver Chest\n" ..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude) .." m."
                                end
                            end)
                        end
                    end
                end

            end
            pcall(function()  
                if _G.ChestESP == false then
                    for i, v in pairs(game.Workspace:GetChildren()) do
                        if string.find(v.Name, "Chest") then
                            if v:IsA("Part") and v:FindFirstChild("BillboardGui") then
                                v.BillboardGui:Destroy()
                            end
                        end
                    end
                end
            end)
        end
    end)

    spawn(function()
        while wait(.1) do
            if _G.FlowerESP then
                for _, v in pairs(game.Workspace:GetChildren()) do
                    if string.find(v.Name, "Flower") and
                        not v:FindFirstChild("BillboardGui") and _G.FlowerESP then
                        if v:IsA("Part") then
                            BillboardGui2 = Instance.new("BillboardGui")
                            TextLabel3 = Instance.new("TextLabel")
                            BillboardGui2.Parent = v.Mesh.Parent
                            BillboardGui2.Adornee = v
                            BillboardGui2.AlwaysOnTop = true
                            BillboardGui2.Size = UDim2.new(0, 5, 0, 5)
                            BillboardGui2.StudsOffset = Vector3.new(0, 1, 0)

                            TextLabel3.ZIndex = 10
                            TextLabel3.Parent = BillboardGui2
                            TextLabel3.BackgroundColor3 = Color3.new(1, 1, 1)
                            TextLabel3.BackgroundTransparency = 1
                            TextLabel3.Position = UDim2.new(0, 0, 0, -35)
                            TextLabel3.Size = UDim2.new(1, 0, 10, 0)
                            TextLabel3.Font = "Cartoon"
                            TextLabel3.FontSize = "Size18"
                            TextLabel3.TextStrokeTransparency = 0.5
                        end
                        if v.Name == "Flower1" then
                            TextLabel3.TextColor3 = Color3.fromRGB(26, 0, 173)
                            TextLabel3.Text = "Blue Flower"
                        end
                        if v.Name == "Flower2" then
                            TextLabel3.TextColor3 = Color3.fromRGB(209, 0, 0)
                            TextLabel3.Text = "Red Flower"
                        end

                    end
                end
                for i, v in pairs(game.Workspace:GetChildren()) do
                    if string.find(v.Name, "Flower") then
                        if v:IsA("Part") and v:FindFirstChild("BillboardGui") then
                            pcall(function()
                                if v.Name == "Flower1" then
                                    v.BillboardGui.TextLabel.Text = "Blue Flowe\n" ..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude) .. " m."
                                end
                                if v.Name == "Flower2" then
                                    v.BillboardGui.TextLabel.Text ="Red Flower\n" ..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude) .." m."
                                end    
                            end)
                        end
                    end
                end

            end
            if _G.FlowerESP == false then
                for i, v in pairs(game.Workspace:GetChildren()) do
                    if string.find(v.Name, "Flower") then
                        if v:IsA("Part") and v:FindFirstChild("BillboardGui") then
                            v.BillboardGui:Destroy()
                        end
                    end
                end
            end
        end
    end)

    spawn(function()
        while wait(.1) do
            if _G.PlayerESP then
                for _, v in pairs(game.Players:GetChildren()) do
                    if v.Team == nil then
                    else
                        if v.Character and v.Character:FindFirstChild("Head") and not v.Character:FindFirstChild("BillboardGui") then
                            -- print(v)
                            BillboardGui3 =Instance.new("BillboardGui",v.Character.Head.Parent)
                            TextLabel4 = Instance.new("TextLabel")
                            txt = Instance.new("TextLabel")
                            -- BillboardGui3.Parent = v.Character.Head
                            BillboardGui3.Adornee = v.Character.Head
                            BillboardGui3.AlwaysOnTop = true
                            BillboardGui3.Size = UDim2.new(0, 5, 0, 10)
                            BillboardGui3.StudsOffset = Vector3.new(0, 1, 0)
                            TextLabel4.ZIndex = 10
                            TextLabel4.Parent = BillboardGui3
                            TextLabel4.BackgroundColor3 = Color3.new(1, 1, 1)
                            TextLabel4.BackgroundTransparency = 1
                            TextLabel4.Position = UDim2.new(0, 0, 0, -52)
                            TextLabel4.Size = UDim2.new(1, 0, 10, 0)
                            TextLabel4.Font = "Cartoon"
                            TextLabel4.FontSize = "Size18"
                            TextLabel4.Text = v.Character.Head.Parent.Name
                            TextLabel4.TextStrokeTransparency = 0.5
                            txt.ZIndex = 10
                            txt.Name = "txt"
                            txt.Parent = BillboardGui3
                            txt.BackgroundColor3 = Color3.new(1, 1, 1)
                            txt.BackgroundTransparency = 1
                            txt.Position = UDim2.new(0, 0, 0, -80)
                            txt.Size = UDim2.new(1, 0, 10, 0)
                            txt.Font = "Cartoon"
                            txt.FontSize = "Size18"
                            txt.TextSize = 20
                            txt.TextColor3 = Color3.fromRGB(255, 217, 0)
                            txt.Text = v.Character.Head.Parent.Name
                            txt.TextStrokeTransparency = 0.5
                            if game.Players.localPlayer.Team == v.Team then
                                TextLabel4.TextColor3 =Color3.fromRGB(255, 0, 0)
                                -- v.Character.BillboardGui.TextLabel.Text = v.Character.Head.Parent.Name.."\n"..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude).." m."
                            else
                                TextLabel4.TextColor3 =Color3.fromRGB(0, 4, 255)
                                -- v.Character.BillboardGui.TextLabel.Text =  v.Character.Humanoid.Health.."/"..v.Character.Humanoid.MaxHealth.."/n"..v.Character.Head.Parent.Name.."\n"..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude).." m."
                            end
                        end

                    end
                end
                for i, v in pairs(game.Players:GetChildren()) do
                    pcall(function()
                        if v.Character and v.Character:FindFirstChild("Head") and
                            v.Character:FindFirstChild("BillboardGui") then
                            pcall(function()
                                v.Character.BillboardGui.txt.Text = math.round(v.Character.Humanoid.Health) .. "/" ..v.Character.Humanoid.MaxHealth ..""
                                v.Character.BillboardGui.TextLabel.Text = "" ..v.Character.Head.Parent.Name .."\n" ..math.round((game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude) .." m."
                            end)
                        end
                    end)
                end
            end
            if _G.PlayerESP == false then
                for i, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("Head") and
                        v.Character:FindFirstChild("BillboardGui") then
                        v.Character.BillboardGui:Destroy()
                    end
                end
            end
        end
    end)


    function AutoDonSwan()
        if game.Workspace.Enemies:FindFirstChild("Don Swan [Lv. 1000] [Boss]") then
            local mobs = game.Workspace.Enemies:GetChildren()
            for i = 1, #mobs do
                local v = mobs[i]
                if v.Name == "Don Swan [Lv. 1000] [Boss]" and v:IsA("Model") and
                    v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                    return v
                end
            end
        elseif not game.Workspace.Enemies:FindFirstChild("Don Swan [Lv. 1000] [Boss]") then
            --standup.CFrame = game.ReplicatedStorage:FindFirstChild("Don Swan [Lv. 1000] [Boss]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
            --tp(standup.CFrame * CFrame.new(0, 4, 0))
			if game.ReplicatedStorage:FindFirstChild("Don Swan [Lv. 1000] [Boss]") then
				standup.CFrame = game.ReplicatedStorage:FindFirstChild("Don Swan [Lv. 1000] [Boss]").HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Don Swan [Lv. 1000]") then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Don Swan [Lv. 1000]"].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			elseif game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:FindFirstChild("Don Swan") then
				standup.CFrame = game:GetService("Workspace")["_WorldOrigin"].EnemySpawns["Don Swan"].CFrame * CFrame.new(0, Instantnum, 0)
				tp(standup.CFrame * CFrame.new(0, 4, 0))
			end
        end
    end
    
    function AutoDonSwanFarm()
        if _G.AutoDonSwan then
            pcall(function()
                local v = AutoDonSwan()
                EquipWeapon(_G.SelectWeapon)
                autobuso()
                if hit then
                    v.HumanoidRootPart.Transparency = 1
                else
                    v.HumanoidRootPart.Transparency = 0.75
                end
                pcall(function()
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.HumanoidRootPart.CanCollide = false
                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                    standup.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, Instantnum, 0)
                    tp(standup.CFrame * CFrame.new(0, 4, 0))
    
                end)
            end)
            if _G.ServerHop == true and not game.Workspace.Enemies:FindFirstChild("Don Swan [Lv. 1000] [Boss]") and not game.ReplicatedStorage:FindFirstChild("Don Swan [Lv. 1000] [Boss]") then 
                    Hopey() 
             end
        end
    
    end
    
    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            if _G.AutoDonSwan then AutoDonSwanFarm() end
        end
    end)
    
    if _G.FPSBOOT then
        pcall(function()
            local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
            local g = game
            local w = g.Workspace
            local l = g.Lighting
            local t = w.Terrain
            t.WaterWaveSize = 0
            t.WaterWaveSpeed = 0
            t.WaterReflectance = 0
            t.WaterTransparency = 0
            l.GlobalShadows = false
            l.FogEnd = 9e9
            l.Brightness = 0
            settings().Rendering.QualityLevel = "Level01"
            for i, v in pairs(g:GetDescendants()) do
                if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or
                    v:IsA("TrussPart") then
                    v.Material = "Plastic"
                    v.Reflectance = 0
                elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                    v.Transparency = 1
                elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                    v.Lifetime = NumberRange.new(0)
                elseif v:IsA("Explosion") then
                    v.BlastPressure = 1
                    v.BlastRadius = 1
                elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or
                    v:IsA("Sparkles") then
                    v.Enabled = false
                elseif v:IsA("MeshPart") then
                    v.Material = "Plastic"
                    v.Reflectance = 0
                    v.TextureID = 10385902758728957
                end
            end
            for i, e in pairs(l:GetChildren()) do
                if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or
                     e:IsA("BloomEffect") or 
                    e:IsA("DepthOfFieldEffect") then e.Enabled = false end --e:IsA("ColorCorrectionEffect") or
            end
        end)
    end
    
    spawn(function()
        while wait(1) do
            if _G.GrabAllFruit1mil then
                for i, v in pairs(game.Workspace:GetChildren()) do
                    if string.find(v.Name, "Fruit") then
                        if v:IsA("Tool") and v.Name == "Quake Fruit" or v.Name ==
                            "Human: Buddha Fruit" or v.Name == "String Fruit" or
                            v.Name == "Bird: Phoenix Fruit" or v.Name ==
                            "Rumble Fruit" or v.Name == "Paw Fruit" or v.Name ==
                            "Gravity Fruit" or v.Name == "Dough Fruit" or v.Name ==
                            "Control Fruit" or v.Name == "Dragon Fruit" or
                            v.Name == "Venom Fruit" then
                            v.Handle.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
                        end
                    end
                end
    
            end
        end
    end)
    
    spawn(function()
        while wait(4) do
            if _G.OpenDonswan then
                if game.Players.LocalPlayer.Backpack:FindFirstChild("Quake Fruit") or
                    game.Players.LocalPlayer.Character:FindFirstChild("Quake Fruit") or
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Human: Buddha Fruit") or
                    game.Players.LocalPlayer.Character:FindFirstChild("Human: Buddha Fruit") or
                    game.Players.LocalPlayer.Backpack:FindFirstChild("String Fruit") or
                    game.Players.LocalPlayer.Character:FindFirstChild("String Fruit") or
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Bird: Phoenix Fruit") or
                    game.Players.LocalPlayer.Character:FindFirstChild("Bird: Phoenix Fruit") or
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Rumble Fruit") or
                    game.Players.LocalPlayer.Character:FindFirstChild("Rumble Fruit") or
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Paw Fruit") or
                    game.Players.LocalPlayer.Character:FindFirstChild("Paw Fruit") or
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Gravity Fruit") or
                    game.Players.LocalPlayer.Character:FindFirstChild("Gravity Fruit") or
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Dough Fruit") or
                    game.Players.LocalPlayer.Character:FindFirstChild("Dough Fruit") or
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Control Fruit") or
                    game.Players.LocalPlayer.Character:FindFirstChild("Control Fruit") or
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Dragon Fruit") or
                    game.Players.LocalPlayer.Character:FindFirstChild("Dragon Fruit") or
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Venom Fruit") or
                    game.Players.LocalPlayer.Character:FindFirstChild("Venom Fruit") then
    
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Quake Fruit") or
                        game.Players.LocalPlayer.Character:FindFirstChild( "Quake Fruit") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool("Quake Fruit")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Human: Buddha Fruit") or
                        game.Players.LocalPlayer.Character:FindFirstChild("Human: Buddha Fruit") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool("Human: Buddha Fruit")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("String Fruit") or
                        game.Players.LocalPlayer.Character:FindFirstChild("String Fruit") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool("Key")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Bird: Phoenix Fruit") or
                        game.Players.LocalPlayer.Character:FindFirstChild("Bird: Phoenix Fruit") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool("Bird: Phoenix Fruit")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Rumble Fruit") or
                        game.Players.LocalPlayer.Character:FindFirstChild("Rumble Fruit") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool("Rumble Fruit")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Paw Fruit") or
                        game.Players.LocalPlayer.Character:FindFirstChild("Paw Fruit") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool("Paw Fruit")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Gravity Fruit") or
                        game.Players.LocalPlayer.Character:FindFirstChild("Gravity Fruit") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool("Gravity Fruit")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Dough Fruit") or
                        game.Players.LocalPlayer.Character:FindFirstChild("Dough Fruit") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool("Dough Fruit")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Control Fruit") or
                        game.Players.LocalPlayer.Character:FindFirstChild("Control Fruit") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool("Control Fruit")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Dragon Fruit") or
                        game.Players.LocalPlayer.Character:FindFirstChild("Dragon Fruit") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool("Dragon Fruit")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Venom Fruit") or
                        game.Players.LocalPlayer.Character:FindFirstChild("Venom Fruit") then
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool("Venom Fruit")
                    end
                    wait(1)
                    tp(CFrame.new(-338.400787, 331.860565, 646.779358,0.975018859, -6.09512885e-09, 0.222122028,8.65092886e-09, 1, -1.05333555e-08,-0.222122028, 1.21917827e-08, 0.975018859))
                    _G.tweennew.Completed:Wait()
                    wait(1)
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "1")
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "2")
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "3")
                    wait(1)
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "1")
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "2")
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "3")
                    wait(1)
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "1")
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "2")
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TalkTrevor", "3")
                    wait(1)
                    tp(CFrame.new(-380.411011, 72.8180008, 303.237))
                    _G.tweennew.Completed:Wait()
                    _G.OpenDonswan = false
                else
                    Hopey()
                end
            end
        end
    end)





	spawn(function()
		while wait(10) do
			if _G.ServerHopNow then
				Hopey()
			end
		end
	end)
	

	

	_G.eghgrthrtyhj = true
	if game:GetService("CoreGui"):FindFirstChild("Root") then
		game:GetService("CoreGui").Root.main.Visible = true
	end
	
	if _G.HideUi and game:GetService("CoreGui"):FindFirstChild("Root") then
		game:GetService("CoreGui").Root.main.Visible = false
	end
	if _G.SaveConfig then
		pcall(function()
			Persistence:LoadFile(_G.ModeSetting)
		end)
		
	end

	




